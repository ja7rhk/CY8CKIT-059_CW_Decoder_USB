ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CLCD_control.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.CLCD_clear,"ax",%progbits
  19              		.align	2
  20              		.global	CLCD_clear
  21              		.thumb
  22              		.thumb_func
  23              		.type	CLCD_clear, %function
  24              	CLCD_clear:
  25              	.LFB119:
  26              		.file 1 "CLCD_control.c"
   1:CLCD_control.c **** /* ========================================
   2:CLCD_control.c ****  *
   3:CLCD_control.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:CLCD_control.c ****  * All Rights Reserved
   5:CLCD_control.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:CLCD_control.c ****  *
   7:CLCD_control.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:CLCD_control.c ****  * WHICH IS THE PROPERTY OF your company.
   9:CLCD_control.c ****  *
  10:CLCD_control.c ****  * ========================================
  11:CLCD_control.c **** */
  12:CLCD_control.c **** 
  13:CLCD_control.c **** /* PSoC5 */
  14:CLCD_control.c **** #include <device.h>
  15:CLCD_control.c **** #include <stdio.h>
  16:CLCD_control.c **** #include <stdlib.h>
  17:CLCD_control.c **** #include <math.h>
  18:CLCD_control.c **** #include "arm_math.h"   /* (2016.7.26) */
  19:CLCD_control.c **** /* FreeRTOS */
  20:CLCD_control.c **** #include "FreeRTOS.h"
  21:CLCD_control.c **** #include "task.h"
  22:CLCD_control.c **** #include "queue.h"
  23:CLCD_control.c **** #include "semphr.h"
  24:CLCD_control.c **** /* API */
  25:CLCD_control.c **** #include "I2C_CLCD.h"
  26:CLCD_control.c **** #include "rot.h"
  27:CLCD_control.c **** #include "key.h"
  28:CLCD_control.c **** /* parameters */
  29:CLCD_control.c **** #include "main.h"
  30:CLCD_control.c **** 
  31:CLCD_control.c **** /* the followings are defined externaly */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 2


  32:CLCD_control.c **** extern float32_t ANT1_buf_f32[MAX_BUF_SIZE];   /* A * sin (theta) */
  33:CLCD_control.c **** extern float32_t ANT2_buf_f32[MAX_BUF_SIZE];   /* B * sin (theta + phi) */
  34:CLCD_control.c **** extern float32_t dst_buf_f32[MAX_BUF_SIZE];
  35:CLCD_control.c **** 
  36:CLCD_control.c **** extern xQueueHandle xQueue_KEY[2];
  37:CLCD_control.c **** extern xQueueHandle xQueue_ROT;        /* Queue Data from Task_ROT(ROT_ENC_Handler) */
  38:CLCD_control.c **** extern xQueueHandle xQueue_RXD;        /* Queue Data from Task_RADIO */
  39:CLCD_control.c **** extern xQueueHandle xQueue_RSSI;       /* Queue Data from CY_ISR(ADC_SigDel_Handler) */
  40:CLCD_control.c **** 
  41:CLCD_control.c **** extern xSemaphoreHandle xMutex_RX_BUF;     /* Mutex for RX Data Buffer */
  42:CLCD_control.c **** 
  43:CLCD_control.c **** // Global Variables for CLCD
  44:CLCD_control.c **** enum CLCD_mode mode = DISTANCE;    /* CLCD display mode */
  45:CLCD_control.c **** 
  46:CLCD_control.c **** #define GAIN_x1    3
  47:CLCD_control.c **** int16 gain = GAIN_x1;     /* start with gain x1 */
  48:CLCD_control.c **** 
  49:CLCD_control.c **** // Adjustment of current parameter
  50:CLCD_control.c **** uint16 Vth = GAIN_01_TH;
  51:CLCD_control.c **** uint16 Vbias = IF_BIAS_01;
  52:CLCD_control.c **** int16 Adj_Vth = 0;
  53:CLCD_control.c **** int16 Adj_Vbias = 0;
  54:CLCD_control.c **** 
  55:CLCD_control.c **** 
  56:CLCD_control.c **** /***************************************************************************
  57:CLCD_control.c **** *	Task_CLCD
  58:CLCD_control.c **** ****************************************************************************/
  59:CLCD_control.c **** /* Constants for SetGain function */
  60:CLCD_control.c **** // total gain G is calculated as  G = magnification / rec_rf_gain
  61:CLCD_control.c **** typedef struct
  62:CLCD_control.c **** {
  63:CLCD_control.c ****     uint8   pga_gain;               // defined parameter in PGA module.
  64:CLCD_control.c ****     uint8   magnification;          // PGA gain.
  65:CLCD_control.c ****     uint8   rec_rf_gain;            // reciprocal RF gain. 4 means x(1/4)
  66:CLCD_control.c ****     uint8   threshold;
  67:CLCD_control.c ****     uint16  bias;
  68:CLCD_control.c **** }   GAIN_CTL_STRUCT;
  69:CLCD_control.c **** 
  70:CLCD_control.c **** const GAIN_CTL_STRUCT pga_gain[13] = {
  71:CLCD_control.c ****     {PGA_1_GAIN_01,  1u, 8u, GAIN_01_TH, IF_BIAS_R8},
  72:CLCD_control.c ****     {PGA_1_GAIN_01,  1u, 4u, GAIN_01_TH, IF_BIAS_R4},
  73:CLCD_control.c ****     {PGA_1_GAIN_01,  1u, 2u, GAIN_01_TH, IF_BIAS_R2},
  74:CLCD_control.c ****     {PGA_1_GAIN_01,  1u, 1u, GAIN_01_TH, IF_BIAS_01},       // default
  75:CLCD_control.c ****     {PGA_1_GAIN_02,  2u, 1u, GAIN_02_TH, IF_BIAS_01},
  76:CLCD_control.c ****     {PGA_1_GAIN_04,  4u, 1u, GAIN_04_TH, IF_BIAS_01},
  77:CLCD_control.c ****     {PGA_1_GAIN_08,  8u, 1u, GAIN_08_TH, IF_BIAS_01},
  78:CLCD_control.c ****     {PGA_1_GAIN_16, 16u, 1u, GAIN_16_TH, IF_BIAS_01},
  79:CLCD_control.c ****     {PGA_1_GAIN_24, 24u, 1u, GAIN_24_TH, IF_BIAS_01},
  80:CLCD_control.c ****     {PGA_1_GAIN_32, 32u, 1u, GAIN_32_TH, IF_BIAS_01},
  81:CLCD_control.c ****     {PGA_1_GAIN_48, 48u, 1u, GAIN_48_TH, IF_BIAS_01},
  82:CLCD_control.c ****     {PGA_1_GAIN_50, 50u, 1u, GAIN_50_TH, IF_BIAS_01},
  83:CLCD_control.c ****     {PGA_1_GAIN_MAX, 50u, 1u, GAIN_50_TH, IF_BIAS_01}
  84:CLCD_control.c **** };
  85:CLCD_control.c **** 
  86:CLCD_control.c **** #define GAIN_MAX    sizeof pga_gain / sizeof pga_gain[0]
  87:CLCD_control.c **** 
  88:CLCD_control.c **** typedef struct
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 3


  89:CLCD_control.c **** {
  90:CLCD_control.c ****     uint16  rms_mv_min;
  91:CLCD_control.c ****     uint16  rms_mv_max;
  92:CLCD_control.c ****     int8   gain_ctl;
  93:CLCD_control.c **** }   GAIN_AGC_TABLE;
  94:CLCD_control.c **** 
  95:CLCD_control.c **** const GAIN_AGC_TABLE pga_agc[9]= {
  96:CLCD_control.c ****     {0, 10, 4},
  97:CLCD_control.c ****     {10, 20, 3},
  98:CLCD_control.c ****     {20, 50, 2},
  99:CLCD_control.c ****     {50, 100, 1},
 100:CLCD_control.c ****     {200, 300, 0},
 101:CLCD_control.c ****     {300, 500, 0},
 102:CLCD_control.c ****     {500, 800, -1},
 103:CLCD_control.c ****     {800, 1000, -2},
 104:CLCD_control.c ****     {1000, 2000, -4},
 105:CLCD_control.c **** };
 106:CLCD_control.c **** #define AGC_MAX     sizeof pga_agc / sizeof pga_agc[0]
 107:CLCD_control.c **** 
 108:CLCD_control.c **** typedef struct
 109:CLCD_control.c **** {
 110:CLCD_control.c ****     int16  angle_min;
 111:CLCD_control.c ****     int16  angle_max;
 112:CLCD_control.c ****     uint8  mark_position;   /* start column position */
 113:CLCD_control.c ****     uint8  n_mark;          /* number of bar array */
 114:CLCD_control.c **** }   DIR_TABLE;
 115:CLCD_control.c **** 
 116:CLCD_control.c **** const DIR_TABLE dir_tab[]= {
 117:CLCD_control.c ****     {-91, -77, 3, 0},
 118:CLCD_control.c ****     {-77, -63, 3, 1},
 119:CLCD_control.c ****     {-63, -49, 3, 2},
 120:CLCD_control.c ****     {-49, -35, 3, 3},
 121:CLCD_control.c ****     {-35, -21, 3, 4},
 122:CLCD_control.c ****     {-21,  -7, 3, 5},
 123:CLCD_control.c ****     { -7,   7, 3, 6},
 124:CLCD_control.c ****     {  7,  21, 3, 7},
 125:CLCD_control.c ****     { 21,  35, 3, 8},
 126:CLCD_control.c ****     { 35,  49, 3, 9},
 127:CLCD_control.c ****     { 49,  63, 3, 10},
 128:CLCD_control.c ****     { 63,  77, 3, 11},
 129:CLCD_control.c ****     { 77,  91, 3, 12}
 130:CLCD_control.c **** };
 131:CLCD_control.c **** #define DIR_MAX     sizeof dir_tab / sizeof dir_tab[0]
 132:CLCD_control.c **** 
 133:CLCD_control.c **** const char8 bar[][16] = {
 134:CLCD_control.c ****     {'|',255,255,255,255,255,255,'|',' ',' ',' ',' ',' ',' ','|', 0},
 135:CLCD_control.c ****     {'|',' ',255,255,255,255,255,'|',' ',' ',' ',' ',' ',' ','|', 0},
 136:CLCD_control.c ****     {'|',' ',' ',255,255,255,255,'|',' ',' ',' ',' ',' ',' ','|', 0},
 137:CLCD_control.c ****     {'|',' ',' ',' ',255,255,255,'|',' ',' ',' ',' ',' ',' ','|', 0},
 138:CLCD_control.c ****     {'|',' ',' ',' ',' ',255,255,'|',' ',' ',' ',' ',' ',' ','|', 0},
 139:CLCD_control.c ****     {'|',' ',' ',' ',' ',' ',255,'|',' ',' ',' ',' ',' ',' ','|', 0},
 140:CLCD_control.c ****     {'|',' ',' ',' ',' ',' ',' ',255,' ',' ',' ',' ',' ',' ','|', 0},
 141:CLCD_control.c ****     {'|',' ',' ',' ',' ',' ',' ','|',255,' ',' ',' ',' ',' ','|', 0},
 142:CLCD_control.c ****     {'|',' ',' ',' ',' ',' ',' ','|',255,255,' ',' ',' ',' ','|', 0},
 143:CLCD_control.c ****     {'|',' ',' ',' ',' ',' ',' ','|',255,255,255,' ',' ',' ','|', 0},
 144:CLCD_control.c ****     {'|',' ',' ',' ',' ',' ',' ','|',255,255,255,255,' ',' ','|', 0},
 145:CLCD_control.c ****     {'|',' ',' ',' ',' ',' ',' ','|',255,255,255,255,255,' ','|', 0},
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 4


 146:CLCD_control.c ****     {'|',' ',' ',' ',' ',' ',' ','|',255,255,255,255,255,255,'|', 0},
 147:CLCD_control.c **** };
 148:CLCD_control.c **** #define BAR_MAX     sizeof bar / sizeof bar[0]
 149:CLCD_control.c **** 
 150:CLCD_control.c **** void CLCD_clear(uint8 raw)
 151:CLCD_control.c **** {
  27              		.loc 1 151 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 152:CLCD_control.c ****     I2C_CLCD_Position(raw, 0u);
  36              		.loc 1 152 0
  37 0002 0021     		movs	r1, #0
  38 0004 FFF7FEFF 		bl	I2C_CLCD_Position
  39              	.LVL1:
 153:CLCD_control.c ****     I2C_CLCD_PrintString("                    ");
  40              		.loc 1 153 0
  41 0008 0148     		ldr	r0, .L3
  42 000a FFF7FEFF 		bl	I2C_CLCD_PrintString
  43              	.LVL2:
  44 000e 08BD     		pop	{r3, pc}
  45              	.L4:
  46              		.align	2
  47              	.L3:
  48 0010 00000000 		.word	.LC0
  49              		.cfi_endproc
  50              	.LFE119:
  51              		.size	CLCD_clear, .-CLCD_clear
  52              		.section	.text.CLCD_mode_switch,"ax",%progbits
  53              		.align	2
  54              		.global	CLCD_mode_switch
  55              		.thumb
  56              		.thumb_func
  57              		.type	CLCD_mode_switch, %function
  58              	CLCD_mode_switch:
  59              	.LFB120:
 154:CLCD_control.c **** }
 155:CLCD_control.c **** 
 156:CLCD_control.c **** void CLCD_mode_switch (void)
 157:CLCD_control.c **** {
  60              		.loc 1 157 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 24
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64 0000 10B5     		push	{r4, lr}
  65              		.cfi_def_cfa_offset 8
  66              		.cfi_offset 4, -8
  67              		.cfi_offset 14, -4
  68 0002 86B0     		sub	sp, sp, #24
  69              		.cfi_def_cfa_offset 32
 158:CLCD_control.c ****     char   str[BUFSIZE];
 159:CLCD_control.c **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 5


 160:CLCD_control.c ****     switch(mode)
  70              		.loc 1 160 0
  71 0004 674B     		ldr	r3, .L14
  72 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  73 0008 013B     		subs	r3, r3, #1
  74 000a 042B     		cmp	r3, #4
  75 000c 00F2C780 		bhi	.L5
  76 0010 DFE803F0 		tbb	[pc, r3]
  77              	.L8:
  78 0014 3D       		.byte	(.L7-.L8)/2
  79 0015 03       		.byte	(.L9-.L8)/2
  80 0016 20       		.byte	(.L10-.L8)/2
  81 0017 5A       		.byte	(.L11-.L8)/2
  82 0018 90       		.byte	(.L12-.L8)/2
  83 0019 00       		.p2align 1
  84              	.L9:
 161:CLCD_control.c ****     {
 162:CLCD_control.c ****         case SIGNAL:
 163:CLCD_control.c ****         /*                       "01234567890123456789" */
 164:CLCD_control.c ****             I2C_CLCD_Position(0u, 0u);
  85              		.loc 1 164 0
  86 001a 0020     		movs	r0, #0
  87 001c 0146     		mov	r1, r0
  88 001e FFF7FEFF 		bl	I2C_CLCD_Position
  89              	.LVL3:
 165:CLCD_control.c ****             I2C_CLCD_PrintString("ANT1:        [mV]   ");
  90              		.loc 1 165 0
  91 0022 6148     		ldr	r0, .L14+4
  92 0024 FFF7FEFF 		bl	I2C_CLCD_PrintString
  93              	.LVL4:
 166:CLCD_control.c ****             I2C_CLCD_Position(1u, 0u);
  94              		.loc 1 166 0
  95 0028 0120     		movs	r0, #1
  96 002a 0021     		movs	r1, #0
  97 002c FFF7FEFF 		bl	I2C_CLCD_Position
  98              	.LVL5:
 167:CLCD_control.c ****             I2C_CLCD_PrintString("ANT2:        [mV]   ");
  99              		.loc 1 167 0
 100 0030 5E48     		ldr	r0, .L14+8
 101 0032 FFF7FEFF 		bl	I2C_CLCD_PrintString
 102              	.LVL6:
 168:CLCD_control.c ****             I2C_CLCD_Position(2u, 0u);
 103              		.loc 1 168 0
 104 0036 0220     		movs	r0, #2
 105 0038 0021     		movs	r1, #0
 106 003a FFF7FEFF 		bl	I2C_CLCD_Position
 107              	.LVL7:
 169:CLCD_control.c ****             I2C_CLCD_PrintString("PGA Gain: x         ");
 108              		.loc 1 169 0
 109 003e 5C48     		ldr	r0, .L14+12
 110 0040 FFF7FEFF 		bl	I2C_CLCD_PrintString
 111              	.LVL8:
 170:CLCD_control.c ****             I2C_CLCD_Position(3u, 0u);
 112              		.loc 1 170 0
 113 0044 0320     		movs	r0, #3
 114 0046 0021     		movs	r1, #0
 115 0048 FFF7FEFF 		bl	I2C_CLCD_Position
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 6


 116              	.LVL9:
 171:CLCD_control.c ****             I2C_CLCD_PrintString("Phase:         [deg]");
 117              		.loc 1 171 0
 118 004c 5948     		ldr	r0, .L14+16
 119 004e FFF7FEFF 		bl	I2C_CLCD_PrintString
 120              	.LVL10:
 172:CLCD_control.c ****             break;
 121              		.loc 1 172 0
 122 0052 A4E0     		b	.L5
 123              	.L10:
 173:CLCD_control.c ****         case DIRECTION:
 174:CLCD_control.c ****         /*                       "01234567890123456789" */
 175:CLCD_control.c ****             I2C_CLCD_Position(0u, 0u);
 124              		.loc 1 175 0
 125 0054 0020     		movs	r0, #0
 126 0056 0146     		mov	r1, r0
 127 0058 FFF7FEFF 		bl	I2C_CLCD_Position
 128              	.LVL11:
 176:CLCD_control.c ****             I2C_CLCD_PrintString("   |      |      |  ");
 129              		.loc 1 176 0
 130 005c 5648     		ldr	r0, .L14+20
 131 005e FFF7FEFF 		bl	I2C_CLCD_PrintString
 132              	.LVL12:
 177:CLCD_control.c ****             I2C_CLCD_Position(1u, 0u);
 133              		.loc 1 177 0
 134 0062 0120     		movs	r0, #1
 135 0064 0021     		movs	r1, #0
 136 0066 FFF7FEFF 		bl	I2C_CLCD_Position
 137              	.LVL13:
 178:CLCD_control.c ****             I2C_CLCD_PrintString("Angle:         [deg]");
 138              		.loc 1 178 0
 139 006a 5448     		ldr	r0, .L14+24
 140 006c FFF7FEFF 		bl	I2C_CLCD_PrintString
 141              	.LVL14:
 179:CLCD_control.c ****             I2C_CLCD_Position(2u, 0u);
 142              		.loc 1 179 0
 143 0070 0220     		movs	r0, #2
 144 0072 0021     		movs	r1, #0
 145 0074 FFF7FEFF 		bl	I2C_CLCD_Position
 146              	.LVL15:
 180:CLCD_control.c ****             I2C_CLCD_PrintString("RMS:           [mV] ");
 147              		.loc 1 180 0
 148 0078 5148     		ldr	r0, .L14+28
 149 007a FFF7FEFF 		bl	I2C_CLCD_PrintString
 150              	.LVL16:
 181:CLCD_control.c ****             I2C_CLCD_Position(3u, 0u);
 151              		.loc 1 181 0
 152 007e 0320     		movs	r0, #3
 153 0080 0021     		movs	r1, #0
 154 0082 FFF7FEFF 		bl	I2C_CLCD_Position
 155              	.LVL17:
 182:CLCD_control.c ****             I2C_CLCD_PrintString("PGA Gain: x         ");
 156              		.loc 1 182 0
 157 0086 4A48     		ldr	r0, .L14+12
 158 0088 FFF7FEFF 		bl	I2C_CLCD_PrintString
 159              	.LVL18:
 183:CLCD_control.c ****             break;
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 7


 160              		.loc 1 183 0
 161 008c 87E0     		b	.L5
 162              	.L7:
 184:CLCD_control.c ****         case DISTANCE:
 185:CLCD_control.c ****         /*                       "01234567890123456789" */
 186:CLCD_control.c ****             I2C_CLCD_Position(0u, 0u);
 163              		.loc 1 186 0
 164 008e 0020     		movs	r0, #0
 165 0090 0146     		mov	r1, r0
 166 0092 FFF7FEFF 		bl	I2C_CLCD_Position
 167              	.LVL19:
 187:CLCD_control.c ****             I2C_CLCD_PrintString("   |      |      |  ");
 168              		.loc 1 187 0
 169 0096 4848     		ldr	r0, .L14+20
 170 0098 FFF7FEFF 		bl	I2C_CLCD_PrintString
 171              	.LVL20:
 188:CLCD_control.c ****             I2C_CLCD_Position(1u, 0u);
 172              		.loc 1 188 0
 173 009c 0120     		movs	r0, #1
 174 009e 0021     		movs	r1, #0
 175 00a0 FFF7FEFF 		bl	I2C_CLCD_Position
 176              	.LVL21:
 189:CLCD_control.c ****             I2C_CLCD_PrintString("Distance:      [m]  ");
 177              		.loc 1 189 0
 178 00a4 4748     		ldr	r0, .L14+32
 179 00a6 FFF7FEFF 		bl	I2C_CLCD_PrintString
 180              	.LVL22:
 190:CLCD_control.c ****             I2C_CLCD_Position(2u, 0u);
 181              		.loc 1 190 0
 182 00aa 0220     		movs	r0, #2
 183 00ac 0021     		movs	r1, #0
 184 00ae FFF7FEFF 		bl	I2C_CLCD_Position
 185              	.LVL23:
 191:CLCD_control.c ****             I2C_CLCD_PrintString("RMS:           [mV] ");
 186              		.loc 1 191 0
 187 00b2 4348     		ldr	r0, .L14+28
 188 00b4 FFF7FEFF 		bl	I2C_CLCD_PrintString
 189              	.LVL24:
 192:CLCD_control.c ****             I2C_CLCD_Position(3u, 0u);
 190              		.loc 1 192 0
 191 00b8 0320     		movs	r0, #3
 192 00ba 0021     		movs	r1, #0
 193 00bc FFF7FEFF 		bl	I2C_CLCD_Position
 194              	.LVL25:
 193:CLCD_control.c ****             I2C_CLCD_PrintString("PGA Gain: x         ");
 195              		.loc 1 193 0
 196 00c0 3B48     		ldr	r0, .L14+12
 197 00c2 FFF7FEFF 		bl	I2C_CLCD_PrintString
 198              	.LVL26:
 194:CLCD_control.c ****             break;
 199              		.loc 1 194 0
 200 00c6 6AE0     		b	.L5
 201              	.L11:
 195:CLCD_control.c ****         case THRESHOLD:
 196:CLCD_control.c ****         /*                       "01234567890123456789" */
 197:CLCD_control.c ****             I2C_CLCD_Position(0u, 0u);
 202              		.loc 1 197 0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 8


 203 00c8 0020     		movs	r0, #0
 204 00ca 0146     		mov	r1, r0
 205 00cc FFF7FEFF 		bl	I2C_CLCD_Position
 206              	.LVL27:
 198:CLCD_control.c ****             I2C_CLCD_PrintString("Threshold           ");
 207              		.loc 1 198 0
 208 00d0 3D48     		ldr	r0, .L14+36
 209 00d2 FFF7FEFF 		bl	I2C_CLCD_PrintString
 210              	.LVL28:
 199:CLCD_control.c ****             I2C_CLCD_Position(1u, 0u);
 211              		.loc 1 199 0
 212 00d6 0120     		movs	r0, #1
 213 00d8 0021     		movs	r1, #0
 214 00da FFF7FEFF 		bl	I2C_CLCD_Position
 215              	.LVL29:
 200:CLCD_control.c ****             sprintf(str, "Default:    %3d [mV]", pga_gain[gain].threshold);
 216              		.loc 1 200 0
 217 00de 314C     		ldr	r4, .L14
 218 00e0 B4F90230 		ldrsh	r3, [r4, #2]
 219 00e4 03EB4303 		add	r3, r3, r3, lsl #1
 220 00e8 5B00     		lsls	r3, r3, #1
 221 00ea 384A     		ldr	r2, .L14+40
 222 00ec 1344     		add	r3, r3, r2
 223 00ee 01A8     		add	r0, sp, #4
 224 00f0 3749     		ldr	r1, .L14+44
 225 00f2 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 226 00f4 FFF7FEFF 		bl	sprintf
 227              	.LVL30:
 201:CLCD_control.c ****             I2C_CLCD_PrintString(str);
 228              		.loc 1 201 0
 229 00f8 01A8     		add	r0, sp, #4
 230 00fa FFF7FEFF 		bl	I2C_CLCD_PrintString
 231              	.LVL31:
 202:CLCD_control.c ****             I2C_CLCD_Position(2u, 0u);
 232              		.loc 1 202 0
 233 00fe 0220     		movs	r0, #2
 234 0100 0021     		movs	r1, #0
 235 0102 FFF7FEFF 		bl	I2C_CLCD_Position
 236              	.LVL32:
 203:CLCD_control.c ****             sprintf(str, "Adj:        %3d [mV]", Adj_Vth);
 237              		.loc 1 203 0
 238 0106 01A8     		add	r0, sp, #4
 239 0108 3249     		ldr	r1, .L14+48
 240 010a 334B     		ldr	r3, .L14+52
 241 010c B3F90020 		ldrsh	r2, [r3]
 242 0110 FFF7FEFF 		bl	sprintf
 243              	.LVL33:
 204:CLCD_control.c ****             I2C_CLCD_PrintString(str);
 244              		.loc 1 204 0
 245 0114 01A8     		add	r0, sp, #4
 246 0116 FFF7FEFF 		bl	I2C_CLCD_PrintString
 247              	.LVL34:
 205:CLCD_control.c ****             I2C_CLCD_Position(3u, 0u);
 248              		.loc 1 205 0
 249 011a 0320     		movs	r0, #3
 250 011c 0021     		movs	r1, #0
 251 011e FFF7FEFF 		bl	I2C_CLCD_Position
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 9


 252              	.LVL35:
 206:CLCD_control.c ****             sprintf(str, "Current Vth:%3d [mV]", Vth);
 253              		.loc 1 206 0
 254 0122 01A8     		add	r0, sp, #4
 255 0124 2D49     		ldr	r1, .L14+56
 256 0126 A288     		ldrh	r2, [r4, #4]
 257 0128 FFF7FEFF 		bl	sprintf
 258              	.LVL36:
 207:CLCD_control.c ****             I2C_CLCD_PrintString(str);
 259              		.loc 1 207 0
 260 012c 01A8     		add	r0, sp, #4
 261 012e FFF7FEFF 		bl	I2C_CLCD_PrintString
 262              	.LVL37:
 208:CLCD_control.c ****             break;
 263              		.loc 1 208 0
 264 0132 34E0     		b	.L5
 265              	.L12:
 209:CLCD_control.c ****         case IF_BIAS:
 210:CLCD_control.c ****         /*                       "01234567890123456789" */
 211:CLCD_control.c ****             I2C_CLCD_Position(0u, 0u);
 266              		.loc 1 211 0
 267 0134 0020     		movs	r0, #0
 268 0136 0146     		mov	r1, r0
 269 0138 FFF7FEFF 		bl	I2C_CLCD_Position
 270              	.LVL38:
 212:CLCD_control.c ****             I2C_CLCD_PrintString("IF Amp BIAS         ");
 271              		.loc 1 212 0
 272 013c 2848     		ldr	r0, .L14+60
 273 013e FFF7FEFF 		bl	I2C_CLCD_PrintString
 274              	.LVL39:
 213:CLCD_control.c ****             I2C_CLCD_Position(1u, 0u);
 275              		.loc 1 213 0
 276 0142 0120     		movs	r0, #1
 277 0144 0021     		movs	r1, #0
 278 0146 FFF7FEFF 		bl	I2C_CLCD_Position
 279              	.LVL40:
 214:CLCD_control.c ****             sprintf(str, "Default:   %4d [mV]", pga_gain[gain].bias);
 280              		.loc 1 214 0
 281 014a 164C     		ldr	r4, .L14
 282 014c B4F90230 		ldrsh	r3, [r4, #2]
 283 0150 03EB4303 		add	r3, r3, r3, lsl #1
 284 0154 5B00     		lsls	r3, r3, #1
 285 0156 1D4A     		ldr	r2, .L14+40
 286 0158 1344     		add	r3, r3, r2
 287 015a 01A8     		add	r0, sp, #4
 288 015c 2149     		ldr	r1, .L14+64
 289 015e 9A88     		ldrh	r2, [r3, #4]
 290 0160 FFF7FEFF 		bl	sprintf
 291              	.LVL41:
 215:CLCD_control.c ****             I2C_CLCD_PrintString(str);
 292              		.loc 1 215 0
 293 0164 01A8     		add	r0, sp, #4
 294 0166 FFF7FEFF 		bl	I2C_CLCD_PrintString
 295              	.LVL42:
 216:CLCD_control.c ****             I2C_CLCD_Position(2u, 0u);
 296              		.loc 1 216 0
 297 016a 0220     		movs	r0, #2
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 10


 298 016c 0021     		movs	r1, #0
 299 016e FFF7FEFF 		bl	I2C_CLCD_Position
 300              	.LVL43:
 217:CLCD_control.c ****             sprintf(str, "Adj:       %4d [mV]", Adj_Vbias);
 301              		.loc 1 217 0
 302 0172 01A8     		add	r0, sp, #4
 303 0174 1C49     		ldr	r1, .L14+68
 304 0176 184B     		ldr	r3, .L14+52
 305 0178 B3F90220 		ldrsh	r2, [r3, #2]
 306 017c FFF7FEFF 		bl	sprintf
 307              	.LVL44:
 218:CLCD_control.c ****             I2C_CLCD_PrintString(str);
 308              		.loc 1 218 0
 309 0180 01A8     		add	r0, sp, #4
 310 0182 FFF7FEFF 		bl	I2C_CLCD_PrintString
 311              	.LVL45:
 219:CLCD_control.c ****             I2C_CLCD_Position(3u, 0u);
 312              		.loc 1 219 0
 313 0186 0320     		movs	r0, #3
 314 0188 0021     		movs	r1, #0
 315 018a FFF7FEFF 		bl	I2C_CLCD_Position
 316              	.LVL46:
 220:CLCD_control.c ****             sprintf(str, "Current Vb:%4d [mV]", Vbias);
 317              		.loc 1 220 0
 318 018e 01A8     		add	r0, sp, #4
 319 0190 1649     		ldr	r1, .L14+72
 320 0192 E288     		ldrh	r2, [r4, #6]
 321 0194 FFF7FEFF 		bl	sprintf
 322              	.LVL47:
 221:CLCD_control.c ****             I2C_CLCD_PrintString(str);
 323              		.loc 1 221 0
 324 0198 01A8     		add	r0, sp, #4
 325 019a FFF7FEFF 		bl	I2C_CLCD_PrintString
 326              	.LVL48:
 327              	.L5:
 222:CLCD_control.c ****             break;
 223:CLCD_control.c ****         default:
 224:CLCD_control.c ****             /* nothing to do */
 225:CLCD_control.c ****             break;
 226:CLCD_control.c ****     }
 227:CLCD_control.c **** }
 328              		.loc 1 227 0
 329 019e 06B0     		add	sp, sp, #24
 330              		.cfi_def_cfa_offset 8
 331              		@ sp needed
 332 01a0 10BD     		pop	{r4, pc}
 333              	.L15:
 334 01a2 00BF     		.align	2
 335              	.L14:
 336 01a4 00000000 		.word	.LANCHOR0
 337 01a8 18000000 		.word	.LC1
 338 01ac 30000000 		.word	.LC2
 339 01b0 48000000 		.word	.LC3
 340 01b4 60000000 		.word	.LC4
 341 01b8 78000000 		.word	.LC5
 342 01bc 90000000 		.word	.LC6
 343 01c0 A8000000 		.word	.LC7
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 11


 344 01c4 C0000000 		.word	.LC8
 345 01c8 D8000000 		.word	.LC9
 346 01cc 00000000 		.word	.LANCHOR1
 347 01d0 F0000000 		.word	.LC10
 348 01d4 08010000 		.word	.LC11
 349 01d8 00000000 		.word	.LANCHOR2
 350 01dc 20010000 		.word	.LC12
 351 01e0 38010000 		.word	.LC13
 352 01e4 50010000 		.word	.LC14
 353 01e8 64010000 		.word	.LC15
 354 01ec 78010000 		.word	.LC16
 355              		.cfi_endproc
 356              	.LFE120:
 357              		.size	CLCD_mode_switch, .-CLCD_mode_switch
 358              		.section	.text.set_Vth_Vbias,"ax",%progbits
 359              		.align	2
 360              		.global	set_Vth_Vbias
 361              		.thumb
 362              		.thumb_func
 363              		.type	set_Vth_Vbias, %function
 364              	set_Vth_Vbias:
 365              	.LFB121:
 228:CLCD_control.c **** 
 229:CLCD_control.c **** void set_Vth_Vbias(void)
 230:CLCD_control.c **** {
 366              		.loc 1 230 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370 0000 10B5     		push	{r4, lr}
 371              		.cfi_def_cfa_offset 8
 372              		.cfi_offset 4, -8
 373              		.cfi_offset 14, -4
 231:CLCD_control.c ****     int16 a, b;
 232:CLCD_control.c **** 
 233:CLCD_control.c ****     // set Threshold value
 234:CLCD_control.c ****     a = pga_gain[gain].threshold + Adj_Vth;
 374              		.loc 1 234 0
 375 0002 254B     		ldr	r3, .L23
 376 0004 B3F90230 		ldrsh	r3, [r3, #2]
 377 0008 03EB4303 		add	r3, r3, r3, lsl #1
 378 000c 5B00     		lsls	r3, r3, #1
 379 000e 234A     		ldr	r2, .L23+4
 380 0010 1344     		add	r3, r3, r2
 381 0012 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 382 0014 224B     		ldr	r3, .L23+8
 383 0016 1B88     		ldrh	r3, [r3]
 384 0018 1344     		add	r3, r3, r2
 385 001a 9BB2     		uxth	r3, r3
 386              	.LVL49:
 235:CLCD_control.c ****     if (a > 10)
 387              		.loc 1 235 0
 388 001c 19B2     		sxth	r1, r3
 389 001e 0A29     		cmp	r1, #10
 390 0020 02DD     		ble	.L17
 236:CLCD_control.c ****     	Vth = a;
 391              		.loc 1 236 0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 12


 392 0022 1D4A     		ldr	r2, .L23
 393 0024 9380     		strh	r3, [r2, #4]	@ movhi
 394 0026 06E0     		b	.L18
 395              	.L17:
 237:CLCD_control.c ****     else
 238:CLCD_control.c ****     {
 239:CLCD_control.c ****     	Adj_Vth = 10 - pga_gain[gain].threshold;
 396              		.loc 1 239 0
 397 0028 C2F10A02 		rsb	r2, r2, #10
 398 002c 1C4B     		ldr	r3, .L23+8
 399              	.LVL50:
 400 002e 1A80     		strh	r2, [r3]	@ movhi
 240:CLCD_control.c ****     	Vth = 10;
 401              		.loc 1 240 0
 402 0030 0A22     		movs	r2, #10
 403 0032 194B     		ldr	r3, .L23
 404 0034 9A80     		strh	r2, [r3, #4]	@ movhi
 405              	.L18:
 241:CLCD_control.c ****     }
 242:CLCD_control.c ****     Control_GAIN_Write(Vth);
 406              		.loc 1 242 0
 407 0036 184C     		ldr	r4, .L23
 408 0038 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 409 003a FFF7FEFF 		bl	Control_GAIN_Write
 410              	.LVL51:
 243:CLCD_control.c **** 
 244:CLCD_control.c ****     // set IF BIAS value
 245:CLCD_control.c ****     b = pga_gain[gain].bias + Adj_Vbias;
 411              		.loc 1 245 0
 412 003e B4F90230 		ldrsh	r3, [r4, #2]
 413 0042 03EB4303 		add	r3, r3, r3, lsl #1
 414 0046 5B00     		lsls	r3, r3, #1
 415 0048 144A     		ldr	r2, .L23+4
 416 004a 1344     		add	r3, r3, r2
 417 004c 9988     		ldrh	r1, [r3, #4]
 418 004e 144B     		ldr	r3, .L23+8
 419 0050 5B88     		ldrh	r3, [r3, #2]
 420 0052 0B44     		add	r3, r3, r1
 421 0054 9BB2     		uxth	r3, r3
 422 0056 98B2     		uxth	r0, r3
 423              	.LVL52:
 246:CLCD_control.c ****     if (b < 2000 && b > 0)
 424              		.loc 1 246 0
 425 0058 5A1E     		subs	r2, r3, #1
 426 005a 92B2     		uxth	r2, r2
 427 005c 40F2CE74 		movw	r4, #1998
 428 0060 A242     		cmp	r2, r4
 429 0062 02D8     		bhi	.L19
 247:CLCD_control.c ****     	Vbias = b;
 430              		.loc 1 247 0
 431 0064 0C4A     		ldr	r2, .L23
 432 0066 D380     		strh	r3, [r2, #6]	@ movhi
 433 0068 11E0     		b	.L20
 434              	.L19:
 248:CLCD_control.c ****     else if (b <= 0)
 435              		.loc 1 248 0
 436 006a 00B2     		sxth	r0, r0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 13


 437 006c 0028     		cmp	r0, #0
 438 006e 06DC     		bgt	.L21
 249:CLCD_control.c ****     {
 250:CLCD_control.c ****     	Adj_Vbias = 0 - pga_gain[gain].bias;
 439              		.loc 1 250 0
 440 0070 4942     		negs	r1, r1
 441 0072 0B4B     		ldr	r3, .L23+8
 442 0074 5980     		strh	r1, [r3, #2]	@ movhi
 251:CLCD_control.c ****     	Vbias = 0;
 443              		.loc 1 251 0
 444 0076 0022     		movs	r2, #0
 445 0078 074B     		ldr	r3, .L23
 446 007a DA80     		strh	r2, [r3, #6]	@ movhi
 447 007c 07E0     		b	.L20
 448              	.L21:
 252:CLCD_control.c ****     }
 253:CLCD_control.c ****     else // b >= 2000
 254:CLCD_control.c ****     {
 255:CLCD_control.c **** 	    Adj_Vbias = 2000 - pga_gain[gain].bias;
 449              		.loc 1 255 0
 450 007e C1F5FA61 		rsb	r1, r1, #2000
 451 0082 074B     		ldr	r3, .L23+8
 452 0084 5980     		strh	r1, [r3, #2]	@ movhi
 256:CLCD_control.c **** 	    Vbias = 2000;
 453              		.loc 1 256 0
 454 0086 4FF4FA62 		mov	r2, #2000
 455 008a 034B     		ldr	r3, .L23
 456 008c DA80     		strh	r2, [r3, #6]	@ movhi
 457              	.LVL53:
 458              	.L20:
 257:CLCD_control.c ****     }
 258:CLCD_control.c ****     DVDAC_2_SetValue(Vbias);
 459              		.loc 1 258 0
 460 008e 024B     		ldr	r3, .L23
 461 0090 D888     		ldrh	r0, [r3, #6]
 462 0092 FFF7FEFF 		bl	DVDAC_2_SetValue
 463              	.LVL54:
 464 0096 10BD     		pop	{r4, pc}
 465              	.L24:
 466              		.align	2
 467              	.L23:
 468 0098 00000000 		.word	.LANCHOR0
 469 009c 00000000 		.word	.LANCHOR1
 470 00a0 00000000 		.word	.LANCHOR2
 471              		.cfi_endproc
 472              	.LFE121:
 473              		.size	set_Vth_Vbias, .-set_Vth_Vbias
 474              		.global	__aeabi_ui2f
 475              		.global	__aeabi_fdiv
 476              		.global	__aeabi_f2d
 477              		.section	.text.CLCD_set_PGA_gain,"ax",%progbits
 478              		.align	2
 479              		.global	CLCD_set_PGA_gain
 480              		.thumb
 481              		.thumb_func
 482              		.type	CLCD_set_PGA_gain, %function
 483              	CLCD_set_PGA_gain:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 14


 484              	.LFB122:
 259:CLCD_control.c **** }
 260:CLCD_control.c **** 
 261:CLCD_control.c **** void CLCD_set_PGA_gain (void)
 262:CLCD_control.c **** {
 485              		.loc 1 262 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 24
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 263:CLCD_control.c ****     char str[20];
 264:CLCD_control.c ****     
 265:CLCD_control.c ****     if (mode == DISTANCE || mode == SIGNAL || mode == DIRECTION)
 489              		.loc 1 265 0
 490 0000 314B     		ldr	r3, .L35
 491 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 492 0004 531E     		subs	r3, r2, #1
 493 0006 DBB2     		uxtb	r3, r3
 494 0008 022B     		cmp	r3, #2
 495 000a 5CD8     		bhi	.L34
 262:CLCD_control.c ****     char str[20];
 496              		.loc 1 262 0
 497 000c 00B5     		push	{lr}
 498              		.cfi_def_cfa_offset 4
 499              		.cfi_offset 14, -4
 500 000e 87B0     		sub	sp, sp, #28
 501              		.cfi_def_cfa_offset 32
 266:CLCD_control.c ****     {
 267:CLCD_control.c ****         if (mode == SIGNAL)
 502              		.loc 1 267 0
 503 0010 022A     		cmp	r2, #2
 504 0012 04D1     		bne	.L27
 268:CLCD_control.c ****             I2C_CLCD_Position(2u, 11u);
 505              		.loc 1 268 0
 506 0014 0220     		movs	r0, #2
 507 0016 0B21     		movs	r1, #11
 508 0018 FFF7FEFF 		bl	I2C_CLCD_Position
 509              	.LVL55:
 510 001c 03E0     		b	.L28
 511              	.L27:
 269:CLCD_control.c ****         else
 270:CLCD_control.c ****             I2C_CLCD_Position(3u, 11u);
 512              		.loc 1 270 0
 513 001e 0320     		movs	r0, #3
 514 0020 0B21     		movs	r1, #11
 515 0022 FFF7FEFF 		bl	I2C_CLCD_Position
 516              	.LVL56:
 517              	.L28:
 271:CLCD_control.c **** 
 272:CLCD_control.c ****         //sprintf(str, "%2d", pga_gain[gain].magnification);
 273:CLCD_control.c ****         if (pga_gain[gain].rec_rf_gain == 1)
 518              		.loc 1 273 0
 519 0026 284B     		ldr	r3, .L35
 520 0028 B3F90220 		ldrsh	r2, [r3, #2]
 521 002c 02EB4203 		add	r3, r2, r2, lsl #1
 522 0030 5B00     		lsls	r3, r3, #1
 523 0032 2649     		ldr	r1, .L35+4
 524 0034 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 15


 525 0036 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 526 0038 0128     		cmp	r0, #1
 527 003a 09D1     		bne	.L29
 274:CLCD_control.c ****             sprintf(str, "%2d      ", pga_gain[gain].magnification);
 528              		.loc 1 274 0
 529 003c 02EB4202 		add	r2, r2, r2, lsl #1
 530 0040 5200     		lsls	r2, r2, #1
 531 0042 0A44     		add	r2, r2, r1
 532 0044 01A8     		add	r0, sp, #4
 533 0046 2249     		ldr	r1, .L35+8
 534 0048 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 535 004a FFF7FEFF 		bl	sprintf
 536              	.LVL57:
 537 004e 34E0     		b	.L30
 538              	.L29:
 275:CLCD_control.c ****         else if (pga_gain[gain].rec_rf_gain == 2)
 539              		.loc 1 275 0
 540 0050 0228     		cmp	r0, #2
 541 0052 0FD1     		bne	.L31
 276:CLCD_control.c ****             sprintf(str, "% 1.1f    ", (1 / (float)pga_gain[gain].rec_rf_gain));
 542              		.loc 1 276 0
 543 0054 FFF7FEFF 		bl	__aeabi_ui2f
 544              	.LVL58:
 545 0058 0146     		mov	r1, r0
 546 005a 4FF07E50 		mov	r0, #1065353216
 547 005e FFF7FEFF 		bl	__aeabi_fdiv
 548              	.LVL59:
 549 0062 FFF7FEFF 		bl	__aeabi_f2d
 550              	.LVL60:
 551 0066 0246     		mov	r2, r0
 552 0068 0B46     		mov	r3, r1
 553 006a 01A8     		add	r0, sp, #4
 554 006c 1949     		ldr	r1, .L35+12
 555 006e FFF7FEFF 		bl	sprintf
 556              	.LVL61:
 557 0072 22E0     		b	.L30
 558              	.L31:
 277:CLCD_control.c ****         else if (pga_gain[gain].rec_rf_gain == 4)
 559              		.loc 1 277 0
 560 0074 0428     		cmp	r0, #4
 561 0076 0FD1     		bne	.L32
 278:CLCD_control.c ****             sprintf(str, "% 2.2f   ", (1 / (float)pga_gain[gain].rec_rf_gain));
 562              		.loc 1 278 0
 563 0078 FFF7FEFF 		bl	__aeabi_ui2f
 564              	.LVL62:
 565 007c 0146     		mov	r1, r0
 566 007e 4FF07E50 		mov	r0, #1065353216
 567 0082 FFF7FEFF 		bl	__aeabi_fdiv
 568              	.LVL63:
 569 0086 FFF7FEFF 		bl	__aeabi_f2d
 570              	.LVL64:
 571 008a 0246     		mov	r2, r0
 572 008c 0B46     		mov	r3, r1
 573 008e 01A8     		add	r0, sp, #4
 574 0090 1149     		ldr	r1, .L35+16
 575 0092 FFF7FEFF 		bl	sprintf
 576              	.LVL65:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 16


 577 0096 10E0     		b	.L30
 578              	.L32:
 279:CLCD_control.c ****         else if (pga_gain[gain].rec_rf_gain == 8)
 579              		.loc 1 279 0
 580 0098 0828     		cmp	r0, #8
 581 009a 0ED1     		bne	.L30
 280:CLCD_control.c ****             sprintf(str, "% 3.3f  ", (1 / (float)pga_gain[gain].rec_rf_gain));
 582              		.loc 1 280 0
 583 009c FFF7FEFF 		bl	__aeabi_ui2f
 584              	.LVL66:
 585 00a0 0146     		mov	r1, r0
 586 00a2 4FF07E50 		mov	r0, #1065353216
 587 00a6 FFF7FEFF 		bl	__aeabi_fdiv
 588              	.LVL67:
 589 00aa FFF7FEFF 		bl	__aeabi_f2d
 590              	.LVL68:
 591 00ae 0246     		mov	r2, r0
 592 00b0 0B46     		mov	r3, r1
 593 00b2 01A8     		add	r0, sp, #4
 594 00b4 0949     		ldr	r1, .L35+20
 595 00b6 FFF7FEFF 		bl	sprintf
 596              	.LVL69:
 597              	.L30:
 281:CLCD_control.c ****         I2C_CLCD_PrintString(str);
 598              		.loc 1 281 0
 599 00ba 01A8     		add	r0, sp, #4
 600 00bc FFF7FEFF 		bl	I2C_CLCD_PrintString
 601              	.LVL70:
 282:CLCD_control.c ****     }
 283:CLCD_control.c **** }
 602              		.loc 1 283 0
 603 00c0 07B0     		add	sp, sp, #28
 604              		.cfi_def_cfa_offset 4
 605              		@ sp needed
 606 00c2 5DF804FB 		ldr	pc, [sp], #4
 607              	.L34:
 608              		.cfi_def_cfa_offset 0
 609              		.cfi_restore 14
 610 00c6 7047     		bx	lr
 611              	.L36:
 612              		.align	2
 613              	.L35:
 614 00c8 00000000 		.word	.LANCHOR0
 615 00cc 00000000 		.word	.LANCHOR1
 616 00d0 8C010000 		.word	.LC17
 617 00d4 98010000 		.word	.LC18
 618 00d8 A4010000 		.word	.LC19
 619 00dc B0010000 		.word	.LC20
 620              		.cfi_endproc
 621              	.LFE122:
 622              		.size	CLCD_set_PGA_gain, .-CLCD_set_PGA_gain
 623              		.global	__aeabi_ddiv
 624              		.global	__aeabi_dmul
 625              		.global	__aeabi_fmul
 626              		.global	__aeabi_fadd
 627              		.global	__aeabi_fcmpge
 628              		.global	__aeabi_d2iz
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 17


 629              		.global	__aeabi_i2d
 630              		.global	__aeabi_dcmple
 631              		.global	__aeabi_dcmpgt
 632              		.global	__aeabi_i2f
 633              		.global	__aeabi_f2uiz
 634              		.section	.text.Task_CLCD,"ax",%progbits
 635              		.align	2
 636              		.global	Task_CLCD
 637              		.thumb
 638              		.thumb_func
 639              		.type	Task_CLCD, %function
 640              	Task_CLCD:
 641              	.LFB123:
 284:CLCD_control.c **** 
 285:CLCD_control.c **** void Task_CLCD(void *pvParameters)
 286:CLCD_control.c **** {
 642              		.loc 1 286 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 64
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646              	.LVL71:
 647 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 648              		.cfi_def_cfa_offset 36
 649              		.cfi_offset 4, -36
 650              		.cfi_offset 5, -32
 651              		.cfi_offset 6, -28
 652              		.cfi_offset 7, -24
 653              		.cfi_offset 8, -20
 654              		.cfi_offset 9, -16
 655              		.cfi_offset 10, -12
 656              		.cfi_offset 11, -8
 657              		.cfi_offset 14, -4
 658 0004 91B0     		sub	sp, sp, #68
 659              		.cfi_def_cfa_offset 104
 660              	.LVL72:
 287:CLCD_control.c ****     char   str[BUFSIZE];
 288:CLCD_control.c ****     uint8  qmsg;
 289:CLCD_control.c ****     //enum CLCD_mode mode = SIGNAL;    /* CLCD display mode */
 290:CLCD_control.c ****     
 291:CLCD_control.c ****     /* DSP mode */
 292:CLCD_control.c ****     uint8  update_level_flag = 0;   /* update the level on CLCD */
 293:CLCD_control.c ****     uint8  update_gain_flag = 0;   /* update the GAIN of PGA */
 294:CLCD_control.c ****     uint8  car_flag = 0;        /* captured data is carier(1) or null(0) */
 661              		.loc 1 294 0
 662 0006 0027     		movs	r7, #0
 663 0008 8DF82A70 		strb	r7, [sp, #42]
 664              	.LVL73:
 295:CLCD_control.c ****     float32_t meanval_cos, meanval_sin;
 296:CLCD_control.c ****     double_t  phi = 0;      /* phase */
 297:CLCD_control.c ****     double_t  phi_deg = 0;
 298:CLCD_control.c ****     float32_t rms[NUM_ANT], rms_mixed;
 299:CLCD_control.c ****     
 300:CLCD_control.c ****     double_t  dir = 0;      /* direction */
 301:CLCD_control.c ****     double_t  dir_deg = 0;
 302:CLCD_control.c ****     uint8  bar_position;      /* bar position on the CLCD line 1  */
 303:CLCD_control.c ****     uint8  n_bar;             /* bar pattern number */
 304:CLCD_control.c **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 18


 305:CLCD_control.c ****     double_t  rms_pga = 0;    /* rms_mixed / pga_gain  */
 306:CLCD_control.c ****     double_t  distance = 0;
 307:CLCD_control.c **** 
 308:CLCD_control.c ****     /* Gain Control */
 309:CLCD_control.c ****     //int16 gain = 0;     /* init value is Min. Gain */
 310:CLCD_control.c ****     int8 click;
 311:CLCD_control.c ****     uint8 i;
 312:CLCD_control.c ****     
 313:CLCD_control.c ****     const portTickType xDelay = 5 / portTICK_RATE_MS;
 314:CLCD_control.c **** 
 315:CLCD_control.c ****     CLCD_mode_switch();
 665              		.loc 1 315 0
 666 000c FFF7FEFF 		bl	CLCD_mode_switch
 667              	.LVL74:
 316:CLCD_control.c ****     
 317:CLCD_control.c ****     /* set initial VTH for Task_Radio */
 318:CLCD_control.c ****     Control_GAIN_Write(pga_gain[gain].threshold);
 668              		.loc 1 318 0
 669 0010 C14C     		ldr	r4, .L97+24
 670 0012 B4F90230 		ldrsh	r3, [r4, #2]
 671 0016 03EB4303 		add	r3, r3, r3, lsl #1
 672 001a 5B00     		lsls	r3, r3, #1
 673 001c BF4A     		ldr	r2, .L97+28
 674 001e 1344     		add	r3, r3, r2
 675 0020 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 676 0022 FFF7FEFF 		bl	Control_GAIN_Write
 677              	.LVL75:
 319:CLCD_control.c ****     /* set IF Amp BIAS */
 320:CLCD_control.c ****     DVDAC_2_SetValue((uint16)(Vbias));
 678              		.loc 1 320 0
 679 0026 E088     		ldrh	r0, [r4, #6]
 680 0028 FFF7FEFF 		bl	DVDAC_2_SetValue
 681              	.LVL76:
 301:CLCD_control.c ****     uint8  bar_position;      /* bar position on the CLCD line 1  */
 682              		.loc 1 301 0
 683 002c BB46     		mov	fp, r7
 684 002e 3C46     		mov	r4, r7
 297:CLCD_control.c ****     float32_t rms[NUM_ANT], rms_mixed;
 685              		.loc 1 297 0
 686 0030 0022     		movs	r2, #0
 687 0032 0023     		movs	r3, #0
 688 0034 CDE90023 		strd	r2, [sp]
 293:CLCD_control.c ****     uint8  car_flag = 0;        /* captured data is carier(1) or null(0) */
 689              		.loc 1 293 0
 690 0038 3E46     		mov	r6, r7
 691              	.LVL77:
 692              	.L38:
 321:CLCD_control.c ****     
 322:CLCD_control.c ****     /* Main Loop */
 323:CLCD_control.c ****     for(;;)
 324:CLCD_control.c ****     {
 325:CLCD_control.c ****         if (Status_Reg_1_Read() == 1u)
 693              		.loc 1 325 0
 694 003a FFF7FEFF 		bl	Status_Reg_1_Read
 695              	.LVL78:
 696 003e 0128     		cmp	r0, #1
 697 0040 03D1     		bne	.L39
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 19


 326:CLCD_control.c ****         {
 327:CLCD_control.c ****             vTaskDelay(xDelay);
 698              		.loc 1 327 0
 699 0042 0520     		movs	r0, #5
 700 0044 FFF7FEFF 		bl	vTaskDelay
 701              	.LVL79:
 328:CLCD_control.c ****             continue;
 702              		.loc 1 328 0
 703 0048 F7E7     		b	.L38
 704              	.L39:
 329:CLCD_control.c ****         }
 330:CLCD_control.c **** 
 331:CLCD_control.c ****         /*** This task is done for the duration of no carrier (about 900ms) ***/
 332:CLCD_control.c **** 
 333:CLCD_control.c ****         /* Get Display Mode from Queue of KEY[0] */
 334:CLCD_control.c ****         if (xQueueReceive(xQueue_KEY[0], &qmsg, 0))
 705              		.loc 1 334 0
 706 004a B54B     		ldr	r3, .L97+32
 707 004c 1868     		ldr	r0, [r3]
 708 004e 0DF12B01 		add	r1, sp, #43
 709 0052 0022     		movs	r2, #0
 710 0054 1346     		mov	r3, r2
 711 0056 FFF7FEFF 		bl	xQueueGenericReceive
 712              	.LVL80:
 713 005a 58B1     		cbz	r0, .L41
 335:CLCD_control.c ****         {
 336:CLCD_control.c ****             mode++;
 714              		.loc 1 336 0
 715 005c AE4A     		ldr	r2, .L97+24
 716 005e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 717 0060 0133     		adds	r3, r3, #1
 718 0062 DBB2     		uxtb	r3, r3
 719 0064 1370     		strb	r3, [r2]
 337:CLCD_control.c ****             if (mode == NONE)   /* end of table */
 720              		.loc 1 337 0
 721 0066 062B     		cmp	r3, #6
 722 0068 02D1     		bne	.L42
 338:CLCD_control.c ****                 mode = DISTANCE;  /* the first mode */
 723              		.loc 1 338 0
 724 006a 0122     		movs	r2, #1
 725 006c AA4B     		ldr	r3, .L97+24
 726 006e 1A70     		strb	r2, [r3]
 727              	.L42:
 339:CLCD_control.c ****             
 340:CLCD_control.c ****             CLCD_mode_switch();   /* init CLCD of the mode */
 728              		.loc 1 340 0
 729 0070 FFF7FEFF 		bl	CLCD_mode_switch
 730              	.LVL81:
 731              	.L41:
 341:CLCD_control.c ****         }
 342:CLCD_control.c **** 
 343:CLCD_control.c ****         /* Get Display Mode from Queue of KEY[1] */
 344:CLCD_control.c ****         if (xQueueReceive(xQueue_KEY[1], &qmsg, 0))
 732              		.loc 1 344 0
 733 0074 AA4B     		ldr	r3, .L97+32
 734 0076 5868     		ldr	r0, [r3, #4]
 735 0078 0DF12B01 		add	r1, sp, #43
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 20


 736 007c 0022     		movs	r2, #0
 737 007e 1346     		mov	r3, r2
 738 0080 FFF7FEFF 		bl	xQueueGenericReceive
 739              	.LVL82:
 740 0084 50B1     		cbz	r0, .L43
 345:CLCD_control.c ****         {
 346:CLCD_control.c ****             mode--;
 741              		.loc 1 346 0
 742 0086 A44A     		ldr	r2, .L97+24
 743 0088 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 744 008a 013B     		subs	r3, r3, #1
 745 008c DBB2     		uxtb	r3, r3
 746 008e 1370     		strb	r3, [r2]
 347:CLCD_control.c ****             if (mode == INVALID)    /* start of table */
 747              		.loc 1 347 0
 748 0090 13B9     		cbnz	r3, .L44
 348:CLCD_control.c ****                 mode = IF_BIAS;       /* the last mode */
 749              		.loc 1 348 0
 750 0092 0522     		movs	r2, #5
 751 0094 A04B     		ldr	r3, .L97+24
 752 0096 1A70     		strb	r2, [r3]
 753              	.L44:
 349:CLCD_control.c ****             
 350:CLCD_control.c ****             CLCD_mode_switch();   /* init CLCD of the mode */
 754              		.loc 1 350 0
 755 0098 FFF7FEFF 		bl	CLCD_mode_switch
 756              	.LVL83:
 757              	.L43:
 351:CLCD_control.c ****         }
 352:CLCD_control.c **** 
 353:CLCD_control.c ****         /* Get the signal level from Queue and Display on the CLCD */
 354:CLCD_control.c ****         if (uxQueueMessagesWaiting(xQueue_RXD) > 0)
 758              		.loc 1 354 0
 759 009c A14B     		ldr	r3, .L97+36
 760 009e 1868     		ldr	r0, [r3]
 761 00a0 FFF7FEFF 		bl	uxQueueMessagesWaiting
 762              	.LVL84:
 763 00a4 0028     		cmp	r0, #0
 764 00a6 00F09E80 		beq	.L45
 355:CLCD_control.c ****         {
 356:CLCD_control.c ****             MON_Write(1u);      /* Debug */
 765              		.loc 1 356 0
 766 00aa 0120     		movs	r0, #1
 767 00ac FFF7FEFF 		bl	MON_Write
 768              	.LVL85:
 357:CLCD_control.c ****             xQueueReceive(xQueue_RXD, &car_flag, 0);       
 769              		.loc 1 357 0
 770 00b0 9C4B     		ldr	r3, .L97+36
 771 00b2 1868     		ldr	r0, [r3]
 772 00b4 0DF12A01 		add	r1, sp, #42
 773 00b8 0022     		movs	r2, #0
 774 00ba 1346     		mov	r3, r2
 775 00bc FFF7FEFF 		bl	xQueueGenericReceive
 776              	.LVL86:
 358:CLCD_control.c ****             
 359:CLCD_control.c ****             xSemaphoreTake(xMutex_RX_BUF, portMAX_DELAY);
 777              		.loc 1 359 0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 21


 778 00c0 994B     		ldr	r3, .L97+40
 779 00c2 1868     		ldr	r0, [r3]
 780 00c4 0021     		movs	r1, #0
 781 00c6 4FF0FF32 		mov	r2, #-1
 782 00ca 0B46     		mov	r3, r1
 783 00cc FFF7FEFF 		bl	xQueueGenericReceive
 784              	.LVL87:
 360:CLCD_control.c ****             /* continuous signal for 60ms ? */
 361:CLCD_control.c ****             if (car_flag)
 785              		.loc 1 361 0
 786 00d0 9DF82A30 		ldrb	r3, [sp, #42]	@ zero_extendqisi2
 787 00d4 9BB3     		cbz	r3, .L84
 362:CLCD_control.c ****             {
 363:CLCD_control.c ****                 /*********************************************************
 364:CLCD_control.c ****                 * phase difference between ANT1_buf_f32 and ANT2_buf_f32
 365:CLCD_control.c ****                 **********************************************************/
 366:CLCD_control.c ****                 /* A*sin(theta) * B*sin(theta+phi) -> (A*B/2) * cos(phi)  */
 367:CLCD_control.c ****                 arm_mult_f32(ANT1_buf_f32, ANT2_buf_f32, dst_buf_f32, MAX_BLOCKSIZE);
 788              		.loc 1 367 0
 789 00d6 954E     		ldr	r6, .L97+44
 790              	.LVL88:
 791 00d8 954D     		ldr	r5, .L97+48
 792              	.LVL89:
 793 00da 964C     		ldr	r4, .L97+52
 794              	.LVL90:
 795 00dc 3046     		mov	r0, r6
 796 00de 2946     		mov	r1, r5
 797 00e0 2246     		mov	r2, r4
 798 00e2 8023     		movs	r3, #128
 799 00e4 FFF7FEFF 		bl	arm_mult_f32
 800              	.LVL91:
 368:CLCD_control.c ****                 arm_mean_f32(dst_buf_f32, MAX_BLOCKSIZE, &meanval_cos);
 801              		.loc 1 368 0
 802 00e8 2046     		mov	r0, r4
 803 00ea 8021     		movs	r1, #128
 804 00ec 09AA     		add	r2, sp, #36
 805 00ee FFF7FEFF 		bl	arm_mean_f32
 806              	.LVL92:
 369:CLCD_control.c **** 
 370:CLCD_control.c ****                 /* A*cos(theta) * B*sin(theta+phi) -> (A*B/2) * sin(phi)  */
 371:CLCD_control.c ****                 arm_mult_f32(&ANT1_buf_f32[PHASE_90], ANT2_buf_f32, dst_buf_f32, MAX_BLOCKSIZE);
 807              		.loc 1 371 0
 808 00f2 06F12000 		add	r0, r6, #32
 809 00f6 2946     		mov	r1, r5
 810 00f8 2246     		mov	r2, r4
 811 00fa 8023     		movs	r3, #128
 812 00fc FFF7FEFF 		bl	arm_mult_f32
 813              	.LVL93:
 372:CLCD_control.c ****                 arm_mean_f32(dst_buf_f32, MAX_BLOCKSIZE, &meanval_sin);
 814              		.loc 1 372 0
 815 0100 2046     		mov	r0, r4
 816 0102 8021     		movs	r1, #128
 817 0104 08AA     		add	r2, sp, #32
 818 0106 FFF7FEFF 		bl	arm_mean_f32
 819              	.LVL94:
 373:CLCD_control.c ****                 
 374:CLCD_control.c ****                 phi = atan2(meanval_sin, meanval_cos);
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 22


 820              		.loc 1 374 0
 821 010a 0898     		ldr	r0, [sp, #32]	@ float
 822 010c FFF7FEFF 		bl	__aeabi_f2d
 823              	.LVL95:
 824 0110 0446     		mov	r4, r0
 825 0112 0D46     		mov	r5, r1
 826 0114 0998     		ldr	r0, [sp, #36]	@ float
 827 0116 FFF7FEFF 		bl	__aeabi_f2d
 828              	.LVL96:
 829 011a 0246     		mov	r2, r0
 830 011c 0B46     		mov	r3, r1
 831 011e 2046     		mov	r0, r4
 832 0120 2946     		mov	r1, r5
 833 0122 FFF7FEFF 		bl	atan2
 834              	.LVL97:
 375:CLCD_control.c ****                 phi_deg = (phi / 3.14159) * 180;
 835              		.loc 1 375 0
 836 0126 76A3     		adr	r3, .L97
 837 0128 D3E90023 		ldrd	r2, [r3]
 838 012c FFF7FEFF 		bl	__aeabi_ddiv
 839              	.LVL98:
 840 0130 0022     		movs	r2, #0
 841 0132 814B     		ldr	r3, .L97+56
 842 0134 FFF7FEFF 		bl	__aeabi_dmul
 843              	.LVL99:
 844 0138 CDE90001 		strd	r0, [sp]
 845              	.LVL100:
 846 013c 03E0     		b	.L46
 847              	.LVL101:
 848              	.L84:
 376:CLCD_control.c ****             }
 377:CLCD_control.c ****             /* continuous null for 1500ms ? */
 378:CLCD_control.c ****             else
 379:CLCD_control.c ****                 phi_deg = 0;
 849              		.loc 1 379 0
 850 013e 0022     		movs	r2, #0
 851 0140 0023     		movs	r3, #0
 852 0142 CDE90023 		strd	r2, [sp]
 853              	.LVL102:
 854              	.L46:
 380:CLCD_control.c **** 
 381:CLCD_control.c ****             /*********************************************************
 382:CLCD_control.c ****             * rms of srcA_buf_f32 and srcB_buf_f32
 383:CLCD_control.c ****             **********************************************************/
 384:CLCD_control.c ****             arm_rms_f32(ANT1_buf_f32, MAX_BLOCKSIZE, &rms[0]);
 855              		.loc 1 384 0
 856 0146 7948     		ldr	r0, .L97+44
 857 0148 8021     		movs	r1, #128
 858 014a 06AA     		add	r2, sp, #24
 859 014c FFF7FEFF 		bl	arm_rms_f32
 860              	.LVL103:
 385:CLCD_control.c ****             arm_rms_f32(ANT2_buf_f32, MAX_BLOCKSIZE, &rms[1]);
 861              		.loc 1 385 0
 862 0150 7748     		ldr	r0, .L97+48
 863 0152 8021     		movs	r1, #128
 864 0154 07AA     		add	r2, sp, #28
 865 0156 FFF7FEFF 		bl	arm_rms_f32
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 23


 866              	.LVL104:
 386:CLCD_control.c ****             //arm_rms_f32(rms, NUM_ANT, &rms_mixed);
 387:CLCD_control.c ****             arm_sqrt_f32((rms[0]*rms[0]) + (rms[1]*rms[1]), &rms_mixed);
 867              		.loc 1 387 0
 868 015a 0698     		ldr	r0, [sp, #24]	@ float
 869 015c 0146     		mov	r1, r0
 870 015e FFF7FEFF 		bl	__aeabi_fmul
 871              	.LVL105:
 872 0162 0446     		mov	r4, r0
 873 0164 0798     		ldr	r0, [sp, #28]	@ float
 874 0166 0146     		mov	r1, r0
 875 0168 FFF7FEFF 		bl	__aeabi_fmul
 876              	.LVL106:
 877 016c 0146     		mov	r1, r0
 878 016e 2046     		mov	r0, r4
 879 0170 FFF7FEFF 		bl	__aeabi_fadd
 880              	.LVL107:
 881 0174 0446     		mov	r4, r0
 882              	.LVL108:
 883              	.LBB4:
 884              	.LBB5:
 885              		.file 2 "..\\CMSIS_DSP_LIB\\Include/arm_math.h"
   1:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* ----------------------------------------------------------------------
   2:..\CMSIS_DSP_LIB\Include/arm_math.h **** * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
   3:..\CMSIS_DSP_LIB\Include/arm_math.h **** *
   4:..\CMSIS_DSP_LIB\Include/arm_math.h **** * $Date:        20. October 2015
   5:..\CMSIS_DSP_LIB\Include/arm_math.h **** * $Revision:    V1.4.5 b
   6:..\CMSIS_DSP_LIB\Include/arm_math.h **** *
   7:..\CMSIS_DSP_LIB\Include/arm_math.h **** * Project:      CMSIS DSP Library
   8:..\CMSIS_DSP_LIB\Include/arm_math.h **** * Title:        arm_math.h
   9:..\CMSIS_DSP_LIB\Include/arm_math.h **** *
  10:..\CMSIS_DSP_LIB\Include/arm_math.h **** * Description:  Public header file for CMSIS DSP Library
  11:..\CMSIS_DSP_LIB\Include/arm_math.h **** *
  12:..\CMSIS_DSP_LIB\Include/arm_math.h **** * Target Processor: Cortex-M7/Cortex-M4/Cortex-M3/Cortex-M0
  13:..\CMSIS_DSP_LIB\Include/arm_math.h **** *
  14:..\CMSIS_DSP_LIB\Include/arm_math.h **** * Redistribution and use in source and binary forms, with or without
  15:..\CMSIS_DSP_LIB\Include/arm_math.h **** * modification, are permitted provided that the following conditions
  16:..\CMSIS_DSP_LIB\Include/arm_math.h **** * are met:
  17:..\CMSIS_DSP_LIB\Include/arm_math.h **** *   - Redistributions of source code must retain the above copyright
  18:..\CMSIS_DSP_LIB\Include/arm_math.h **** *     notice, this list of conditions and the following disclaimer.
  19:..\CMSIS_DSP_LIB\Include/arm_math.h **** *   - Redistributions in binary form must reproduce the above copyright
  20:..\CMSIS_DSP_LIB\Include/arm_math.h **** *     notice, this list of conditions and the following disclaimer in
  21:..\CMSIS_DSP_LIB\Include/arm_math.h **** *     the documentation and/or other materials provided with the
  22:..\CMSIS_DSP_LIB\Include/arm_math.h **** *     distribution.
  23:..\CMSIS_DSP_LIB\Include/arm_math.h **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:..\CMSIS_DSP_LIB\Include/arm_math.h **** *     may be used to endorse or promote products derived from this
  25:..\CMSIS_DSP_LIB\Include/arm_math.h **** *     software without specific prior written permission.
  26:..\CMSIS_DSP_LIB\Include/arm_math.h **** *
  27:..\CMSIS_DSP_LIB\Include/arm_math.h **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:..\CMSIS_DSP_LIB\Include/arm_math.h **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:..\CMSIS_DSP_LIB\Include/arm_math.h **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:..\CMSIS_DSP_LIB\Include/arm_math.h **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  31:..\CMSIS_DSP_LIB\Include/arm_math.h **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:..\CMSIS_DSP_LIB\Include/arm_math.h **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:..\CMSIS_DSP_LIB\Include/arm_math.h **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:..\CMSIS_DSP_LIB\Include/arm_math.h **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:..\CMSIS_DSP_LIB\Include/arm_math.h **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 24


  36:..\CMSIS_DSP_LIB\Include/arm_math.h **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:..\CMSIS_DSP_LIB\Include/arm_math.h **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:..\CMSIS_DSP_LIB\Include/arm_math.h **** * POSSIBILITY OF SUCH DAMAGE.
  39:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * -------------------------------------------------------------------- */
  40:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
  41:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
  42:..\CMSIS_DSP_LIB\Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  43:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
  44:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Introduction
  45:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * ------------
  46:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
  47:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  48:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  49:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
  50:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  51:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Basic math functions
  52:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Fast math functions
  53:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Complex math functions
  54:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Filters
  55:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Matrix functions
  56:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Transforms
  57:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Motor control functions
  58:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Statistical functions
  59:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Support functions
  60:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Interpolation functions
  61:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
  62:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  63:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  64:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
  65:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Using the Library
  66:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * ------------
  67:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
  68:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  69:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Little endian and Double Precision Floating Point Unit on Cortex-
  70:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Big endian and Double Precision Floating Point Unit on Cortex-M7)
  71:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Little endian and Single Precision Floating Point Unit on Cortex-
  72:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Big endian and Single Precision Floating Point Unit on Cortex-M7)
  73:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Little endian on Cortex-M7)
  74:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Big endian on Cortex-M7)
  75:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Little endian and Floating Point Unit on Cortex-M4)
  76:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Big endian and Floating Point Unit on Cortex-M4)
  77:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Little endian on Cortex-M4)
  78:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Big endian on Cortex-M4)
  79:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Little endian on Cortex-M3)
  80:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Big endian on Cortex-M3)
  81:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Little endian on Cortex-M0 / CortexM0+)
  82:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Big endian on Cortex-M0 / CortexM0+)
  83:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
  84:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  85:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  86:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M7/M4/M3/M0/M0+ with little endian and 
  87:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Define the appropriate pre processor MACRO ARM_MATH_CM7 or ARM_MATH_CM4 or  ARM_MATH_CM3 or
  88:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  89:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
  90:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Examples
  91:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * --------
  92:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 25


  93:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  94:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
  95:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Toolchain Support
  96:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * ------------
  97:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
  98:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library has been developed and tested with MDK-ARM version 5.14.0.0
  99:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
 100:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 101:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Building the Library
 102:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * ------------
 103:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 104:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library installer contains a project file to re build libraries on MDK-ARM Tool chain in t
 105:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
 106:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 107:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 108:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
 109:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 110:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Pre-processor Macros
 111:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * ------------
 112:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 113:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Each library project have differant pre-processor macros.
 114:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 115:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 116:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 117:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 118:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 119:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 120:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 121:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 122:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 123:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 124:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 125:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 126:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 127:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 128:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 129:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 130:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 131:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - ARM_MATH_CMx:
 132:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 133:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 134:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * and ARM_MATH_CM0 for building library on Cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 135:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * ARM_MATH_CM7 for building the library on cortex-M7.
 136:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 137:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - __FPU_PRESENT:
 138:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 139:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 140:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 141:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <hr>
 142:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 143:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * -----------------------------
 144:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 145:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 146:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * |File/Folder                   |Content                                                       
 147:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 148:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 149:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 26


 150:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 151:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 152:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 153:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <hr>
 154:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Revision History of CMSIS-DSP
 155:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * ------------
 156:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 157:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 158:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Copyright Notice
 159:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * ------------
 160:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 161:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
 162:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 163:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 164:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 165:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
 166:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 167:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 168:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 169:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
 170:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 171:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 172:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 173:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * operate on individual values and not arrays.
 174:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 175:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *
 176:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 177:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 178:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
 179:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 180:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 181:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 182:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * (real, imag, real, imag, ...).
 183:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 184:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 185:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * real values.
 186:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 187:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 188:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
 189:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 190:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 191:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 192:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
 193:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 194:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *
 195:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 196:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 197:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * the type
 198:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 199:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * below:
 200:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * <pre>
 201:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *     typedef struct
 202:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *     {
 203:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 204:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 205:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 206:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *     } arm_matrix_instance_f32;
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 27


 207:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * </pre>
 208:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 209:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *
 210:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 211:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 212:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 213:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * matrix element (i, j) is stored at:
 214:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * <pre>
 215:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *     pData[i*numCols + j]
 216:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * </pre>
 217:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *
 218:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * \par Init Functions
 219:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 220:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * data structure.
 221:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 222:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 223:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 224:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *
 225:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * \par
 226:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 227:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 228:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * To place the instance structure in a const data
 229:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 230:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * <pre>
 231:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 232:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 233:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 234:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * </pre>
 235:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 236:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 237:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * data array.
 238:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *
 239:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * \par Size Checking
 240:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 241:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * output matrices.  For example, the matrix addition function verifies that the
 242:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 243:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * columns.  If the size check fails the functions return:
 244:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * <pre>
 245:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 246:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * </pre>
 247:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * Otherwise the functions return
 248:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * <pre>
 249:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 250:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * </pre>
 251:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 252:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 253:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * <pre>
 254:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 255:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * </pre>
 256:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 257:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * and size checking is enabled.  By changing the project settings and
 258:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 259:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * run a bit faster.  With size checking disabled the functions always
 260:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 261:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 262:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 263:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 28


 264:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 265:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 266:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 267:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
 268:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupController Controller Functions
 269:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 270:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 271:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
 272:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 273:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 274:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
 275:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 276:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 277:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 278:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
 279:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 280:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 281:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 282:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 283:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 284:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 285:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
 286:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupExamples Examples
 287:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 288:..\CMSIS_DSP_LIB\Include/arm_math.h **** #ifndef _ARM_MATH_H
 289:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define _ARM_MATH_H
 290:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 291:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* ignore some GCC warnings */
 292:..\CMSIS_DSP_LIB\Include/arm_math.h **** #if defined ( __GNUC__ )
 293:..\CMSIS_DSP_LIB\Include/arm_math.h **** #pragma GCC diagnostic push
 294:..\CMSIS_DSP_LIB\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
 295:..\CMSIS_DSP_LIB\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wconversion"
 296:..\CMSIS_DSP_LIB\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 297:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
 298:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 299:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 300:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 301:..\CMSIS_DSP_LIB\Include/arm_math.h **** #if defined(ARM_MATH_CM7)
 302:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #include "core_cm7.h"
 303:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif defined (ARM_MATH_CM4)
 304:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #include "core_cm4.h"
 305:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif defined (ARM_MATH_CM3)
 306:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #include "core_cm3.h"
 307:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif defined (ARM_MATH_CM0)
 308:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #include "core_cm0.h"
 309:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 310:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif defined (ARM_MATH_CM0PLUS)
 311:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #include "core_cm0plus.h"
 312:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 313:..\CMSIS_DSP_LIB\Include/arm_math.h **** #else
 314:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 315:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
 316:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 317:..\CMSIS_DSP_LIB\Include/arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 318:..\CMSIS_DSP_LIB\Include/arm_math.h **** #include "string.h"
 319:..\CMSIS_DSP_LIB\Include/arm_math.h **** #include "math.h"
 320:..\CMSIS_DSP_LIB\Include/arm_math.h **** #include <project.h>			/* for PSoC Creator 3.x */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 29


 321:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 322:..\CMSIS_DSP_LIB\Include/arm_math.h **** #ifdef   __cplusplus
 323:..\CMSIS_DSP_LIB\Include/arm_math.h **** extern "C"
 324:..\CMSIS_DSP_LIB\Include/arm_math.h **** {
 325:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
 326:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 327:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 328:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 329:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 330:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 331:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 332:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define DELTA_Q31          (0x100)
 333:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define DELTA_Q15          0x5
 334:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 335:..\CMSIS_DSP_LIB\Include/arm_math.h **** #ifndef PI
 336:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define PI                 3.14159265358979f
 337:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
 338:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 339:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 340:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 341:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 342:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 343:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 344:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 345:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 346:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 347:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define TABLE_SIZE  256
 348:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 349:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 350:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 351:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 352:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 353:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 354:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 355:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 356:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 357:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 358:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 359:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Macro for Unaligned Support
 360:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 361:..\CMSIS_DSP_LIB\Include/arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 362:..\CMSIS_DSP_LIB\Include/arm_math.h ****     #define ALIGN4
 363:..\CMSIS_DSP_LIB\Include/arm_math.h **** #else
 364:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #if defined  (__GNUC__)
 365:..\CMSIS_DSP_LIB\Include/arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 366:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #else
 367:..\CMSIS_DSP_LIB\Include/arm_math.h ****     #define ALIGN4 __align(4)
 368:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #endif
 369:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif   /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 370:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 371:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 372:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 373:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 374:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 375:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef enum
 376:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 377:..\CMSIS_DSP_LIB\Include/arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 30


 378:..\CMSIS_DSP_LIB\Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 379:..\CMSIS_DSP_LIB\Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 380:..\CMSIS_DSP_LIB\Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 381:..\CMSIS_DSP_LIB\Include/arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 382:..\CMSIS_DSP_LIB\Include/arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 383:..\CMSIS_DSP_LIB\Include/arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 384:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_status;
 385:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 386:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 387:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 388:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 389:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef int8_t q7_t;
 390:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 391:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 392:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 393:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 394:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef int16_t q15_t;
 395:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 396:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 397:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 398:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 399:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef int32_t q31_t;
 400:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 401:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 402:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 403:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 404:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef int64_t q63_t;
 405:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 406:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 407:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 408:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 409:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef float float32_t;
 410:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 411:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 412:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 413:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 414:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef double float64_t;
 415:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 416:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 417:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief definition to read/write two 16 bit values.
 418:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 419:..\CMSIS_DSP_LIB\Include/arm_math.h **** #if defined __CC_ARM
 420:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 421:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 422:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 423:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 424:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 425:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 426:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 427:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif defined __GNUC__
 428:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 429:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 430:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 431:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif defined __ICCARM__
 432:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 433:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define CMSIS_UNUSED
 434:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 31


 435:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif defined __CSMC__
 436:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 437:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define CMSIS_UNUSED
 438:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 439:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif defined __TASKING__
 440:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define __SIMD32_TYPE __unaligned int32_t
 441:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define CMSIS_UNUSED
 442:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 443:..\CMSIS_DSP_LIB\Include/arm_math.h **** #else
 444:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #error Unknown compiler
 445:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
 446:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 447:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 448:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 449:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 450:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define __SIMD64(addr)        (*(int64_t **) & (addr))
 451:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 452:..\CMSIS_DSP_LIB\Include/arm_math.h **** #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY)
 453:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 454:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief definition to pack two 16 bit values.
 455:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 456:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3)      ( (((int32_t)(ARG1) <<  0) & (int32_t)0x0000FFFF) | \
 457:..\CMSIS_DSP_LIB\Include/arm_math.h ****                                          (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 458:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3)      ( (((int32_t)(ARG1) <<  0) & (int32_t)0xFFFF0000) | \
 459:..\CMSIS_DSP_LIB\Include/arm_math.h ****                                          (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 460:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 461:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
 462:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 463:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 464:..\CMSIS_DSP_LIB\Include/arm_math.h ****    /**
 465:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief definition to pack four 8 bit values.
 466:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 467:..\CMSIS_DSP_LIB\Include/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 468:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 469:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 470:..\CMSIS_DSP_LIB\Include/arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 471:..\CMSIS_DSP_LIB\Include/arm_math.h ****                                 (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 472:..\CMSIS_DSP_LIB\Include/arm_math.h ****                                 (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 473:..\CMSIS_DSP_LIB\Include/arm_math.h **** #else
 474:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 475:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 476:..\CMSIS_DSP_LIB\Include/arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 477:..\CMSIS_DSP_LIB\Include/arm_math.h ****                                 (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 478:..\CMSIS_DSP_LIB\Include/arm_math.h ****                                 (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 479:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 480:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
 481:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 482:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 483:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 484:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 485:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 486:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q31_t clip_q63_to_q31(
 487:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q63_t x)
 488:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 489:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 490:..\CMSIS_DSP_LIB\Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 491:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 32


 492:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 493:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 494:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Clips Q63 to Q15 values.
 495:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 496:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q15_t clip_q63_to_q15(
 497:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q63_t x)
 498:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 499:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 500:..\CMSIS_DSP_LIB\Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 501:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 502:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 503:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 504:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Clips Q31 to Q7 values.
 505:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 506:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q7_t clip_q31_to_q7(
 507:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t x)
 508:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 509:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
 510:..\CMSIS_DSP_LIB\Include/arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 511:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 512:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 513:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 514:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Clips Q31 to Q15 values.
 515:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 516:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q15_t clip_q31_to_q15(
 517:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t x)
 518:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 519:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 520:..\CMSIS_DSP_LIB\Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 521:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 522:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 523:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 524:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
 525:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 526:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 527:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q63_t mult32x64(
 528:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q63_t x,
 529:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t y)
 530:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 531:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 532:..\CMSIS_DSP_LIB\Include/arm_math.h ****             (((q63_t) (x >> 32) * y)));
 533:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 534:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 535:..\CMSIS_DSP_LIB\Include/arm_math.h **** /*
 536:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #if defined (ARM_MATH_CM0_FAMILY) && defined ( __CC_ARM   )
 537:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define __CLZ __clz
 538:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #endif
 539:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 540:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* note: function can be removed when all toolchain support __CLZ for Cortex-M0 */
 541:..\CMSIS_DSP_LIB\Include/arm_math.h **** #if defined (ARM_MATH_CM0_FAMILY) && ((defined (__ICCARM__))  )
 542:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __CLZ(
 543:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t data);
 544:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 545:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __CLZ(
 546:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t data)
 547:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 548:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t count = 0;
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 33


 549:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t mask = 0x80000000;
 550:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 551:..\CMSIS_DSP_LIB\Include/arm_math.h ****     while((data & mask) == 0)
 552:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
 553:..\CMSIS_DSP_LIB\Include/arm_math.h ****       count += 1u;
 554:..\CMSIS_DSP_LIB\Include/arm_math.h ****       mask = mask >> 1u;
 555:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
 556:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 557:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return (count);
 558:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 559:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
 560:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 561:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 562:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
 563:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 564:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 565:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t arm_recip_q31(
 566:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t in,
 567:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * dst,
 568:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pRecipTable)
 569:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 570:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t out;
 571:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t tempVal;
 572:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t index, i;
 573:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t signBits;
 574:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 575:..\CMSIS_DSP_LIB\Include/arm_math.h ****     if(in > 0)
 576:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
 577:..\CMSIS_DSP_LIB\Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ( in) - 1));
 578:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
 579:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else
 580:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
 581:..\CMSIS_DSP_LIB\Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ(-in) - 1));
 582:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
 583:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 584:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Convert input sample to 1.31 format */
 585:..\CMSIS_DSP_LIB\Include/arm_math.h ****     in = (in << signBits);
 586:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 587:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 588:..\CMSIS_DSP_LIB\Include/arm_math.h ****     index = (uint32_t)(in >> 24);
 589:..\CMSIS_DSP_LIB\Include/arm_math.h ****     index = (index & INDEX_MASK);
 590:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 591:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* 1.31 with exp 1 */
 592:..\CMSIS_DSP_LIB\Include/arm_math.h ****     out = pRecipTable[index];
 593:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 594:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* calculation of reciprocal value */
 595:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* running approximation for two iterations */
 596:..\CMSIS_DSP_LIB\Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 597:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
 598:..\CMSIS_DSP_LIB\Include/arm_math.h ****       tempVal = (uint32_t) (((q63_t) in * out) >> 31);
 599:..\CMSIS_DSP_LIB\Include/arm_math.h ****       tempVal = 0x7FFFFFFFu - tempVal;
 600:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /*      1.31 with exp 1 */
 601:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
 602:..\CMSIS_DSP_LIB\Include/arm_math.h ****       out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
 603:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
 604:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 605:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* write output */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 34


 606:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *dst = out;
 607:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 608:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 609:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return (signBits + 1u);
 610:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 611:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 612:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 613:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 614:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q15 Data type.
 615:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 616:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t arm_recip_q15(
 617:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t in,
 618:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * dst,
 619:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pRecipTable)
 620:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 621:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t out = 0;
 622:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t tempVal = 0;
 623:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t index = 0, i = 0;
 624:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t signBits = 0;
 625:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 626:..\CMSIS_DSP_LIB\Include/arm_math.h ****     if(in > 0)
 627:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
 628:..\CMSIS_DSP_LIB\Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ( in) - 17));
 629:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
 630:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else
 631:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
 632:..\CMSIS_DSP_LIB\Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ(-in) - 17));
 633:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
 634:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 635:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Convert input sample to 1.15 format */
 636:..\CMSIS_DSP_LIB\Include/arm_math.h ****     in = (in << signBits);
 637:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 638:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 639:..\CMSIS_DSP_LIB\Include/arm_math.h ****     index = (uint32_t)(in >>  8);
 640:..\CMSIS_DSP_LIB\Include/arm_math.h ****     index = (index & INDEX_MASK);
 641:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 642:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /*      1.15 with exp 1  */
 643:..\CMSIS_DSP_LIB\Include/arm_math.h ****     out = pRecipTable[index];
 644:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 645:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* calculation of reciprocal value */
 646:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* running approximation for two iterations */
 647:..\CMSIS_DSP_LIB\Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 648:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
 649:..\CMSIS_DSP_LIB\Include/arm_math.h ****       tempVal = (uint32_t) (((q31_t) in * out) >> 15);
 650:..\CMSIS_DSP_LIB\Include/arm_math.h ****       tempVal = 0x7FFFu - tempVal;
 651:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /*      1.15 with exp 1 */
 652:..\CMSIS_DSP_LIB\Include/arm_math.h ****       out = (q15_t) (((q31_t) out * tempVal) >> 14);
 653:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* out = clip_q31_to_q15(((q31_t) out * tempVal) >> 14); */
 654:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
 655:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 656:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* write output */
 657:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *dst = out;
 658:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 659:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 660:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return (signBits + 1);
 661:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 662:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 35


 663:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 664:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 665:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined intrinisic function for only M0 processors
 666:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 667:..\CMSIS_DSP_LIB\Include/arm_math.h **** #if defined(ARM_MATH_CM0_FAMILY)
 668:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q31_t __SSAT(
 669:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t x,
 670:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 671:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 672:..\CMSIS_DSP_LIB\Include/arm_math.h ****     int32_t posMax, negMin;
 673:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t i;
 674:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 675:..\CMSIS_DSP_LIB\Include/arm_math.h ****     posMax = 1;
 676:..\CMSIS_DSP_LIB\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 677:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
 678:..\CMSIS_DSP_LIB\Include/arm_math.h ****       posMax = posMax * 2;
 679:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
 680:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 681:..\CMSIS_DSP_LIB\Include/arm_math.h ****     if(x > 0)
 682:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
 683:..\CMSIS_DSP_LIB\Include/arm_math.h ****       posMax = (posMax - 1);
 684:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 685:..\CMSIS_DSP_LIB\Include/arm_math.h ****       if(x > posMax)
 686:..\CMSIS_DSP_LIB\Include/arm_math.h ****       {
 687:..\CMSIS_DSP_LIB\Include/arm_math.h ****         x = posMax;
 688:..\CMSIS_DSP_LIB\Include/arm_math.h ****       }
 689:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
 690:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else
 691:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
 692:..\CMSIS_DSP_LIB\Include/arm_math.h ****       negMin = -posMax;
 693:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 694:..\CMSIS_DSP_LIB\Include/arm_math.h ****       if(x < negMin)
 695:..\CMSIS_DSP_LIB\Include/arm_math.h ****       {
 696:..\CMSIS_DSP_LIB\Include/arm_math.h ****         x = negMin;
 697:..\CMSIS_DSP_LIB\Include/arm_math.h ****       }
 698:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
 699:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return (x);
 700:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 701:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif /* end of ARM_MATH_CM0_FAMILY */
 702:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 703:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 704:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 705:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined intrinsic function for M3 and M0 processors
 706:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 707:..\CMSIS_DSP_LIB\Include/arm_math.h **** #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY)
 708:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 709:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 710:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined QADD8 for M3 and M0 processors
 711:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 712:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __QADD8(
 713:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 714:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 715:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 716:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t r, s, t, u;
 717:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 718:..\CMSIS_DSP_LIB\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) + (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 719:..\CMSIS_DSP_LIB\Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) + (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 36


 720:..\CMSIS_DSP_LIB\Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) + (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 721:..\CMSIS_DSP_LIB\Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) + (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 722:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 723:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 724:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 725:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 726:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 727:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 728:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined QSUB8 for M3 and M0 processors
 729:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 730:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __QSUB8(
 731:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 732:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 733:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 734:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t r, s, t, u;
 735:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 736:..\CMSIS_DSP_LIB\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) - (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 737:..\CMSIS_DSP_LIB\Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) - (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 738:..\CMSIS_DSP_LIB\Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) - (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 739:..\CMSIS_DSP_LIB\Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) - (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 740:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 741:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 742:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 743:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 744:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 745:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 746:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined QADD16 for M3 and M0 processors
 747:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 748:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __QADD16(
 749:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 750:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 751:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 752:..\CMSIS_DSP_LIB\Include/arm_math.h **** /*  q31_t r,     s;  without initialisation 'arm_offset_q15 test' fails  but 'intrinsic' tests pass
 753:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t r = 0, s = 0;
 754:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 755:..\CMSIS_DSP_LIB\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 756:..\CMSIS_DSP_LIB\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 757:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 758:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 759:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 760:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 761:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 762:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 763:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SHADD16 for M3 and M0 processors
 764:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 765:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SHADD16(
 766:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 767:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 768:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 769:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t r, s;
 770:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 771:..\CMSIS_DSP_LIB\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 772:..\CMSIS_DSP_LIB\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 773:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 774:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 775:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 776:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 37


 777:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 778:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 779:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined QSUB16 for M3 and M0 processors
 780:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 781:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __QSUB16(
 782:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 783:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 784:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 785:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t r, s;
 786:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 787:..\CMSIS_DSP_LIB\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 788:..\CMSIS_DSP_LIB\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 789:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 790:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 791:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 792:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 793:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 794:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 795:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SHSUB16 for M3 and M0 processors
 796:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 797:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SHSUB16(
 798:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 799:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 800:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 801:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t r, s;
 802:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 803:..\CMSIS_DSP_LIB\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 804:..\CMSIS_DSP_LIB\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 805:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 806:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 807:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 808:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 809:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 810:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 811:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined QASX for M3 and M0 processors
 812:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 813:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __QASX(
 814:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 815:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 816:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 817:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t r, s;
 818:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 819:..\CMSIS_DSP_LIB\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 820:..\CMSIS_DSP_LIB\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 821:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 822:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 823:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 824:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 825:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 826:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 827:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SHASX for M3 and M0 processors
 828:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 829:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SHASX(
 830:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 831:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 832:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 833:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t r, s;
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 38


 834:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 835:..\CMSIS_DSP_LIB\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 836:..\CMSIS_DSP_LIB\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 837:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 838:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 839:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 840:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 841:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 842:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 843:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined QSAX for M3 and M0 processors
 844:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 845:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __QSAX(
 846:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 847:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 848:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 849:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t r, s;
 850:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 851:..\CMSIS_DSP_LIB\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 852:..\CMSIS_DSP_LIB\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 853:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 854:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 855:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 856:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 857:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 858:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 859:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SHSAX for M3 and M0 processors
 860:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 861:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SHSAX(
 862:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 863:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 864:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 865:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t r, s;
 866:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 867:..\CMSIS_DSP_LIB\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 868:..\CMSIS_DSP_LIB\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 869:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 870:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 871:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 872:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 873:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 874:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 875:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SMUSDX for M3 and M0 processors
 876:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 877:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SMUSDX(
 878:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 879:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 880:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 881:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 882:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 883:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 884:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 885:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 886:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SMUADX for M3 and M0 processors
 887:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 888:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SMUADX(
 889:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 890:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 39


 891:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 892:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 893:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 894:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 895:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 896:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 897:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 898:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined QADD for M3 and M0 processors
 899:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 900:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE int32_t __QADD(
 901:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t x,
 902:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t y)
 903:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 904:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x + (q31_t)y)));
 905:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 906:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 907:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 908:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 909:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined QSUB for M3 and M0 processors
 910:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 911:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE int32_t __QSUB(
 912:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t x,
 913:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t y)
 914:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 915:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x - (q31_t)y)));
 916:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 917:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 918:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 919:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 920:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SMLAD for M3 and M0 processors
 921:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 922:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SMLAD(
 923:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 924:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y,
 925:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t sum)
 926:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 927:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 928:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 929:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 930:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 931:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 932:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 933:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 934:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SMLADX for M3 and M0 processors
 935:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 936:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SMLADX(
 937:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 938:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y,
 939:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t sum)
 940:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 941:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 942:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 943:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 944:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 945:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 946:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 947:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 40


 948:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SMLSDX for M3 and M0 processors
 949:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 950:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SMLSDX(
 951:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 952:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y,
 953:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t sum)
 954:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 955:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 956:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 957:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 958:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 959:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 960:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 961:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 962:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SMLALD for M3 and M0 processors
 963:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 964:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint64_t __SMLALD(
 965:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 966:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y,
 967:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint64_t sum)
 968:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 969:..\CMSIS_DSP_LIB\Include/arm_math.h **** /*  return (sum + ((q15_t) (x >> 16) * (q15_t) (y >> 16)) + ((q15_t) x * (q15_t) y)); */
 970:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 971:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 972:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ( ((q63_t)sum    )                                  )   ));
 973:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 974:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 975:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 976:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 977:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SMLALDX for M3 and M0 processors
 978:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 979:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint64_t __SMLALDX(
 980:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 981:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y,
 982:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint64_t sum)
 983:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 984:..\CMSIS_DSP_LIB\Include/arm_math.h **** /*  return (sum + ((q15_t) (x >> 16) * (q15_t) y)) + ((q15_t) x * (q15_t) (y >> 16)); */
 985:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 986:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 987:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ( ((q63_t)sum    )                                  )   ));
 988:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 989:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 990:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 991:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 992:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SMUAD for M3 and M0 processors
 993:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 994:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SMUAD(
 995:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 996:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 997:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 998:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 999:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
1000:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
1001:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1002:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1003:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
1004:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SMUSD for M3 and M0 processors
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 41


1005:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1006:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SMUSD(
1007:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
1008:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
1009:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1010:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) -
1011:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
1012:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
1013:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1014:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1015:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
1016:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SXTB16 for M3 and M0 processors
1017:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1018:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SXTB16(
1019:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x)
1020:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1021:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 24) >> 24) & (q31_t)0x0000FFFF) |
1022:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ((((q31_t)x <<  8) >>  8) & (q31_t)0xFFFF0000)  ));
1023:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
1024:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1025:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif /* defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
1026:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1027:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1028:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1029:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q7 FIR filter.
1030:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1031:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1032:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1033:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;        /**< number of filter coefficients in the filter. */
1034:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q7_t *pState;            /**< points to the state variable array. The array is of length numTap
1035:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q7_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.*
1036:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_instance_q7;
1037:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1038:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1039:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR filter.
1040:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1041:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1042:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1043:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;         /**< number of filter coefficients in the filter. */
1044:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pState;            /**< points to the state variable array. The array is of length numTa
1045:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.
1046:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_instance_q15;
1047:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1048:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1049:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR filter.
1050:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1051:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1052:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1053:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;         /**< number of filter coefficients in the filter. */
1054:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pState;            /**< points to the state variable array. The array is of length numTa
1055:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.
1056:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_instance_q31;
1057:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1058:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1059:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR filter.
1060:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1061:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 42


1062:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1063:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;     /**< number of filter coefficients in the filter. */
1064:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;    /**< points to the state variable array. The array is of length numTaps+b
1065:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTaps. */
1066:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_instance_f32;
1067:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1068:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1069:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1070:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q7 FIR filter.
1071:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q7 FIR filter structure.
1072:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1073:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1074:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1075:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1076:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_q7(
1077:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_instance_q7 * S,
1078:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
1079:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
1080:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1081:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1082:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1083:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1084:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q7 FIR filter.
1085:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q7 FIR structure.
1086:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1087:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1088:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1089:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed.
1090:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1091:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_init_q7(
1092:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_instance_q7 * S,
1093:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
1094:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pCoeffs,
1095:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pState,
1096:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1097:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1098:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1099:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1100:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q15 FIR filter.
1101:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR structure.
1102:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1103:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1104:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1105:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1106:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_q15(
1107:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_instance_q15 * S,
1108:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
1109:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
1110:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1111:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1112:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1113:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1114:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the fast Q15 FIR filter for Cortex-M3 and Cortex-M4.
1115:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR filter structure.
1116:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1117:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1118:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 43


1119:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1120:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_fast_q15(
1121:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_instance_q15 * S,
1122:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
1123:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
1124:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1125:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1126:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1127:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1128:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q15 FIR filter.
1129:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR filter structure.
1130:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter. Must be even and greate
1131:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1132:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1133:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1134:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return The function returns ARM_MATH_SUCCESS if initialization was successful or ARM_MATH_ARG
1135:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>numTaps</code> is not a supported value.
1136:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1137:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_fir_init_q15(
1138:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_instance_q15 * S,
1139:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
1140:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pCoeffs,
1141:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState,
1142:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1143:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1144:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1145:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1146:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q31 FIR filter.
1147:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR filter structure.
1148:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1149:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1150:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1151:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1152:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_q31(
1153:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_instance_q31 * S,
1154:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
1155:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
1156:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1157:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1158:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1159:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1160:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the fast Q31 FIR filter for Cortex-M3 and Cortex-M4.
1161:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR structure.
1162:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1163:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1164:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1165:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1166:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_fast_q31(
1167:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_instance_q31 * S,
1168:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
1169:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
1170:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1171:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1172:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1173:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1174:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q31 FIR filter.
1175:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR structure.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 44


1176:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1177:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1178:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1179:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1180:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1181:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_init_q31(
1182:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_instance_q31 * S,
1183:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
1184:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pCoeffs,
1185:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pState,
1186:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1187:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1188:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1189:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1190:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point FIR filter.
1191:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR structure.
1192:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1193:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1194:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1195:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1196:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_f32(
1197:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_instance_f32 * S,
1198:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
1199:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
1200:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1201:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1202:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1203:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1204:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the floating-point FIR filter.
1205:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR filter structure.
1206:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1207:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1208:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1209:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1210:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1211:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_init_f32(
1212:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_instance_f32 * S,
1213:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
1214:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCoeffs,
1215:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState,
1216:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1217:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1218:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1219:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1220:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 Biquad cascade filter.
1221:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1222:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1223:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1224:..\CMSIS_DSP_LIB\Include/arm_math.h ****     int8_t numStages;        /**< number of 2nd order stages in the filter.  Overall order is 2*num
1225:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pState;           /**< Points to the array of state coefficients.  The array is of lengt
1226:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of length 5*nu
1227:..\CMSIS_DSP_LIB\Include/arm_math.h ****     int8_t postShift;        /**< Additional shift, in bits, applied to each output sample. */
1228:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_biquad_casd_df1_inst_q15;
1229:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1230:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1231:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 Biquad cascade filter.
1232:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 45


1233:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1234:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1235:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is 2*num
1236:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pState;           /**< Points to the array of state coefficients.  The array is of lengt
1237:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of length 5*nu
1238:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t postShift;       /**< Additional shift, in bits, applied to each output sample. */
1239:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_biquad_casd_df1_inst_q31;
1240:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1241:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1242:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point Biquad cascade filter.
1243:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1244:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1245:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1246:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is 2*num
1247:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;       /**< Points to the array of state coefficients.  The array is of lengt
1248:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCoeffs;      /**< Points to the array of coefficients.  The array is of length 5*nu
1249:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_biquad_casd_df1_inst_f32;
1250:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1251:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1252:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1253:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q15 Biquad cascade filter.
1254:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
1255:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1256:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1257:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1258:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1259:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df1_q15(
1260:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q15 * S,
1261:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
1262:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
1263:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1264:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1265:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1266:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1267:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q15 Biquad cascade filter.
1268:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 Biquad cascade structure.
1269:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1270:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1271:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1272:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficie
1273:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1274:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df1_init_q15(
1275:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_biquad_casd_df1_inst_q15 * S,
1276:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t numStages,
1277:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pCoeffs,
1278:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState,
1279:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int8_t postShift);
1280:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1281:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1282:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1283:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Fast but less precise processing function for the Q15 Biquad cascade filter for Cortex-
1284:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
1285:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1286:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1287:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1288:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1289:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df1_fast_q15(
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 46


1290:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q15 * S,
1291:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
1292:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
1293:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1294:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1295:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1296:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1297:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q31 Biquad cascade filter
1298:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
1299:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1300:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1301:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1302:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1303:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df1_q31(
1304:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q31 * S,
1305:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
1306:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
1307:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1308:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1309:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1310:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1311:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Fast but less precise processing function for the Q31 Biquad cascade filter for Cortex-
1312:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
1313:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1314:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1315:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1316:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1317:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df1_fast_q31(
1318:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q31 * S,
1319:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
1320:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
1321:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1322:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1323:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1324:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1325:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q31 Biquad cascade filter.
1326:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 Biquad cascade structure.
1327:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1328:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1329:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1330:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficie
1331:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1332:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df1_init_q31(
1333:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_biquad_casd_df1_inst_q31 * S,
1334:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t numStages,
1335:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pCoeffs,
1336:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pState,
1337:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int8_t postShift);
1338:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1339:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1340:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1341:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point Biquad cascade filter.
1342:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point Biquad cascade structure.
1343:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1344:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1345:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1346:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 47


1347:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df1_f32(
1348:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_biquad_casd_df1_inst_f32 * S,
1349:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
1350:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
1351:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1352:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1353:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1354:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1355:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the floating-point Biquad cascade filter.
1356:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point Biquad cascade structure
1357:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1358:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1359:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1360:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1361:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df1_init_f32(
1362:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_biquad_casd_df1_inst_f32 * S,
1363:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t numStages,
1364:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCoeffs,
1365:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState);
1366:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1367:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1368:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1369:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point matrix structure.
1370:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1371:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1372:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1373:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1374:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1375:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pData;     /**< points to the data of the matrix. */
1376:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_matrix_instance_f32;
1377:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1378:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1379:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1380:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point matrix structure.
1381:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1382:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1383:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1384:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1385:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1386:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float64_t *pData;     /**< points to the data of the matrix. */
1387:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_matrix_instance_f64;
1388:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1389:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1390:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 matrix structure.
1391:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1392:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1393:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1394:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1395:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1396:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pData;         /**< points to the data of the matrix. */
1397:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_matrix_instance_q15;
1398:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1399:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1400:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 matrix structure.
1401:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1402:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1403:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 48


1404:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1405:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1406:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pData;         /**< points to the data of the matrix. */
1407:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_matrix_instance_q31;
1408:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1409:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1410:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1411:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point matrix addition.
1412:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1413:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1414:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1415:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1416:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1417:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1418:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_add_f32(
1419:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1420:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1421:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1422:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1423:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1424:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1425:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15 matrix addition.
1426:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]   pSrcA  points to the first input matrix structure
1427:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]   pSrcB  points to the second input matrix structure
1428:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out]  pDst   points to output matrix structure
1429:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1430:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1431:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1432:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_add_q15(
1433:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1434:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1435:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1436:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1437:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1438:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1439:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31 matrix addition.
1440:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1441:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1442:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1443:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1444:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1445:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1446:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_add_q31(
1447:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1448:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1449:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1450:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1451:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1452:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1453:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point, complex, matrix multiplication.
1454:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1455:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1456:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1457:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1458:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1459:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1460:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_cmplx_mult_f32(
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 49


1461:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1462:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1463:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1464:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1465:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1466:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1467:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15, complex,  matrix multiplication.
1468:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1469:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1470:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1471:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1472:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1473:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1474:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_cmplx_mult_q15(
1475:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1476:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1477:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q15 * pDst,
1478:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch);
1479:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1480:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1481:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1482:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31, complex, matrix multiplication.
1483:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1484:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1485:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1486:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1487:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1488:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1489:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_cmplx_mult_q31(
1490:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1491:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1492:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1493:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1494:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1495:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1496:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point matrix transpose.
1497:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1498:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst  points to the output matrix
1499:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1500:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1501:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1502:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_trans_f32(
1503:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrc,
1504:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1505:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1506:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1507:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1508:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15 matrix transpose.
1509:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1510:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst  points to the output matrix
1511:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1512:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1513:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1514:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_trans_q15(
1515:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrc,
1516:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1517:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 50


1518:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1519:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1520:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31 matrix transpose.
1521:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1522:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst  points to the output matrix
1523:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1524:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1525:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1526:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_trans_q31(
1527:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrc,
1528:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1529:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1530:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1531:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1532:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point matrix multiplication
1533:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1534:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1535:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1536:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1537:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1538:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1539:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_mult_f32(
1540:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1541:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1542:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1543:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1544:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1545:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1546:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15 matrix multiplication
1547:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA   points to the first input matrix structure
1548:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB   points to the second input matrix structure
1549:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst    points to output matrix structure
1550:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pState  points to the array for storing intermediate results
1551:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1552:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1553:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1554:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_mult_q15(
1555:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1556:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1557:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q15 * pDst,
1558:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState);
1559:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1560:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1561:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1562:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
1563:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA   points to the first input matrix structure
1564:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB   points to the second input matrix structure
1565:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst    points to output matrix structure
1566:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pState  points to the array for storing intermediate results
1567:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1568:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1569:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1570:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_mult_fast_q15(
1571:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1572:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1573:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q15 * pDst,
1574:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState);
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 51


1575:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1576:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1577:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1578:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31 matrix multiplication
1579:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1580:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1581:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1582:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1583:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1584:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1585:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_mult_q31(
1586:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1587:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1588:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1589:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1590:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1591:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1592:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
1593:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1594:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1595:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1596:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1597:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1598:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1599:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_mult_fast_q31(
1600:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1601:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1602:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1603:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1604:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1605:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1606:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point matrix subtraction
1607:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1608:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1609:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1610:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1611:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1612:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1613:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_sub_f32(
1614:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1615:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1616:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1617:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1618:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1619:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1620:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15 matrix subtraction
1621:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1622:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1623:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1624:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1625:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1626:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1627:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_sub_q15(
1628:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1629:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1630:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1631:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 52


1632:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1633:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1634:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31 matrix subtraction
1635:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1636:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1637:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1638:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1639:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1640:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1641:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_sub_q31(
1642:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1643:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1644:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1645:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1646:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1647:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1648:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point matrix scaling.
1649:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc   points to the input matrix
1650:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  scale  scale factor
1651:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to the output matrix
1652:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1653:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1654:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1655:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_scale_f32(
1656:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrc,
1657:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t scale,
1658:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1659:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1660:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1661:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1662:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15 matrix scaling.
1663:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to input matrix
1664:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale factor
1665:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
1666:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to output matrix
1667:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1668:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1669:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1670:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_scale_q15(
1671:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrc,
1672:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t scaleFract,
1673:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t shift,
1674:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1675:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1676:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1677:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1678:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31 matrix scaling.
1679:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to input matrix
1680:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale factor
1681:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
1682:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to output matrix structure
1683:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1684:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1685:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1686:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_scale_q31(
1687:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrc,
1688:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t scaleFract,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 53


1689:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t shift,
1690:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1691:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1692:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1693:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1694:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Q31 matrix initialization.
1695:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1696:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1697:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1698:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1699:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1700:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_mat_init_q31(
1701:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q31 * S,
1702:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t nRows,
1703:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t nColumns,
1704:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pData);
1705:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1706:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1707:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1708:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Q15 matrix initialization.
1709:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1710:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1711:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1712:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1713:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1714:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_mat_init_q15(
1715:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q15 * S,
1716:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t nRows,
1717:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t nColumns,
1718:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pData);
1719:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1720:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1721:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1722:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Floating-point matrix initialization.
1723:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1724:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1725:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1726:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1727:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1728:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_mat_init_f32(
1729:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_f32 * S,
1730:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t nRows,
1731:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t nColumns,
1732:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pData);
1733:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1734:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1735:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1736:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1737:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 PID Control.
1738:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1739:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1740:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1741:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t A0;           /**< The derived gain, A0 = Kp + Ki + Kd . */
1742:..\CMSIS_DSP_LIB\Include/arm_math.h **** #ifdef ARM_MATH_CM0_FAMILY
1743:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t A1;
1744:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t A2;
1745:..\CMSIS_DSP_LIB\Include/arm_math.h **** #else
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 54


1746:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t A1;           /**< The derived gain A1 = -Kp - 2Kd | Kd.*/
1747:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
1748:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t state[3];     /**< The state array of length 3. */
1749:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t Kp;           /**< The proportional gain. */
1750:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t Ki;           /**< The integral gain. */
1751:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t Kd;           /**< The derivative gain. */
1752:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_pid_instance_q15;
1753:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1754:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1755:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 PID Control.
1756:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1757:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1758:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1759:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t A0;            /**< The derived gain, A0 = Kp + Ki + Kd . */
1760:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t A1;            /**< The derived gain, A1 = -Kp - 2Kd. */
1761:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t A2;            /**< The derived gain, A2 = Kd . */
1762:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t state[3];      /**< The state array of length 3. */
1763:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t Kp;            /**< The proportional gain. */
1764:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t Ki;            /**< The integral gain. */
1765:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t Kd;            /**< The derivative gain. */
1766:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_pid_instance_q31;
1767:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1768:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1769:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point PID Control.
1770:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1771:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1772:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1773:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t A0;          /**< The derived gain, A0 = Kp + Ki + Kd . */
1774:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t A1;          /**< The derived gain, A1 = -Kp - 2Kd. */
1775:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t A2;          /**< The derived gain, A2 = Kd . */
1776:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t state[3];    /**< The state array of length 3. */
1777:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t Kp;          /**< The proportional gain. */
1778:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t Ki;          /**< The integral gain. */
1779:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t Kd;          /**< The derivative gain. */
1780:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_pid_instance_f32;
1781:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1782:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1783:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1784:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1785:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the floating-point PID Control.
1786:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S               points to an instance of the PID structure.
1787:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1788:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1789:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_pid_init_f32(
1790:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_pid_instance_f32 * S,
1791:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t resetStateFlag);
1792:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1793:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1794:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1795:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Reset function for the floating-point PID Control.
1796:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S  is an instance of the floating-point PID Control structure
1797:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1798:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_pid_reset_f32(
1799:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_pid_instance_f32 * S);
1800:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1801:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1802:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 55


1803:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q31 PID Control.
1804:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S               points to an instance of the Q15 PID structure.
1805:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1806:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1807:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_pid_init_q31(
1808:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_pid_instance_q31 * S,
1809:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t resetStateFlag);
1810:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1811:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1812:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1813:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Reset function for the Q31 PID Control.
1814:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S   points to an instance of the Q31 PID Control structure
1815:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1816:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1817:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_pid_reset_q31(
1818:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_pid_instance_q31 * S);
1819:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1820:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1821:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1822:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q15 PID Control.
1823:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S               points to an instance of the Q15 PID structure.
1824:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1825:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1826:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_pid_init_q15(
1827:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_pid_instance_q15 * S,
1828:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t resetStateFlag);
1829:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1830:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1831:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1832:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Reset function for the Q15 PID Control.
1833:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S  points to an instance of the q15 PID Control structure
1834:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1835:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_pid_reset_q15(
1836:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_pid_instance_q15 * S);
1837:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1838:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1839:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1840:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point Linear Interpolate function.
1841:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1842:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1843:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1844:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t nValues;           /**< nValues */
1845:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t x1;               /**< x1 */
1846:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t xSpacing;         /**< xSpacing */
1847:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pYData;          /**< pointer to the table of Y values */
1848:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_linear_interp_instance_f32;
1849:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1850:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1851:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point bilinear interpolation function.
1852:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1853:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1854:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1855:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1856:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1857:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pData;   /**< points to the data table. */
1858:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_bilinear_interp_instance_f32;
1859:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 56


1860:..\CMSIS_DSP_LIB\Include/arm_math.h ****    /**
1861:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 bilinear interpolation function.
1862:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1863:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1864:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1865:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1866:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1867:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pData;       /**< points to the data table. */
1868:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_bilinear_interp_instance_q31;
1869:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1870:..\CMSIS_DSP_LIB\Include/arm_math.h ****    /**
1871:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 bilinear interpolation function.
1872:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1873:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1874:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1875:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1876:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1877:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pData;       /**< points to the data table. */
1878:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_bilinear_interp_instance_q15;
1879:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1880:..\CMSIS_DSP_LIB\Include/arm_math.h ****    /**
1881:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 bilinear interpolation function.
1882:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1883:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1884:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1885:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1886:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1887:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q7_t *pData;        /**< points to the data table. */
1888:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_bilinear_interp_instance_q7;
1889:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1890:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1891:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1892:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q7 vector multiplication.
1893:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1894:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1895:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
1896:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1897:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1898:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_mult_q7(
1899:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcA,
1900:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcB,
1901:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
1902:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1903:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1904:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1905:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1906:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15 vector multiplication.
1907:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1908:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1909:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
1910:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1911:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1912:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_mult_q15(
1913:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
1914:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
1915:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
1916:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 57


1917:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1918:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1919:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1920:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31 vector multiplication.
1921:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1922:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1923:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
1924:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1925:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1926:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_mult_q31(
1927:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcA,
1928:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcB,
1929:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
1930:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1931:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1932:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1933:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1934:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point vector multiplication.
1935:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1936:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1937:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
1938:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1939:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1940:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_mult_f32(
1941:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcA,
1942:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcB,
1943:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
1944:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1945:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1946:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1947:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1948:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 CFFT/CIFFT function.
1949:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1950:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1951:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1952:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
1953:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
1954:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
1955:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pTwiddle;                 /**< points to the Sin twiddle factor table. */
1956:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
1957:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
1958:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
1959:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_cfft_radix2_instance_q15;
1960:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1961:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
1962:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_cfft_radix2_init_q15(
1963:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_cfft_radix2_instance_q15 * S,
1964:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t fftLen,
1965:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t ifftFlag,
1966:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t bitReverseFlag);
1967:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1968:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
1969:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cfft_radix2_q15(
1970:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_cfft_radix2_instance_q15 * S,
1971:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc);
1972:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1973:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 58


1974:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1975:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 CFFT/CIFFT function.
1976:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1977:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1978:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1979:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
1980:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
1981:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
1982:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pTwiddle;                 /**< points to the twiddle factor table. */
1983:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
1984:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
1985:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
1986:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_cfft_radix4_instance_q15;
1987:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1988:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
1989:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_cfft_radix4_init_q15(
1990:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_cfft_radix4_instance_q15 * S,
1991:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t fftLen,
1992:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t ifftFlag,
1993:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t bitReverseFlag);
1994:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1995:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
1996:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cfft_radix4_q15(
1997:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_cfft_radix4_instance_q15 * S,
1998:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc);
1999:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2000:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2001:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Radix-2 Q31 CFFT/CIFFT function.
2002:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2003:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2004:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2005:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
2006:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
2007:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
2008:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pTwiddle;                 /**< points to the Twiddle factor table. */
2009:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2010:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
2011:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
2012:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_cfft_radix2_instance_q31;
2013:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2014:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
2015:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_cfft_radix2_init_q31(
2016:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_cfft_radix2_instance_q31 * S,
2017:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t fftLen,
2018:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t ifftFlag,
2019:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t bitReverseFlag);
2020:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2021:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
2022:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cfft_radix2_q31(
2023:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_cfft_radix2_instance_q31 * S,
2024:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc);
2025:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2026:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2027:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 CFFT/CIFFT function.
2028:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2029:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2030:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 59


2031:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
2032:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
2033:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
2034:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pTwiddle;                 /**< points to the twiddle factor table. */
2035:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2036:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
2037:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
2038:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_cfft_radix4_instance_q31;
2039:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2040:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
2041:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cfft_radix4_q31(
2042:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_cfft_radix4_instance_q31 * S,
2043:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc);
2044:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2045:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
2046:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_cfft_radix4_init_q31(
2047:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_cfft_radix4_instance_q31 * S,
2048:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t fftLen,
2049:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t ifftFlag,
2050:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t bitReverseFlag);
2051:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2052:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2053:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2054:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2055:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2056:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2057:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2058:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse (ifft
2059:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables (bitRe
2060:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
2061:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
2062:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports different si
2063:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t bitRevFactor;             /**< bit reversal modifier that supports different size FFTs
2064:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t onebyfftLen;             /**< value of 1/fftLen. */
2065:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_cfft_radix2_instance_f32;
2066:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2067:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
2068:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_cfft_radix2_init_f32(
2069:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_cfft_radix2_instance_f32 * S,
2070:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t fftLen,
2071:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t ifftFlag,
2072:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t bitReverseFlag);
2073:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2074:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
2075:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cfft_radix2_f32(
2076:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_cfft_radix2_instance_f32 * S,
2077:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc);
2078:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2079:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2080:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2081:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2082:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2083:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2084:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2085:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse (ifft
2086:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables (bitRe
2087:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 60


2088:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
2089:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports different si
2090:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t bitRevFactor;             /**< bit reversal modifier that supports different size FFTs
2091:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t onebyfftLen;             /**< value of 1/fftLen. */
2092:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_cfft_radix4_instance_f32;
2093:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2094:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
2095:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_cfft_radix4_init_f32(
2096:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_cfft_radix4_instance_f32 * S,
2097:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t fftLen,
2098:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t ifftFlag,
2099:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t bitReverseFlag);
2100:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2101:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
2102:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cfft_radix4_f32(
2103:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_cfft_radix4_instance_f32 * S,
2104:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc);
2105:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2106:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2107:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the fixed-point CFFT/CIFFT function.
2108:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2109:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2110:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2111:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2112:..\CMSIS_DSP_LIB\Include/arm_math.h ****     const q15_t *pTwiddle;             /**< points to the Twiddle factor table. */
2113:..\CMSIS_DSP_LIB\Include/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2114:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2115:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_cfft_instance_q15;
2116:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2117:..\CMSIS_DSP_LIB\Include/arm_math.h **** void arm_cfft_q15(
2118:..\CMSIS_DSP_LIB\Include/arm_math.h ****     const arm_cfft_instance_q15 * S,
2119:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t * p1,
2120:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlag,
2121:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlag);
2122:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2123:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2124:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the fixed-point CFFT/CIFFT function.
2125:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2126:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2127:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2128:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2129:..\CMSIS_DSP_LIB\Include/arm_math.h ****     const q31_t *pTwiddle;             /**< points to the Twiddle factor table. */
2130:..\CMSIS_DSP_LIB\Include/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2131:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2132:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_cfft_instance_q31;
2133:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2134:..\CMSIS_DSP_LIB\Include/arm_math.h **** void arm_cfft_q31(
2135:..\CMSIS_DSP_LIB\Include/arm_math.h ****     const arm_cfft_instance_q31 * S,
2136:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t * p1,
2137:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlag,
2138:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlag);
2139:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2140:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2141:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2142:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2143:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2144:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 61


2145:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2146:..\CMSIS_DSP_LIB\Include/arm_math.h ****     const float32_t *pTwiddle;         /**< points to the Twiddle factor table. */
2147:..\CMSIS_DSP_LIB\Include/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2148:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2149:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_cfft_instance_f32;
2150:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2151:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cfft_f32(
2152:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_cfft_instance_f32 * S,
2153:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * p1,
2154:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t ifftFlag,
2155:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t bitReverseFlag);
2156:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2157:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2158:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 RFFT/RIFFT function.
2159:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2160:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2161:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2162:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t fftLenReal;                      /**< length of the real FFT. */
2163:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlagR;                        /**< flag that selects forward (ifftFlagR=0) or inver
2164:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlagR;                  /**< flag that enables (bitReverseFlagR=1) or disable
2165:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t twidCoefRModifier;               /**< twiddle coefficient modifier that supports diffe
2166:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pTwiddleAReal;                     /**< points to the real twiddle factor table. */
2167:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pTwiddleBReal;                     /**< points to the imag twiddle factor table. */
2168:..\CMSIS_DSP_LIB\Include/arm_math.h ****     const arm_cfft_instance_q15 *pCfft;       /**< points to the complex FFT instance. */
2169:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_rfft_instance_q15;
2170:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2171:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_rfft_init_q15(
2172:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_rfft_instance_q15 * S,
2173:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t fftLenReal,
2174:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t ifftFlagR,
2175:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t bitReverseFlag);
2176:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2177:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_rfft_q15(
2178:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_rfft_instance_q15 * S,
2179:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
2180:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst);
2181:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2182:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2183:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 RFFT/RIFFT function.
2184:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2185:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2186:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2187:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t fftLenReal;                        /**< length of the real FFT. */
2188:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) or inv
2189:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or disab
2190:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t twidCoefRModifier;                 /**< twiddle coefficient modifier that supports dif
2191:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pTwiddleAReal;                       /**< points to the real twiddle factor table. */
2192:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pTwiddleBReal;                       /**< points to the imag twiddle factor table. */
2193:..\CMSIS_DSP_LIB\Include/arm_math.h ****     const arm_cfft_instance_q31 *pCfft;         /**< points to the complex FFT instance. */
2194:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_rfft_instance_q31;
2195:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2196:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_rfft_init_q31(
2197:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_rfft_instance_q31 * S,
2198:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t fftLenReal,
2199:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t ifftFlagR,
2200:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t bitReverseFlag);
2201:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 62


2202:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_rfft_q31(
2203:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_rfft_instance_q31 * S,
2204:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
2205:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst);
2206:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2207:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2208:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point RFFT/RIFFT function.
2209:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2210:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2211:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2212:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t fftLenReal;                        /**< length of the real FFT. */
2213:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLenBy2;                         /**< length of the complex FFT. */
2214:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) or inv
2215:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or disab
2216:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t twidCoefRModifier;                     /**< twiddle coefficient modifier that supports
2217:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pTwiddleAReal;                   /**< points to the real twiddle factor table. */
2218:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pTwiddleBReal;                   /**< points to the imag twiddle factor table. */
2219:..\CMSIS_DSP_LIB\Include/arm_math.h ****     arm_cfft_radix4_instance_f32 *pCfft;        /**< points to the complex FFT instance. */
2220:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_rfft_instance_f32;
2221:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2222:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_rfft_init_f32(
2223:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_rfft_instance_f32 * S,
2224:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_cfft_radix4_instance_f32 * S_CFFT,
2225:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t fftLenReal,
2226:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t ifftFlagR,
2227:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t bitReverseFlag);
2228:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2229:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_rfft_f32(
2230:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_rfft_instance_f32 * S,
2231:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
2232:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst);
2233:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2234:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2235:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point RFFT/RIFFT function.
2236:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2237:..\CMSIS_DSP_LIB\Include/arm_math.h **** typedef struct
2238:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2239:..\CMSIS_DSP_LIB\Include/arm_math.h ****     arm_cfft_instance_f32 Sint;      /**< Internal CFFT structure. */
2240:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLenRFFT;             /**< length of the real sequence */
2241:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t * pTwiddleRFFT;        /**< Twiddle factors real stage  */
2242:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_rfft_fast_instance_f32 ;
2243:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2244:..\CMSIS_DSP_LIB\Include/arm_math.h **** arm_status arm_rfft_fast_init_f32 (
2245:..\CMSIS_DSP_LIB\Include/arm_math.h ****    arm_rfft_fast_instance_f32 * S,
2246:..\CMSIS_DSP_LIB\Include/arm_math.h ****    uint16_t fftLen);
2247:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2248:..\CMSIS_DSP_LIB\Include/arm_math.h **** void arm_rfft_fast_f32(
2249:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_rfft_fast_instance_f32 * S,
2250:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * p, float32_t * pOut,
2251:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t ifftFlag);
2252:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2253:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2254:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point DCT4/IDCT4 function.
2255:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2256:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2257:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2258:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 63


2259:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2260:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t normalize;                 /**< normalizing factor. */
2261:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pTwiddle;                 /**< points to the twiddle factor table. */
2262:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCosFactor;               /**< points to the cosFactor table. */
2263:..\CMSIS_DSP_LIB\Include/arm_math.h ****     arm_rfft_instance_f32 *pRfft;        /**< points to the real FFT instance. */
2264:..\CMSIS_DSP_LIB\Include/arm_math.h ****     arm_cfft_radix4_instance_f32 *pCfft; /**< points to the complex FFT instance. */
2265:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_dct4_instance_f32;
2266:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2267:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2268:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2269:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the floating-point DCT4/IDCT4.
2270:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of floating-point DCT4/IDCT4 structure.
2271:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of floating-point RFFT/RIFFT structure.
2272:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of floating-point CFFT/CIFFT structure.
2273:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     N          length of the DCT4.
2274:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2275:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2276:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2277:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2278:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_dct4_init_f32(
2279:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_dct4_instance_f32 * S,
2280:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_rfft_instance_f32 * S_RFFT,
2281:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_cfft_radix4_instance_f32 * S_CFFT,
2282:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t N,
2283:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t Nby2,
2284:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t normalize);
2285:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2286:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2287:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2288:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point DCT4/IDCT4.
2289:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     S              points to an instance of the floating-point DCT4/IDCT4 structure
2290:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState         points to state buffer.
2291:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2292:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2293:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_dct4_f32(
2294:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_dct4_instance_f32 * S,
2295:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState,
2296:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pInlineBuffer);
2297:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2298:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2299:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2300:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 DCT4/IDCT4 function.
2301:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2302:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2303:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2304:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2305:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2306:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t normalize;                     /**< normalizing factor. */
2307:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pTwiddle;                     /**< points to the twiddle factor table. */
2308:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pCosFactor;                   /**< points to the cosFactor table. */
2309:..\CMSIS_DSP_LIB\Include/arm_math.h ****     arm_rfft_instance_q31 *pRfft;        /**< points to the real FFT instance. */
2310:..\CMSIS_DSP_LIB\Include/arm_math.h ****     arm_cfft_radix4_instance_q31 *pCfft; /**< points to the complex FFT instance. */
2311:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_dct4_instance_q31;
2312:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2313:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2314:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2315:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q31 DCT4/IDCT4.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 64


2316:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of Q31 DCT4/IDCT4 structure.
2317:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of Q31 RFFT/RIFFT structure
2318:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of Q31 CFFT/CIFFT structure
2319:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     N          length of the DCT4.
2320:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2321:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2322:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2323:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2324:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_dct4_init_q31(
2325:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_dct4_instance_q31 * S,
2326:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_rfft_instance_q31 * S_RFFT,
2327:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_cfft_radix4_instance_q31 * S_CFFT,
2328:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t N,
2329:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t Nby2,
2330:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t normalize);
2331:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2332:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2333:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2334:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q31 DCT4/IDCT4.
2335:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     S              points to an instance of the Q31 DCT4 structure.
2336:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState         points to state buffer.
2337:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2338:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2339:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_dct4_q31(
2340:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_dct4_instance_q31 * S,
2341:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pState,
2342:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pInlineBuffer);
2343:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2344:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2345:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2346:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 DCT4/IDCT4 function.
2347:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2348:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2349:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2350:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2351:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2352:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t normalize;                     /**< normalizing factor. */
2353:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pTwiddle;                     /**< points to the twiddle factor table. */
2354:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pCosFactor;                   /**< points to the cosFactor table. */
2355:..\CMSIS_DSP_LIB\Include/arm_math.h ****     arm_rfft_instance_q15 *pRfft;        /**< points to the real FFT instance. */
2356:..\CMSIS_DSP_LIB\Include/arm_math.h ****     arm_cfft_radix4_instance_q15 *pCfft; /**< points to the complex FFT instance. */
2357:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_dct4_instance_q15;
2358:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2359:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2360:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2361:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q15 DCT4/IDCT4.
2362:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of Q15 DCT4/IDCT4 structure.
2363:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of Q15 RFFT/RIFFT structure.
2364:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of Q15 CFFT/CIFFT structure.
2365:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     N          length of the DCT4.
2366:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2367:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2368:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2369:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2370:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_dct4_init_q15(
2371:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_dct4_instance_q15 * S,
2372:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_rfft_instance_q15 * S_RFFT,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 65


2373:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_cfft_radix4_instance_q15 * S_CFFT,
2374:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t N,
2375:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t Nby2,
2376:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t normalize);
2377:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2378:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2379:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2380:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q15 DCT4/IDCT4.
2381:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     S              points to an instance of the Q15 DCT4 structure.
2382:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState         points to state buffer.
2383:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2384:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2385:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_dct4_q15(
2386:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_dct4_instance_q15 * S,
2387:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState,
2388:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pInlineBuffer);
2389:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2390:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2391:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2392:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point vector addition.
2393:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2394:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2395:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2396:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2397:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2398:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_add_f32(
2399:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcA,
2400:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcB,
2401:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
2402:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2403:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2404:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2405:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2406:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q7 vector addition.
2407:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2408:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2409:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2410:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2411:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2412:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_add_q7(
2413:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcA,
2414:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcB,
2415:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
2416:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2417:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2418:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2419:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2420:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15 vector addition.
2421:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2422:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2423:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2424:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2425:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2426:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_add_q15(
2427:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
2428:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
2429:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 66


2430:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2431:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2432:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2433:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2434:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31 vector addition.
2435:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2436:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2437:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2438:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2439:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2440:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_add_q31(
2441:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcA,
2442:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcB,
2443:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
2444:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2445:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2446:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2447:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2448:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point vector subtraction.
2449:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2450:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2451:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2452:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2453:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2454:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_sub_f32(
2455:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcA,
2456:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcB,
2457:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
2458:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2459:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2460:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2461:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2462:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q7 vector subtraction.
2463:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2464:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2465:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2466:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2467:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2468:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_sub_q7(
2469:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcA,
2470:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcB,
2471:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
2472:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2473:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2474:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2475:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2476:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15 vector subtraction.
2477:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2478:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2479:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2480:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2481:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2482:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_sub_q15(
2483:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
2484:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
2485:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
2486:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 67


2487:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2488:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2489:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2490:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31 vector subtraction.
2491:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2492:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2493:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2494:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2495:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2496:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_sub_q31(
2497:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcA,
2498:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcB,
2499:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
2500:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2501:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2502:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2503:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2504:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Multiplies a floating-point vector by a scalar.
2505:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2506:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  scale      scale factor to be applied
2507:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2508:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2509:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2510:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_scale_f32(
2511:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
2512:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t scale,
2513:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
2514:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2515:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2516:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2517:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2518:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Multiplies a Q7 vector by a scalar.
2519:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2520:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2521:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2522:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the output vector
2523:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2524:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2525:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_scale_q7(
2526:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
2527:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t scaleFract,
2528:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int8_t shift,
2529:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
2530:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2531:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2532:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2533:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2534:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Multiplies a Q15 vector by a scalar.
2535:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2536:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2537:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2538:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the output vector
2539:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2540:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2541:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_scale_q15(
2542:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
2543:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t scaleFract,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 68


2544:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int8_t shift,
2545:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
2546:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2547:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2548:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2549:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2550:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Multiplies a Q31 vector by a scalar.
2551:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2552:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2553:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2554:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the output vector
2555:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2556:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2557:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_scale_q31(
2558:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
2559:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t scaleFract,
2560:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int8_t shift,
2561:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
2562:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2563:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2564:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2565:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2566:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q7 vector absolute value.
2567:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2568:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2569:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2570:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2571:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_abs_q7(
2572:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
2573:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
2574:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2575:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2576:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2577:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2578:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point vector absolute value.
2579:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2580:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2581:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2582:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2583:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_abs_f32(
2584:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
2585:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
2586:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2587:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2588:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2589:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2590:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15 vector absolute value.
2591:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2592:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2593:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2594:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2595:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_abs_q15(
2596:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
2597:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
2598:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2599:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2600:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 69


2601:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2602:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31 vector absolute value.
2603:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2604:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2605:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2606:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2607:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_abs_q31(
2608:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
2609:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
2610:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2611:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2612:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2613:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2614:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Dot product of floating-point vectors.
2615:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2616:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2617:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2618:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] result     output result returned here
2619:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2620:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_dot_prod_f32(
2621:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcA,
2622:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcB,
2623:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize,
2624:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * result);
2625:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2626:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2627:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2628:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Dot product of Q7 vectors.
2629:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2630:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2631:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2632:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] result     output result returned here
2633:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2634:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_dot_prod_q7(
2635:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcA,
2636:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcB,
2637:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize,
2638:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * result);
2639:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2640:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2641:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2642:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Dot product of Q15 vectors.
2643:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2644:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2645:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2646:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] result     output result returned here
2647:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2648:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_dot_prod_q15(
2649:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
2650:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
2651:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize,
2652:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q63_t * result);
2653:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2654:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2655:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2656:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Dot product of Q31 vectors.
2657:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 70


2658:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2659:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2660:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] result     output result returned here
2661:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2662:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_dot_prod_q31(
2663:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcA,
2664:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcB,
2665:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize,
2666:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q63_t * result);
2667:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2668:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2669:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2670:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Shifts the elements of a Q7 vector a specified number of bits.
2671:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2672:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2673:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2674:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2675:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2676:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_shift_q7(
2677:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
2678:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int8_t shiftBits,
2679:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
2680:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2681:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2682:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2683:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2684:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Shifts the elements of a Q15 vector a specified number of bits.
2685:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2686:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2687:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2688:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2689:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2690:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_shift_q15(
2691:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
2692:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int8_t shiftBits,
2693:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
2694:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2695:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2696:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2697:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2698:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Shifts the elements of a Q31 vector a specified number of bits.
2699:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2700:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2701:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2702:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2703:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2704:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_shift_q31(
2705:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
2706:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int8_t shiftBits,
2707:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
2708:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2709:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2710:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2711:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2712:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Adds a constant offset to a floating-point vector.
2713:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2714:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 71


2715:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2716:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2717:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2718:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_offset_f32(
2719:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
2720:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t offset,
2721:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
2722:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2723:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2724:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2725:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2726:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Adds a constant offset to a Q7 vector.
2727:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2728:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2729:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2730:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2731:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2732:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_offset_q7(
2733:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
2734:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t offset,
2735:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
2736:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2737:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2738:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2739:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2740:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Adds a constant offset to a Q15 vector.
2741:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2742:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2743:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2744:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2745:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2746:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_offset_q15(
2747:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
2748:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t offset,
2749:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
2750:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2751:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2752:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2753:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2754:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Adds a constant offset to a Q31 vector.
2755:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2756:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2757:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2758:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2759:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2760:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_offset_q31(
2761:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
2762:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t offset,
2763:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
2764:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2765:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2766:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2767:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2768:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Negates the elements of a floating-point vector.
2769:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2770:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2771:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 72


2772:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2773:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_negate_f32(
2774:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
2775:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
2776:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2777:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2778:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2779:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2780:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Negates the elements of a Q7 vector.
2781:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2782:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2783:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2784:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2785:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_negate_q7(
2786:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
2787:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
2788:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2789:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2790:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2791:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2792:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Negates the elements of a Q15 vector.
2793:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2794:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2795:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2796:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2797:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_negate_q15(
2798:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
2799:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
2800:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2801:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2802:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2803:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2804:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Negates the elements of a Q31 vector.
2805:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2806:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2807:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2808:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2809:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_negate_q31(
2810:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
2811:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
2812:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2813:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2814:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2815:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2816:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Copies the elements of a floating-point vector.
2817:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2818:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       output pointer
2819:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2820:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2821:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_copy_f32(
2822:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
2823:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
2824:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2825:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2826:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2827:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2828:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Copies the elements of a Q7 vector.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 73


2829:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2830:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       output pointer
2831:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2832:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2833:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_copy_q7(
2834:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
2835:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
2836:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2837:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2838:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2839:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2840:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Copies the elements of a Q15 vector.
2841:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2842:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       output pointer
2843:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2844:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2845:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_copy_q15(
2846:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
2847:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
2848:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2849:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2850:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2851:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2852:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Copies the elements of a Q31 vector.
2853:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2854:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       output pointer
2855:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2856:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2857:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_copy_q31(
2858:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
2859:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
2860:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2861:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2862:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2863:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2864:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Fills a constant value into a floating-point vector.
2865:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  value      input value to be filled
2866:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       output pointer
2867:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2868:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2869:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fill_f32(
2870:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t value,
2871:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
2872:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2873:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2874:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2875:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2876:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Fills a constant value into a Q7 vector.
2877:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  value      input value to be filled
2878:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       output pointer
2879:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2880:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2881:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fill_q7(
2882:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t value,
2883:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
2884:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2885:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 74


2886:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2887:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2888:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Fills a constant value into a Q15 vector.
2889:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  value      input value to be filled
2890:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       output pointer
2891:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2892:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2893:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fill_q15(
2894:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t value,
2895:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
2896:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2897:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2898:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2899:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2900:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Fills a constant value into a Q31 vector.
2901:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  value      input value to be filled
2902:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       output pointer
2903:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2904:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2905:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fill_q31(
2906:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t value,
2907:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
2908:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2909:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2910:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2911:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
2912:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @brief Convolution of floating-point sequences.
2913:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in]  pSrcA    points to the first input sequence.
2914:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in]  srcALen  length of the first input sequence.
2915:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in]  pSrcB    points to the second input sequence.
2916:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in]  srcBLen  length of the second input sequence.
2917:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[out] pDst     points to the location where the output result is written.  Length srcALen+
2918:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
2919:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_conv_f32(
2920:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcA,
2921:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
2922:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcB,
2923:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
2924:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst);
2925:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2926:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2927:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2928:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Convolution of Q15 sequences.
2929:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
2930:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
2931:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
2932:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
2933:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
2934:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen,
2935:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
2936:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2937:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_conv_opt_q15(
2938:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
2939:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
2940:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
2941:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
2942:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 75


2943:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch1,
2944:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch2);
2945:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2946:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2947:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
2948:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @brief Convolution of Q15 sequences.
2949:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in]  pSrcA    points to the first input sequence.
2950:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in]  srcALen  length of the first input sequence.
2951:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in]  pSrcB    points to the second input sequence.
2952:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in]  srcBLen  length of the second input sequence.
2953:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[out] pDst     points to the location where the output result is written.  Length srcALen+
2954:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
2955:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_conv_q15(
2956:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
2957:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
2958:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
2959:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
2960:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst);
2961:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2962:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2963:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2964:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
2965:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
2966:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
2967:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
2968:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
2969:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
2970:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2971:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_conv_fast_q15(
2972:..\CMSIS_DSP_LIB\Include/arm_math.h ****           q15_t * pSrcA,
2973:..\CMSIS_DSP_LIB\Include/arm_math.h ****           uint32_t srcALen,
2974:..\CMSIS_DSP_LIB\Include/arm_math.h ****           q15_t * pSrcB,
2975:..\CMSIS_DSP_LIB\Include/arm_math.h ****           uint32_t srcBLen,
2976:..\CMSIS_DSP_LIB\Include/arm_math.h ****           q15_t * pDst);
2977:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2978:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2979:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2980:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
2981:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
2982:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
2983:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
2984:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
2985:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
2986:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen,
2987:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
2988:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2989:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_conv_fast_opt_q15(
2990:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
2991:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
2992:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
2993:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
2994:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
2995:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch1,
2996:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch2);
2997:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2998:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2999:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 76


3000:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Convolution of Q31 sequences.
3001:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3002:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3003:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3004:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3005:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3006:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3007:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_conv_q31(
3008:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcA,
3009:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3010:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcB,
3011:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3012:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst);
3013:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3014:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3015:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3016:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
3017:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3018:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3019:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3020:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3021:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3022:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3023:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_conv_fast_q31(
3024:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcA,
3025:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3026:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcB,
3027:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3028:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst);
3029:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3030:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3031:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /**
3032:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Convolution of Q7 sequences.
3033:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
3034:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
3035:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
3036:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
3037:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
3038:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
3039:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
3040:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3041:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_conv_opt_q7(
3042:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcA,
3043:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3044:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcB,
3045:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3046:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
3047:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch1,
3048:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch2);
3049:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3050:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3051:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3052:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Convolution of Q7 sequences.
3053:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3054:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3055:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3056:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 77


3057:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3058:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3059:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_conv_q7(
3060:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcA,
3061:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3062:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcB,
3063:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3064:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst);
3065:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3066:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3067:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3068:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Partial convolution of floating-point sequences.
3069:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3070:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3071:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3072:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3073:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3074:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3075:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3076:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3077:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3078:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_conv_partial_f32(
3079:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcA,
3080:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3081:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcB,
3082:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3083:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
3084:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t firstIndex,
3085:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numPoints);
3086:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3087:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3088:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3089:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences.
3090:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3091:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3092:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3093:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3094:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3095:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3096:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3097:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen
3098:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
3099:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3100:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3101:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_conv_partial_opt_q15(
3102:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
3103:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3104:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
3105:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3106:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
3107:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t firstIndex,
3108:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numPoints,
3109:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch1,
3110:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch2);
3111:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3112:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3113:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 78


3114:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences.
3115:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3116:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3117:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3118:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3119:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3120:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3121:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3122:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3123:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3124:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_conv_partial_q15(
3125:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
3126:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3127:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
3128:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3129:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
3130:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t firstIndex,
3131:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numPoints);
3132:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3133:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3134:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3135:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3136:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3137:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3138:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3139:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3140:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3141:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3142:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3143:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3144:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3145:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_conv_partial_fast_q15(
3146:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
3147:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3148:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
3149:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3150:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
3151:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t firstIndex,
3152:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numPoints);
3153:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3154:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3155:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3156:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3157:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3158:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3159:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3160:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3161:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3162:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3163:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3164:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen
3165:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
3166:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3167:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3168:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_conv_partial_fast_opt_q15(
3169:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
3170:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 79


3171:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
3172:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3173:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
3174:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t firstIndex,
3175:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numPoints,
3176:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch1,
3177:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch2);
3178:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3179:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3180:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3181:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Partial convolution of Q31 sequences.
3182:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3183:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3184:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3185:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3186:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3187:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3188:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3189:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3190:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3191:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_conv_partial_q31(
3192:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcA,
3193:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3194:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcB,
3195:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3196:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
3197:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t firstIndex,
3198:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numPoints);
3199:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3200:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3201:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3202:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Partial convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
3203:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3204:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3205:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3206:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3207:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3208:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3209:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3210:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3211:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3212:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_conv_partial_fast_q31(
3213:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcA,
3214:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3215:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcB,
3216:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3217:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
3218:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t firstIndex,
3219:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numPoints);
3220:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3221:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3222:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3223:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Partial convolution of Q7 sequences
3224:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3225:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3226:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3227:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 80


3228:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3229:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3230:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3231:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) 
3232:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen)
3233:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3234:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3235:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_conv_partial_opt_q7(
3236:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcA,
3237:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3238:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcB,
3239:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3240:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
3241:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t firstIndex,
3242:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numPoints,
3243:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch1,
3244:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch2);
3245:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3246:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3247:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
3248:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Partial convolution of Q7 sequences.
3249:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3250:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3251:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3252:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3253:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3254:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3255:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3256:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3257:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3258:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_conv_partial_q7(
3259:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcA,
3260:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3261:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcB,
3262:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3263:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
3264:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t firstIndex,
3265:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numPoints);
3266:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3267:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3268:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3269:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR decimator.
3270:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3271:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3272:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3273:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3274:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3275:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pCoeffs;             /**< points to the coefficient array. The array is of length numTap
3276:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pState;              /**< points to the state variable array. The array is of length num
3277:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_decimate_instance_q15;
3278:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3279:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3280:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR decimator.
3281:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3282:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3283:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3284:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t M;                  /**< decimation factor. */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 81


3285:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3286:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pCoeffs;             /**< points to the coefficient array. The array is of length numTap
3287:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pState;              /**< points to the state variable array. The array is of length num
3288:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_decimate_instance_q31;
3289:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3290:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3291:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR decimator.
3292:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3293:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3294:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3295:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3296:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3297:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCoeffs;         /**< points to the coefficient array. The array is of length numTap
3298:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;          /**< points to the state variable array. The array is of length num
3299:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_decimate_instance_f32;
3300:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3301:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3302:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3303:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point FIR decimator.
3304:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR decimator structure.
3305:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3306:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3307:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3308:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3309:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_decimate_f32(
3310:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_decimate_instance_f32 * S,
3311:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
3312:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
3313:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3314:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3315:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3316:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3317:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the floating-point FIR decimator.
3318:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR decimator structure.
3319:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3320:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     M          decimation factor.
3321:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3322:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3323:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3324:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3325:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3326:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3327:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_fir_decimate_init_f32(
3328:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_decimate_instance_f32 * S,
3329:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
3330:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t M,
3331:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCoeffs,
3332:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState,
3333:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3334:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3335:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3336:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3337:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q15 FIR decimator.
3338:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
3339:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3340:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3341:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 82


3342:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3343:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_decimate_q15(
3344:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_decimate_instance_q15 * S,
3345:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
3346:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
3347:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3348:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3349:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3350:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3351:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q15 FIR decimator (fast variant) for Cortex-M3 and Cortex-M
3352:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
3353:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3354:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3355:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3356:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3357:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_decimate_fast_q15(
3358:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_decimate_instance_q15 * S,
3359:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
3360:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
3361:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3362:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3363:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3364:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3365:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q15 FIR decimator.
3366:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR decimator structure.
3367:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3368:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     M          decimation factor.
3369:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3370:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3371:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3372:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3373:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3374:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3375:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_fir_decimate_init_q15(
3376:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_decimate_instance_q15 * S,
3377:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
3378:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t M,
3379:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pCoeffs,
3380:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState,
3381:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3382:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3383:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3384:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3385:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q31 FIR decimator.
3386:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S     points to an instance of the Q31 FIR decimator structure.
3387:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc  points to the block of input data.
3388:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst  points to the block of output data
3389:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] blockSize number of input samples to process per call.
3390:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3391:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_decimate_q31(
3392:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_decimate_instance_q31 * S,
3393:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
3394:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
3395:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3396:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3397:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3398:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q31 FIR decimator (fast variant) for Cortex-M3 and Cortex-M
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 83


3399:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR decimator structure.
3400:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3401:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3402:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3403:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3404:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_decimate_fast_q31(
3405:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_decimate_instance_q31 * S,
3406:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
3407:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
3408:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3409:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3410:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3411:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3412:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q31 FIR decimator.
3413:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR decimator structure.
3414:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3415:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     M          decimation factor.
3416:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3417:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3418:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3419:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3420:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3421:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3422:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_fir_decimate_init_q31(
3423:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_decimate_instance_q31 * S,
3424:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
3425:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t M,
3426:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pCoeffs,
3427:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pState,
3428:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3429:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3430:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3431:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3432:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR interpolator.
3433:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3434:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3435:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3436:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t L;                      /**< upsample factor. */
3437:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t phaseLength;           /**< length of each polyphase filter component. */
3438:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pCoeffs;                 /**< points to the coefficient array. The array is of length L*
3439:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pState;                  /**< points to the state variable array. The array is of length
3440:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_interpolate_instance_q15;
3441:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3442:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3443:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR interpolator.
3444:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3445:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3446:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3447:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t L;                      /**< upsample factor. */
3448:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t phaseLength;           /**< length of each polyphase filter component. */
3449:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pCoeffs;                 /**< points to the coefficient array. The array is of length L*
3450:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pState;                  /**< points to the state variable array. The array is of length
3451:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_interpolate_instance_q31;
3452:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3453:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3454:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR interpolator.
3455:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 84


3456:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3457:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3458:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t L;                     /**< upsample factor. */
3459:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t phaseLength;          /**< length of each polyphase filter component. */
3460:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCoeffs;            /**< points to the coefficient array. The array is of length L*p
3461:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;             /**< points to the state variable array. The array is of length 
3462:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_interpolate_instance_f32;
3463:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3464:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3465:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3466:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q15 FIR interpolator.
3467:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
3468:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3469:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3470:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3471:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3472:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_interpolate_q15(
3473:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_interpolate_instance_q15 * S,
3474:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
3475:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
3476:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3477:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3478:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3479:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3480:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q15 FIR interpolator.
3481:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR interpolator structure.
3482:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     L          upsample factor.
3483:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3484:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3485:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3486:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3487:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3488:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3489:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3490:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_fir_interpolate_init_q15(
3491:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_interpolate_instance_q15 * S,
3492:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t L,
3493:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
3494:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pCoeffs,
3495:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState,
3496:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3497:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3498:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3499:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3500:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q31 FIR interpolator.
3501:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
3502:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3503:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3504:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3505:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3506:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_interpolate_q31(
3507:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_interpolate_instance_q31 * S,
3508:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
3509:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
3510:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3511:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3512:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 85


3513:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3514:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q31 FIR interpolator.
3515:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR interpolator structure.
3516:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     L          upsample factor.
3517:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3518:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3519:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3520:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3521:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3522:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3523:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3524:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_fir_interpolate_init_q31(
3525:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_interpolate_instance_q31 * S,
3526:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t L,
3527:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
3528:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pCoeffs,
3529:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pState,
3530:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3531:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3532:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3533:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3534:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point FIR interpolator.
3535:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR interpolator structure.
3536:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3537:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3538:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3539:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3540:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_interpolate_f32(
3541:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_interpolate_instance_f32 * S,
3542:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
3543:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
3544:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3545:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3546:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3547:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3548:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the floating-point FIR interpolator.
3549:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR interpolator structu
3550:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     L          upsample factor.
3551:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3552:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3553:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3554:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3555:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3556:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3557:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3558:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_fir_interpolate_init_f32(
3559:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_interpolate_instance_f32 * S,
3560:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t L,
3561:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
3562:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCoeffs,
3563:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState,
3564:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3565:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3566:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3567:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3568:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the high precision Q31 Biquad cascade filter.
3569:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 86


3570:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3571:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3572:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t numStages;       /**< number of 2nd order stages in the filter.  Overall order is 2*num
3573:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q63_t *pState;           /**< points to the array of state coefficients.  The array is of lengt
3574:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pCoeffs;          /**< points to the array of coefficients.  The array is of length 5*nu
3575:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t postShift;       /**< additional shift, in bits, applied to each output sample. */
3576:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_biquad_cas_df1_32x64_ins_q31;
3577:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3578:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3579:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3580:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the high precision Q31 Biquad cascade filter s
3581:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3582:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3583:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3584:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3585:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cas_df1_32x64_q31(
3586:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_biquad_cas_df1_32x64_ins_q31 * S,
3587:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
3588:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
3589:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3590:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3591:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3592:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3593:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the high precision Q31 Biquad cascade filte
3594:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3595:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3596:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3597:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     postShift  shift to be applied to the output. Varies according to the coefficie
3598:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3599:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cas_df1_32x64_init_q31(
3600:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_biquad_cas_df1_32x64_ins_q31 * S,
3601:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t numStages,
3602:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pCoeffs,
3603:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q63_t * pState,
3604:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t postShift);
3605:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3606:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3607:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3608:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3609:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3610:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3611:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3612:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3613:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;         /**< points to the array of state coefficients.  The array is of len
3614:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3615:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_biquad_cascade_df2T_instance_f32;
3616:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3617:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3618:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3619:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3620:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3621:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3622:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3623:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;         /**< points to the array of state coefficients.  The array is of len
3624:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3625:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_biquad_cascade_stereo_df2T_instance_f32;
3626:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 87


3627:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3628:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3629:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3630:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3631:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3632:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3633:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float64_t *pState;         /**< points to the array of state coefficients.  The array is of len
3634:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float64_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3635:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_biquad_cascade_df2T_instance_f64;
3636:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3637:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3638:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3639:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3640:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3641:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3642:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3643:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3644:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3645:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df2T_f32(
3646:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_biquad_cascade_df2T_instance_f32 * S,
3647:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
3648:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
3649:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3650:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3651:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3652:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3653:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3654:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3655:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3656:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3657:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3658:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3659:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_stereo_df2T_f32(
3660:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_biquad_cascade_stereo_df2T_instance_f32 * S,
3661:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
3662:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
3663:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3664:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3665:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3666:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3667:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3668:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3669:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3670:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3671:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3672:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3673:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df2T_f64(
3674:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_biquad_cascade_df2T_instance_f64 * S,
3675:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float64_t * pSrc,
3676:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float64_t * pDst,
3677:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3678:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3679:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3680:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3681:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3682:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3683:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 88


3684:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3685:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3686:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3687:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df2T_init_f32(
3688:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_biquad_cascade_df2T_instance_f32 * S,
3689:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t numStages,
3690:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCoeffs,
3691:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState);
3692:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3693:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3694:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3695:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3696:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3697:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3698:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3699:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3700:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3701:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_stereo_df2T_init_f32(
3702:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_biquad_cascade_stereo_df2T_instance_f32 * S,
3703:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t numStages,
3704:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCoeffs,
3705:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState);
3706:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3707:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3708:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3709:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3710:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3711:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3712:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3713:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3714:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3715:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df2T_init_f64(
3716:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_biquad_cascade_df2T_instance_f64 * S,
3717:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t numStages,
3718:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float64_t * pCoeffs,
3719:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float64_t * pState);
3720:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3721:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3722:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3723:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR lattice filter.
3724:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3725:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3726:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3727:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3728:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pState;                       /**< points to the state variable array. The array is of l
3729:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pCoeffs;                      /**< points to the coefficient array. The array is of leng
3730:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_lattice_instance_q15;
3731:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3732:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3733:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR lattice filter.
3734:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3735:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3736:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3737:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3738:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pState;                       /**< points to the state variable array. The array is of l
3739:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pCoeffs;                      /**< points to the coefficient array. The array is of leng
3740:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_lattice_instance_q31;
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 89


3741:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3742:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3743:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR lattice filter.
3744:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3745:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3746:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3747:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3748:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;                   /**< points to the state variable array. The array is of l
3749:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCoeffs;                  /**< points to the coefficient array. The array is of leng
3750:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_lattice_instance_f32;
3751:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3752:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3753:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3754:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Initialization function for the Q15 FIR lattice filter.
3755:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] S          points to an instance of the Q15 FIR lattice structure.
3756:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] numStages  number of filter stages.
3757:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3758:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages.
3759:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3760:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_lattice_init_q15(
3761:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_lattice_instance_q15 * S,
3762:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numStages,
3763:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pCoeffs,
3764:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState);
3765:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3766:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3767:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3768:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q15 FIR lattice filter.
3769:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR lattice structure.
3770:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3771:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3772:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3773:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3774:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_lattice_q15(
3775:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_lattice_instance_q15 * S,
3776:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
3777:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
3778:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3779:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3780:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3781:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3782:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Initialization function for the Q31 FIR lattice filter.
3783:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 FIR lattice structure.
3784:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] numStages  number of filter stages.
3785:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3786:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pState     points to the state buffer.   The array is of length numStages.
3787:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3788:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_lattice_init_q31(
3789:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_lattice_instance_q31 * S,
3790:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numStages,
3791:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pCoeffs,
3792:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pState);
3793:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3794:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3795:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3796:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q31 FIR lattice filter.
3797:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR lattice structure.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 90


3798:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3799:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3800:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3801:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3802:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_lattice_q31(
3803:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_lattice_instance_q31 * S,
3804:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
3805:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
3806:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3807:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3808:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3809:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
3810:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @brief Initialization function for the floating-point FIR lattice filter.
3811:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in] S          points to an instance of the floating-point FIR lattice structure.
3812:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in] numStages  number of filter stages.
3813:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3814:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in] pState     points to the state buffer.  The array is of length numStages.
3815:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
3816:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_lattice_init_f32(
3817:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_lattice_instance_f32 * S,
3818:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numStages,
3819:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCoeffs,
3820:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState);
3821:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3822:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3823:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3824:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point FIR lattice filter.
3825:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR lattice structure.
3826:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3827:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3828:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3829:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3830:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_lattice_f32(
3831:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_lattice_instance_f32 * S,
3832:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
3833:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
3834:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3835:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3836:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3837:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3838:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 IIR lattice filter.
3839:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3840:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3841:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3842:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3843:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pState;                       /**< points to the state variable array. The array is of l
3844:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pkCoeffs;                     /**< points to the reflection coefficient array. The array
3845:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pvCoeffs;                     /**< points to the ladder coefficient array. The array is 
3846:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_iir_lattice_instance_q15;
3847:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3848:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3849:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 IIR lattice filter.
3850:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3851:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3852:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3853:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3854:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pState;                       /**< points to the state variable array. The array is of l
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 91


3855:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pkCoeffs;                     /**< points to the reflection coefficient array. The array
3856:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pvCoeffs;                     /**< points to the ladder coefficient array. The array is 
3857:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_iir_lattice_instance_q31;
3858:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3859:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3860:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point IIR lattice filter.
3861:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3862:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3863:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3864:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3865:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;                   /**< points to the state variable array. The array is of l
3866:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pkCoeffs;                 /**< points to the reflection coefficient array. The array
3867:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pvCoeffs;                 /**< points to the ladder coefficient array. The array is 
3868:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_iir_lattice_instance_f32;
3869:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3870:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3871:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3872:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point IIR lattice filter.
3873:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point IIR lattice structure.
3874:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3875:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3876:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3877:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3878:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_iir_lattice_f32(
3879:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_iir_lattice_instance_f32 * S,
3880:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
3881:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
3882:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3883:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3884:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3885:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3886:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Initialization function for the floating-point IIR lattice filter.
3887:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] S          points to an instance of the floating-point IIR lattice structure.
3888:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] numStages  number of stages in the filter.
3889:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length num
3890:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStag
3891:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize-
3892:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
3893:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3894:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_iir_lattice_init_f32(
3895:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_iir_lattice_instance_f32 * S,
3896:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numStages,
3897:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pkCoeffs,
3898:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pvCoeffs,
3899:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState,
3900:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3901:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3902:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3903:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3904:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q31 IIR lattice filter.
3905:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 IIR lattice structure.
3906:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3907:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3908:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3909:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3910:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_iir_lattice_q31(
3911:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_iir_lattice_instance_q31 * S,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 92


3912:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
3913:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
3914:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3915:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3916:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3917:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3918:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Initialization function for the Q31 IIR lattice filter.
3919:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 IIR lattice structure.
3920:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] numStages  number of stages in the filter.
3921:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length num
3922:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStag
3923:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize.
3924:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
3925:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3926:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_iir_lattice_init_q31(
3927:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_iir_lattice_instance_q31 * S,
3928:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numStages,
3929:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pkCoeffs,
3930:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pvCoeffs,
3931:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pState,
3932:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3933:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3934:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3935:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3936:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q15 IIR lattice filter.
3937:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 IIR lattice structure.
3938:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3939:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3940:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3941:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3942:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_iir_lattice_q15(
3943:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_iir_lattice_instance_q15 * S,
3944:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
3945:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
3946:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3947:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3948:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3949:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
3950:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @brief Initialization function for the Q15 IIR lattice filter.
3951:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in] S          points to an instance of the fixed-point Q15 IIR lattice structure.
3952:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in] numStages  number of stages in the filter.
3953:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in] pkCoeffs   points to reflection coefficient buffer.  The array is of length numStages
3954:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in] pvCoeffs   points to ladder coefficient buffer.  The array is of length numStages+1.
3955:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in] pState     points to state buffer.  The array is of length numStages+blockSize.
3956:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in] blockSize  number of samples to process per call.
3957:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
3958:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_iir_lattice_init_q15(
3959:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_iir_lattice_instance_q15 * S,
3960:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numStages,
3961:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pkCoeffs,
3962:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pvCoeffs,
3963:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState,
3964:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3965:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3966:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3967:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3968:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point LMS filter.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 93


3969:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3970:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3971:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3972:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
3973:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;   /**< points to the state variable array. The array is of length numTaps+bl
3974:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCoeffs;  /**< points to the coefficient array. The array is of length numTaps. */
3975:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t mu;        /**< step size that controls filter coefficient updates. */
3976:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_lms_instance_f32;
3977:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3978:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3979:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3980:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for floating-point LMS filter.
3981:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point LMS filter structure.
3982:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3983:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
3984:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
3985:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
3986:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3987:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3988:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_f32(
3989:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_lms_instance_f32 * S,
3990:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
3991:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pRef,
3992:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pOut,
3993:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pErr,
3994:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3995:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3996:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3997:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3998:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Initialization function for floating-point LMS filter.
3999:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] S          points to an instance of the floating-point LMS filter structure.
4000:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4001:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.
4002:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4003:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4004:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4005:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4006:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_init_f32(
4007:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_lms_instance_f32 * S,
4008:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
4009:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCoeffs,
4010:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState,
4011:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t mu,
4012:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4013:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4014:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4015:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4016:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 LMS filter.
4017:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4018:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
4019:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4020:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
4021:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pState;       /**< points to the state variable array. The array is of length numTaps+bl
4022:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps. */
4023:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t mu;            /**< step size that controls filter coefficient updates. */
4024:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t postShift;  /**< bit shift applied to coefficients. */
4025:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_lms_instance_q15;
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 94


4026:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4027:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4028:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4029:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Initialization function for the Q15 LMS filter.
4030:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] S          points to an instance of the Q15 LMS filter structure.
4031:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4032:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.
4033:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pState     points to the state buffer.
4034:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4035:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4036:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4037:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4038:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_init_q15(
4039:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_lms_instance_q15 * S,
4040:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
4041:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pCoeffs,
4042:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState,
4043:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t mu,
4044:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize,
4045:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t postShift);
4046:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4047:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4048:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4049:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for Q15 LMS filter.
4050:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 LMS filter structure.
4051:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4052:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4053:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4054:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4055:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4056:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4057:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_q15(
4058:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_lms_instance_q15 * S,
4059:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
4060:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pRef,
4061:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pOut,
4062:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pErr,
4063:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4064:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4065:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4066:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4067:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 LMS filter.
4068:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4069:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
4070:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4071:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
4072:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pState;       /**< points to the state variable array. The array is of length numTaps+bl
4073:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps. */
4074:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t mu;            /**< step size that controls filter coefficient updates. */
4075:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t postShift;  /**< bit shift applied to coefficients. */
4076:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_lms_instance_q31;
4077:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4078:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4079:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4080:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for Q31 LMS filter.
4081:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 LMS filter structure.
4082:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 95


4083:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4084:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4085:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4086:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4087:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4088:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_q31(
4089:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_lms_instance_q31 * S,
4090:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
4091:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pRef,
4092:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pOut,
4093:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pErr,
4094:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4095:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4096:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4097:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4098:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Initialization function for Q31 LMS filter.
4099:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 LMS filter structure.
4100:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4101:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4102:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4103:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4104:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4105:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4106:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4107:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_init_q31(
4108:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_lms_instance_q31 * S,
4109:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
4110:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pCoeffs,
4111:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pState,
4112:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t mu,
4113:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize,
4114:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t postShift);
4115:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4116:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4117:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4118:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point normalized LMS filter.
4119:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4120:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
4121:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4122:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;     /**< number of coefficients in the filter. */
4123:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;    /**< points to the state variable array. The array is of length numTaps+b
4124:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTaps. */
4125:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t mu;         /**< step size that control filter coefficient updates. */
4126:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t energy;     /**< saves previous frame energy. */
4127:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t x0;         /**< saves previous input sample. */
4128:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_lms_norm_instance_f32;
4129:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4130:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4131:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4132:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for floating-point normalized LMS filter.
4133:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point normalized LMS filter struc
4134:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4135:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4136:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4137:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4138:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4139:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 96


4140:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_norm_f32(
4141:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_lms_norm_instance_f32 * S,
4142:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
4143:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pRef,
4144:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pOut,
4145:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pErr,
4146:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4147:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4148:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4149:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4150:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Initialization function for floating-point normalized LMS filter.
4151:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] S          points to an instance of the floating-point LMS filter structure.
4152:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4153:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4154:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4155:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4156:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4157:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4158:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_norm_init_f32(
4159:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_lms_norm_instance_f32 * S,
4160:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
4161:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCoeffs,
4162:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState,
4163:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t mu,
4164:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4165:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4166:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4167:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4168:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 normalized LMS filter.
4169:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4170:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
4171:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4172:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;     /**< number of coefficients in the filter. */
4173:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pState;        /**< points to the state variable array. The array is of length numTaps+b
4174:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTaps. */
4175:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t mu;             /**< step size that controls filter coefficient updates. */
4176:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t postShift;    /**< bit shift applied to coefficients. */
4177:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *recipTable;    /**< points to the reciprocal initial value table. */
4178:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t energy;         /**< saves previous frame energy. */
4179:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t x0;             /**< saves previous input sample. */
4180:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_lms_norm_instance_q31;
4181:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4182:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4183:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4184:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for Q31 normalized LMS filter.
4185:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 normalized LMS filter structure.
4186:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4187:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4188:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4189:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4190:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4191:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4192:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_norm_q31(
4193:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_lms_norm_instance_q31 * S,
4194:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
4195:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pRef,
4196:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pOut,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 97


4197:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pErr,
4198:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4199:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4200:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4201:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4202:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Initialization function for Q31 normalized LMS filter.
4203:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 normalized LMS filter structure.
4204:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4205:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4206:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4207:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4208:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4209:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4210:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4211:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_norm_init_q31(
4212:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_lms_norm_instance_q31 * S,
4213:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
4214:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pCoeffs,
4215:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pState,
4216:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t mu,
4217:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize,
4218:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t postShift);
4219:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4220:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4221:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4222:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 normalized LMS filter.
4223:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4224:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
4225:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4226:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;     /**< Number of coefficients in the filter. */
4227:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pState;        /**< points to the state variable array. The array is of length numTaps+b
4228:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTaps. */
4229:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t mu;             /**< step size that controls filter coefficient updates. */
4230:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t postShift;    /**< bit shift applied to coefficients. */
4231:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *recipTable;    /**< Points to the reciprocal initial value table. */
4232:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t energy;         /**< saves previous frame energy. */
4233:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t x0;             /**< saves previous input sample. */
4234:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_lms_norm_instance_q15;
4235:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4236:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4237:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4238:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for Q15 normalized LMS filter.
4239:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 normalized LMS filter structure.
4240:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4241:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4242:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4243:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4244:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4245:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4246:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_norm_q15(
4247:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_lms_norm_instance_q15 * S,
4248:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
4249:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pRef,
4250:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pOut,
4251:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pErr,
4252:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4253:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 98


4254:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4255:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4256:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Initialization function for Q15 normalized LMS filter.
4257:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] S          points to an instance of the Q15 normalized LMS filter structure.
4258:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4259:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4260:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4261:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4262:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4263:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4264:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4265:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_norm_init_q15(
4266:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_lms_norm_instance_q15 * S,
4267:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
4268:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pCoeffs,
4269:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState,
4270:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t mu,
4271:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize,
4272:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t postShift);
4273:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4274:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4275:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4276:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Correlation of floating-point sequences.
4277:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4278:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4279:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4280:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4281:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4282:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4283:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_correlate_f32(
4284:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcA,
4285:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
4286:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcB,
4287:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
4288:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst);
4289:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4290:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4291:..\CMSIS_DSP_LIB\Include/arm_math.h ****    /**
4292:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Correlation of Q15 sequences
4293:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA     points to the first input sequence.
4294:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen   length of the first input sequence.
4295:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB     points to the second input sequence.
4296:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen   length of the second input sequence.
4297:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1
4298:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, 
4299:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4300:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_correlate_opt_q15(
4301:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
4302:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
4303:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
4304:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
4305:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
4306:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch);
4307:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4308:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4309:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4310:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Correlation of Q15 sequences.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 99


4311:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4312:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4313:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4314:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4315:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4316:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4317:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4318:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_correlate_q15(
4319:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
4320:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
4321:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
4322:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
4323:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst);
4324:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4325:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4326:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4327:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
4328:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4329:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4330:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4331:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4332:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4333:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4334:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4335:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_correlate_fast_q15(
4336:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
4337:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
4338:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
4339:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
4340:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst);
4341:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4342:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4343:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4344:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
4345:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA     points to the first input sequence.
4346:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen   length of the first input sequence.
4347:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB     points to the second input sequence.
4348:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen   length of the second input sequence.
4349:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1
4350:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, 
4351:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4352:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_correlate_fast_opt_q15(
4353:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
4354:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
4355:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
4356:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
4357:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
4358:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch);
4359:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4360:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4361:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4362:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Correlation of Q31 sequences.
4363:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4364:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4365:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4366:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4367:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 100


4368:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4369:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_correlate_q31(
4370:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcA,
4371:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
4372:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcB,
4373:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
4374:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst);
4375:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4376:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4377:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4378:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Correlation of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
4379:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4380:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4381:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4382:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4383:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4384:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4385:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_correlate_fast_q31(
4386:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcA,
4387:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
4388:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcB,
4389:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
4390:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst);
4391:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4392:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4393:..\CMSIS_DSP_LIB\Include/arm_math.h ****  /**
4394:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Correlation of Q7 sequences.
4395:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
4396:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
4397:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
4398:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
4399:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length 2 * max(srcALen, srcBLen) - 
4400:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
4401:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
4402:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4403:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_correlate_opt_q7(
4404:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcA,
4405:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
4406:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcB,
4407:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
4408:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
4409:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch1,
4410:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch2);
4411:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4412:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4413:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4414:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Correlation of Q7 sequences.
4415:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4416:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4417:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4418:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4419:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4420:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4421:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_correlate_q7(
4422:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcA,
4423:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
4424:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcB,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 101


4425:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
4426:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst);
4427:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4428:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4429:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4430:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point sparse FIR filter.
4431:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4432:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
4433:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4434:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4435:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4436:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;            /**< points to the state buffer array. The array is of length max
4437:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCoeffs;           /**< points to the coefficient array. The array is of length numT
4438:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4439:..\CMSIS_DSP_LIB\Include/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4440:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_sparse_instance_f32;
4441:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4442:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4443:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 sparse FIR filter.
4444:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4445:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
4446:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4447:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4448:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4449:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pState;                /**< points to the state buffer array. The array is of length max
4450:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pCoeffs;               /**< points to the coefficient array. The array is of length numT
4451:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4452:..\CMSIS_DSP_LIB\Include/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4453:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_sparse_instance_q31;
4454:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4455:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4456:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 sparse FIR filter.
4457:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4458:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
4459:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4460:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4461:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4462:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pState;                /**< points to the state buffer array. The array is of length max
4463:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pCoeffs;               /**< points to the coefficient array. The array is of length numT
4464:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4465:..\CMSIS_DSP_LIB\Include/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4466:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_sparse_instance_q15;
4467:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4468:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4469:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q7 sparse FIR filter.
4470:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4471:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
4472:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4473:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4474:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4475:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q7_t *pState;                 /**< points to the state buffer array. The array is of length max
4476:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q7_t *pCoeffs;                /**< points to the coefficient array. The array is of length numT
4477:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4478:..\CMSIS_DSP_LIB\Include/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4479:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_sparse_instance_q7;
4480:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4481:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 102


4482:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4483:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point sparse FIR filter.
4484:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S           points to an instance of the floating-point sparse FIR structure.
4485:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the block of input data.
4486:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
4487:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
4488:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize   number of input samples to process per call.
4489:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4490:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_sparse_f32(
4491:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_sparse_instance_f32 * S,
4492:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
4493:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
4494:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pScratchIn,
4495:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4496:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4497:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4498:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4499:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the floating-point sparse FIR filter.
4500:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point sparse FIR structure.
4501:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4502:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4503:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4504:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4505:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4506:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4507:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4508:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_sparse_init_f32(
4509:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_sparse_instance_f32 * S,
4510:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
4511:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCoeffs,
4512:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState,
4513:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t * pTapDelay,
4514:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t maxDelay,
4515:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4516:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4517:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4518:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4519:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q31 sparse FIR filter.
4520:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S           points to an instance of the Q31 sparse FIR structure.
4521:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the block of input data.
4522:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
4523:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
4524:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize   number of input samples to process per call.
4525:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4526:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_sparse_q31(
4527:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_sparse_instance_q31 * S,
4528:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
4529:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
4530:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pScratchIn,
4531:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4532:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4533:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4534:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4535:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q31 sparse FIR filter.
4536:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 sparse FIR structure.
4537:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4538:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 103


4539:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4540:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4541:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4542:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4543:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4544:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_sparse_init_q31(
4545:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_sparse_instance_q31 * S,
4546:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
4547:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pCoeffs,
4548:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pState,
4549:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t * pTapDelay,
4550:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t maxDelay,
4551:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4552:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4553:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4554:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4555:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q15 sparse FIR filter.
4556:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S            points to an instance of the Q15 sparse FIR structure.
4557:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc         points to the block of input data.
4558:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst         points to the block of output data
4559:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
4560:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
4561:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize    number of input samples to process per call.
4562:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4563:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_sparse_q15(
4564:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_sparse_instance_q15 * S,
4565:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
4566:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
4567:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratchIn,
4568:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pScratchOut,
4569:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4570:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4571:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4572:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4573:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q15 sparse FIR filter.
4574:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 sparse FIR structure.
4575:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4576:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4577:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4578:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4579:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4580:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4581:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4582:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_sparse_init_q15(
4583:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_sparse_instance_q15 * S,
4584:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
4585:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pCoeffs,
4586:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState,
4587:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t * pTapDelay,
4588:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t maxDelay,
4589:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4590:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4591:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4592:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4593:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q7 sparse FIR filter.
4594:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S            points to an instance of the Q7 sparse FIR structure.
4595:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc         points to the block of input data.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 104


4596:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst         points to the block of output data
4597:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
4598:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
4599:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize    number of input samples to process per call.
4600:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4601:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_sparse_q7(
4602:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_sparse_instance_q7 * S,
4603:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
4604:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
4605:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pScratchIn,
4606:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pScratchOut,
4607:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4608:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4609:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4610:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4611:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q7 sparse FIR filter.
4612:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q7 sparse FIR structure.
4613:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4614:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4615:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4616:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4617:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4618:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4619:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4620:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_sparse_init_q7(
4621:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_sparse_instance_q7 * S,
4622:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
4623:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pCoeffs,
4624:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pState,
4625:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t * pTapDelay,
4626:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t maxDelay,
4627:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4628:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4629:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4630:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4631:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Floating-point sin_cos function.
4632:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  theta   input value in degrees
4633:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pSinVal  points to the processed sine output.
4634:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pCosVal  points to the processed cos output.
4635:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4636:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_sin_cos_f32(
4637:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t theta,
4638:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSinVal,
4639:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCosVal);
4640:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4641:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4642:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4643:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Q31 sin_cos function.
4644:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  theta    scaled input value in degrees
4645:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pSinVal  points to the processed sine output.
4646:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pCosVal  points to the processed cosine output.
4647:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4648:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_sin_cos_q31(
4649:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t theta,
4650:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSinVal,
4651:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pCosVal);
4652:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 105


4653:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4654:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4655:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Floating-point complex conjugate.
4656:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4657:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the output vector
4658:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4659:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4660:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cmplx_conj_f32(
4661:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
4662:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
4663:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numSamples);
4664:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4665:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4666:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Q31 complex conjugate.
4667:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4668:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the output vector
4669:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4670:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4671:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cmplx_conj_q31(
4672:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
4673:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
4674:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numSamples);
4675:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4676:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4677:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4678:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Q15 complex conjugate.
4679:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4680:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the output vector
4681:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4682:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4683:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cmplx_conj_q15(
4684:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
4685:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
4686:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numSamples);
4687:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4688:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4689:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4690:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Floating-point complex magnitude squared
4691:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4692:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the real output vector
4693:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4694:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4695:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cmplx_mag_squared_f32(
4696:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
4697:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
4698:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numSamples);
4699:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4700:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4701:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4702:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Q31 complex magnitude squared
4703:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4704:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the real output vector
4705:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4706:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4707:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cmplx_mag_squared_q31(
4708:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
4709:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 106


4710:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numSamples);
4711:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4712:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4713:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4714:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Q15 complex magnitude squared
4715:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4716:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the real output vector
4717:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4718:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4719:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cmplx_mag_squared_q15(
4720:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
4721:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
4722:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numSamples);
4723:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4724:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4725:..\CMSIS_DSP_LIB\Include/arm_math.h ****  /**
4726:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @ingroup groupController
4727:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4728:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4729:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4730:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @defgroup PID PID Motor Control
4731:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4732:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * A Proportional Integral Derivative (PID) controller is a generic feedback control
4733:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * loop mechanism widely used in industrial control systems.
4734:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * A PID controller is the most commonly used type of feedback controller.
4735:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4736:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * This set of functions implements (PID) controllers
4737:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * for Q15, Q31, and floating-point data types.  The functions operate on a single sample
4738:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * of data and each call to the function returns a single processed value.
4739:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>S</code> points to an instance of the PID control data structure.  <code>in</code>
4740:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * is the input sample value. The functions return the output value.
4741:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4742:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Algorithm:
4743:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <pre>
4744:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *    y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]
4745:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *    A0 = Kp + Ki + Kd
4746:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *    A1 = (-Kp ) - (2 * Kd )
4747:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *    A2 = Kd  </pre>
4748:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4749:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
4750:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * where \c Kp is proportional constant, \c Ki is Integral constant and \c Kd is Derivative const
4751:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4752:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
4753:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \image html PID.gif "Proportional Integral Derivative Controller"
4754:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4755:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
4756:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The PID controller calculates an "error" value as the difference between
4757:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * the measured output and the reference input.
4758:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The controller attempts to minimize the error by adjusting the process control inputs.
4759:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The proportional value determines the reaction to the current error,
4760:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * the integral value determines the reaction based on the sum of recent errors,
4761:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * and the derivative value determines the reaction based on the rate at which the error has been
4762:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4763:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Instance Structure
4764:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The Gains A0, A1, A2 and state variables for a PID controller are stored together in an instan
4765:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * A separate instance structure must be defined for each PID Controller.
4766:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * There are separate instance structure declarations for each of the 3 supported data types.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 107


4767:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4768:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Reset Functions
4769:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * There is also an associated reset function for each data type which clears the state array.
4770:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4771:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Initialization Functions
4772:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * There is also an associated initialization function for each data type.
4773:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The initialization function performs the following operations:
4774:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Initializes the Gains A0, A1, A2 from Kp,Ki, Kd gains.
4775:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Zeros out the values in the state buffer.
4776:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4777:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
4778:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Instance structure cannot be placed into a const data section and it is recommended to use the
4779:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4780:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Fixed-Point Behavior
4781:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Care must be taken when using the fixed-point versions of the PID Controller functions.
4782:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used in each function m
4783:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
4784:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4785:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4786:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4787:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @addtogroup PID
4788:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @{
4789:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4790:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4791:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4792:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Process function for the floating-point PID Control.
4793:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S   is an instance of the floating-point PID Control structure
4794:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     in  input sample to process
4795:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return out processed output sample.
4796:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4797:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE float32_t arm_pid_f32(
4798:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_pid_instance_f32 * S,
4799:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t in)
4800:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4801:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t out;
4802:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4803:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]  */
4804:..\CMSIS_DSP_LIB\Include/arm_math.h ****     out = (S->A0 * in) +
4805:..\CMSIS_DSP_LIB\Include/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
4806:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4807:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Update state */
4808:..\CMSIS_DSP_LIB\Include/arm_math.h ****     S->state[1] = S->state[0];
4809:..\CMSIS_DSP_LIB\Include/arm_math.h ****     S->state[0] = in;
4810:..\CMSIS_DSP_LIB\Include/arm_math.h ****     S->state[2] = out;
4811:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4812:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* return to application */
4813:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return (out);
4814:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4815:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
4816:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4817:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4818:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Process function for the Q31 PID Control.
4819:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S  points to an instance of the Q31 PID Control structure
4820:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     in  input sample to process
4821:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return out processed output sample.
4822:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4823:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 108


4824:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
4825:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function is implemented using an internal 64-bit accumulator.
4826:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The accumulator has a 2.62 format and maintains full precision of the intermediate multiplicat
4827:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Thus, if the accumulator result overflows it wraps around rather than clip.
4828:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * In order to avoid overflows completely the input signal must be scaled down by 2 bits as there
4829:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * After all multiply-accumulates are performed, the 2.62 accumulator is truncated to 1.32 format
4830:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4831:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q31_t arm_pid_q31(
4832:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_pid_instance_q31 * S,
4833:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t in)
4834:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4835:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q63_t acc;
4836:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t out;
4837:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4838:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* acc = A0 * x[n]  */
4839:..\CMSIS_DSP_LIB\Include/arm_math.h ****     acc = (q63_t) S->A0 * in;
4840:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4841:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* acc += A1 * x[n-1] */
4842:..\CMSIS_DSP_LIB\Include/arm_math.h ****     acc += (q63_t) S->A1 * S->state[0];
4843:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4844:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* acc += A2 * x[n-2]  */
4845:..\CMSIS_DSP_LIB\Include/arm_math.h ****     acc += (q63_t) S->A2 * S->state[1];
4846:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4847:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* convert output to 1.31 format to add y[n-1] */
4848:..\CMSIS_DSP_LIB\Include/arm_math.h ****     out = (q31_t) (acc >> 31u);
4849:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4850:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* out += y[n-1] */
4851:..\CMSIS_DSP_LIB\Include/arm_math.h ****     out += S->state[2];
4852:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4853:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Update state */
4854:..\CMSIS_DSP_LIB\Include/arm_math.h ****     S->state[1] = S->state[0];
4855:..\CMSIS_DSP_LIB\Include/arm_math.h ****     S->state[0] = in;
4856:..\CMSIS_DSP_LIB\Include/arm_math.h ****     S->state[2] = out;
4857:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4858:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* return to application */
4859:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return (out);
4860:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
4861:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4862:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4863:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4864:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Process function for the Q15 PID Control.
4865:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S   points to an instance of the Q15 PID Control structure
4866:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     in  input sample to process
4867:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return out processed output sample.
4868:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4869:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
4870:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
4871:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function is implemented using a 64-bit internal accumulator.
4872:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Both Gains and state variables are represented in 1.15 format and multiplications yield a 2.30
4873:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The 2.30 intermediate results are accumulated in a 64-bit accumulator in 34.30 format.
4874:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * There is no risk of internal overflow with this approach and the full precision of intermediat
4875:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * After all additions have been performed, the accumulator is truncated to 34.15 format by disca
4876:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Lastly, the accumulator is saturated to yield a result in 1.15 format.
4877:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4878:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q15_t arm_pid_q15(
4879:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_pid_instance_q15 * S,
4880:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t in)
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 109


4881:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4882:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q63_t acc;
4883:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t out;
4884:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4885:..\CMSIS_DSP_LIB\Include/arm_math.h **** #ifndef ARM_MATH_CM0_FAMILY
4886:..\CMSIS_DSP_LIB\Include/arm_math.h ****     __SIMD32_TYPE *vstate;
4887:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4888:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Implementation of PID controller */
4889:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4890:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* acc = A0 * x[n]  */
4891:..\CMSIS_DSP_LIB\Include/arm_math.h ****     acc = (q31_t) __SMUAD((uint32_t)S->A0, (uint32_t)in);
4892:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4893:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* acc += A1 * x[n-1] + A2 * x[n-2]  */
4894:..\CMSIS_DSP_LIB\Include/arm_math.h ****     vstate = __SIMD32_CONST(S->state);
4895:..\CMSIS_DSP_LIB\Include/arm_math.h ****     acc = (q63_t)__SMLALD((uint32_t)S->A1, (uint32_t)*vstate, (uint64_t)acc);
4896:..\CMSIS_DSP_LIB\Include/arm_math.h **** #else
4897:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* acc = A0 * x[n]  */
4898:..\CMSIS_DSP_LIB\Include/arm_math.h ****     acc = ((q31_t) S->A0) * in;
4899:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4900:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* acc += A1 * x[n-1] + A2 * x[n-2]  */
4901:..\CMSIS_DSP_LIB\Include/arm_math.h ****     acc += (q31_t) S->A1 * S->state[0];
4902:..\CMSIS_DSP_LIB\Include/arm_math.h ****     acc += (q31_t) S->A2 * S->state[1];
4903:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
4904:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4905:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* acc += y[n-1] */
4906:..\CMSIS_DSP_LIB\Include/arm_math.h ****     acc += (q31_t) S->state[2] << 15;
4907:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4908:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* saturate the output */
4909:..\CMSIS_DSP_LIB\Include/arm_math.h ****     out = (q15_t) (__SSAT((acc >> 15), 16));
4910:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4911:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Update state */
4912:..\CMSIS_DSP_LIB\Include/arm_math.h ****     S->state[1] = S->state[0];
4913:..\CMSIS_DSP_LIB\Include/arm_math.h ****     S->state[0] = in;
4914:..\CMSIS_DSP_LIB\Include/arm_math.h ****     S->state[2] = out;
4915:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4916:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* return to application */
4917:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return (out);
4918:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
4919:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4920:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4921:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @} end of PID group
4922:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4923:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4924:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4925:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4926:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point matrix inverse.
4927:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  src   points to the instance of the input floating-point matrix structure.
4928:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] dst   points to the instance of the output floating-point matrix structure.
4929:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match.
4930:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * If the input matrix is singular (does not have an inverse), then the algorithm terminates and 
4931:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4932:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_inverse_f32(
4933:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * src,
4934:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_f32 * dst);
4935:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4936:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4937:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 110


4938:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point matrix inverse.
4939:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  src   points to the instance of the input floating-point matrix structure.
4940:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] dst   points to the instance of the output floating-point matrix structure.
4941:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match.
4942:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * If the input matrix is singular (does not have an inverse), then the algorithm terminates and 
4943:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4944:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_inverse_f64(
4945:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f64 * src,
4946:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_f64 * dst);
4947:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4948:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4949:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4950:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4951:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @ingroup groupController
4952:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4953:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4954:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4955:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @defgroup clarke Vector Clarke Transform
4956:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Forward Clarke transform converts the instantaneous stator phases into a two-coordinate time i
4957:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Generally the Clarke transform uses three-phase currents <code>Ia, Ib and Ic</code> to calcula
4958:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * in the two-phase orthogonal stator axis <code>Ialpha</code> and <code>Ibeta</code>.
4959:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * When <code>Ialpha</code> is superposed with <code>Ia</code> as shown in the figure below
4960:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \image html clarke.gif Stator current space vector and its components in (a,b).
4961:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * and <code>Ia + Ib + Ic = 0</code>, in this condition <code>Ialpha</code> and <code>Ibeta</code
4962:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * can be calculated using only <code>Ia</code> and <code>Ib</code>.
4963:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4964:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
4965:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
4966:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Algorithm
4967:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \image html clarkeFormula.gif
4968:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * where <code>Ia</code> and <code>Ib</code> are the instantaneous stator phases and
4969:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>pIalpha</code> and <code>pIbeta</code> are the two coordinates of time invariant vector.
4970:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Fixed-Point Behavior
4971:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Clarke transform.
4972:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
4973:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
4974:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4975:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4976:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4977:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @addtogroup clarke
4978:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @{
4979:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4980:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4981:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4982:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4983:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Floating-point Clarke transform
4984:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ia       input three-phase coordinate <code>a</code>
4985:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ib       input three-phase coordinate <code>b</code>
4986:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
4987:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
4988:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4989:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE void arm_clarke_f32(
4990:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t Ia,
4991:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t Ib,
4992:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pIalpha,
4993:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pIbeta)
4994:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 111


4995:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculate pIalpha using the equation, pIalpha = Ia */
4996:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIalpha = Ia;
4997:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4998:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculate pIbeta using the equation, pIbeta = (1/sqrt(3)) * Ia + (2/sqrt(3)) * Ib */
4999:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIbeta = ((float32_t) 0.57735026919 * Ia + (float32_t) 1.15470053838 * Ib);
5000:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5001:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5002:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5003:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5004:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Clarke transform for Q31 version
5005:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ia       input three-phase coordinate <code>a</code>
5006:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ib       input three-phase coordinate <code>b</code>
5007:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5008:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5009:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5010:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5011:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
5012:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
5013:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5014:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * There is saturation on the addition, hence there is no risk of overflow.
5015:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5016:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE void arm_clarke_q31(
5017:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t Ia,
5018:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t Ib,
5019:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pIalpha,
5020:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pIbeta)
5021:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5022:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5023:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5024:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculating pIalpha from Ia by equation pIalpha = Ia */
5025:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIalpha = Ia;
5026:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5027:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (1/(sqrt(3)) * Ia) */
5028:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product1 = (q31_t) (((q63_t) Ia * 0x24F34E8B) >> 30);
5029:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5030:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (2/sqrt(3) * Ib) */
5031:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product2 = (q31_t) (((q63_t) Ib * 0x49E69D16) >> 30);
5032:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5033:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* pIbeta is calculated by adding the intermediate products */
5034:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIbeta = __QADD(product1, product2);
5035:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5036:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5037:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5038:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @} end of clarke group
5039:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5040:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5041:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5042:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Converts the elements of the Q7 vector to Q31 vector.
5043:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       input pointer
5044:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       output pointer
5045:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
5046:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5047:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_q7_to_q31(
5048:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
5049:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
5050:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
5051:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 112


5052:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5053:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5054:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5055:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @ingroup groupController
5056:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5057:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5058:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5059:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @defgroup inv_clarke Vector Inverse Clarke Transform
5060:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Inverse Clarke transform converts the two-coordinate time invariant vector into instantaneous 
5061:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5062:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5063:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5064:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Algorithm
5065:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \image html clarkeInvFormula.gif
5066:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * where <code>pIa</code> and <code>pIb</code> are the instantaneous stator phases and
5067:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>Ialpha</code> and <code>Ibeta</code> are the two coordinates of time invariant vector.
5068:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Fixed-Point Behavior
5069:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Clarke transform.
5070:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5071:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5072:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5073:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5074:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5075:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @addtogroup inv_clarke
5076:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @{
5077:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5078:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5079:..\CMSIS_DSP_LIB\Include/arm_math.h ****    /**
5080:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Floating-point Inverse Clarke transform
5081:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ialpha  input two-phase orthogonal vector axis alpha
5082:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ibeta   input two-phase orthogonal vector axis beta
5083:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIa     points to output three-phase coordinate <code>a</code>
5084:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIb     points to output three-phase coordinate <code>b</code>
5085:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5086:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE void arm_inv_clarke_f32(
5087:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t Ialpha,
5088:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t Ibeta,
5089:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pIa,
5090:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pIb)
5091:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5092:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculating pIa from Ialpha by equation pIa = Ialpha */
5093:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIa = Ialpha;
5094:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5095:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculating pIb from Ialpha and Ibeta by equation pIb = -(1/2) * Ialpha + (sqrt(3)/2) * Ibet
5096:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIb = -0.5f * Ialpha + 0.8660254039f * Ibeta;
5097:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5098:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5099:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5100:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5101:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Inverse Clarke transform for Q31 version
5102:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ialpha  input two-phase orthogonal vector axis alpha
5103:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ibeta   input two-phase orthogonal vector axis beta
5104:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIa     points to output three-phase coordinate <code>a</code>
5105:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIb     points to output three-phase coordinate <code>b</code>
5106:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5107:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5108:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 113


5109:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
5110:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5111:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * There is saturation on the subtraction, hence there is no risk of overflow.
5112:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5113:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE void arm_inv_clarke_q31(
5114:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t Ialpha,
5115:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t Ibeta,
5116:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pIa,
5117:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pIb)
5118:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5119:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5120:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5121:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculating pIa from Ialpha by equation pIa = Ialpha */
5122:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIa = Ialpha;
5123:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5124:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (1/(2*sqrt(3)) * Ia) */
5125:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product1 = (q31_t) (((q63_t) (Ialpha) * (0x40000000)) >> 31);
5126:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5127:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (1/sqrt(3) * pIb) */
5128:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product2 = (q31_t) (((q63_t) (Ibeta) * (0x6ED9EBA1)) >> 31);
5129:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5130:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* pIb is calculated by subtracting the products */
5131:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIb = __QSUB(product2, product1);
5132:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5133:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5134:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5135:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @} end of inv_clarke group
5136:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5137:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5138:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5139:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Converts the elements of the Q7 vector to Q15 vector.
5140:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       input pointer
5141:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       output pointer
5142:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
5143:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5144:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_q7_to_q15(
5145:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
5146:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
5147:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
5148:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5149:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5150:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5151:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5152:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @ingroup groupController
5153:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5154:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5155:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5156:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @defgroup park Vector Park Transform
5157:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5158:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Forward Park transform converts the input two-coordinate vector to flux and torque components.
5159:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The Park transform can be used to realize the transformation of the <code>Ialpha</code> and th
5160:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * from the stationary to the moving reference frame and control the spatial relationship between
5161:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * the stator vector current and rotor flux vector.
5162:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * If we consider the d axis aligned with the rotor flux, the diagram below shows the
5163:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * current vector and the relationship from the two reference frames:
5164:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \image html park.gif "Stator current space vector and its component in (a,b) and in the d,q ro
5165:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 114


5166:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5167:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5168:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Algorithm
5169:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \image html parkFormula.gif
5170:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * where <code>Ialpha</code> and <code>Ibeta</code> are the stator vector components,
5171:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>pId</code> and <code>pIq</code> are rotor vector components and <code>cosVal</code> and 
5172:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * cosine and sine values of theta (rotor flux position).
5173:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Fixed-Point Behavior
5174:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Park transform.
5175:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5176:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5177:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5178:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5179:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5180:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @addtogroup park
5181:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @{
5182:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5183:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5184:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5185:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point Park transform
5186:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ialpha  input two-phase vector coordinate alpha
5187:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ibeta   input two-phase vector coordinate beta
5188:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pId     points to output   rotor reference frame d
5189:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIq     points to output   rotor reference frame q
5190:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  sinVal  sine value of rotation angle theta
5191:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  cosVal  cosine value of rotation angle theta
5192:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5193:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function implements the forward Park transform.
5194:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5195:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5196:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE void arm_park_f32(
5197:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t Ialpha,
5198:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t Ibeta,
5199:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pId,
5200:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pIq,
5201:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t sinVal,
5202:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t cosVal)
5203:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5204:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculate pId using the equation, pId = Ialpha * cosVal + Ibeta * sinVal */
5205:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pId = Ialpha * cosVal + Ibeta * sinVal;
5206:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5207:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculate pIq using the equation, pIq = - Ialpha * sinVal + Ibeta * cosVal */
5208:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIq = -Ialpha * sinVal + Ibeta * cosVal;
5209:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5210:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5211:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5212:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5213:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Park transform for Q31 version
5214:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ialpha  input two-phase vector coordinate alpha
5215:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ibeta   input two-phase vector coordinate beta
5216:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pId     points to output rotor reference frame d
5217:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIq     points to output rotor reference frame q
5218:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  sinVal  sine value of rotation angle theta
5219:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  cosVal  cosine value of rotation angle theta
5220:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5221:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5222:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 115


5223:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
5224:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5225:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * There is saturation on the addition and subtraction, hence there is no risk of overflow.
5226:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5227:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE void arm_park_q31(
5228:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t Ialpha,
5229:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t Ibeta,
5230:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pId,
5231:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pIq,
5232:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t sinVal,
5233:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t cosVal)
5234:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5235:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5236:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t product3, product4;                    /* Temporary variables used to store intermediate 
5237:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5238:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (Ialpha * cosVal) */
5239:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product1 = (q31_t) (((q63_t) (Ialpha) * (cosVal)) >> 31);
5240:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5241:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (Ibeta * sinVal) */
5242:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product2 = (q31_t) (((q63_t) (Ibeta) * (sinVal)) >> 31);
5243:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5244:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5245:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (Ialpha * sinVal) */
5246:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product3 = (q31_t) (((q63_t) (Ialpha) * (sinVal)) >> 31);
5247:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5248:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (Ibeta * cosVal) */
5249:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product4 = (q31_t) (((q63_t) (Ibeta) * (cosVal)) >> 31);
5250:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5251:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculate pId by adding the two intermediate products 1 and 2 */
5252:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pId = __QADD(product1, product2);
5253:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5254:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculate pIq by subtracting the two intermediate products 3 from 4 */
5255:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIq = __QSUB(product4, product3);
5256:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5257:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5258:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5259:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @} end of park group
5260:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5261:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5262:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5263:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Converts the elements of the Q7 vector to floating-point vector.
5264:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       is input pointer
5265:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       is output pointer
5266:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  is the number of samples to process
5267:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5268:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_q7_to_float(
5269:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
5270:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
5271:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
5272:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5273:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5274:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5275:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @ingroup groupController
5276:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5277:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5278:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5279:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @defgroup inv_park Vector Inverse Park transform
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 116


5280:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Inverse Park transform converts the input flux and torque components to two-coordinate vector.
5281:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5282:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5283:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5284:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Algorithm
5285:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \image html parkInvFormula.gif
5286:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * where <code>pIalpha</code> and <code>pIbeta</code> are the stator vector components,
5287:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>Id</code> and <code>Iq</code> are rotor vector components and <code>cosVal</code> and <c
5288:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * cosine and sine values of theta (rotor flux position).
5289:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Fixed-Point Behavior
5290:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Park transform.
5291:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5292:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5293:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5294:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5295:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5296:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @addtogroup inv_park
5297:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @{
5298:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5299:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5300:..\CMSIS_DSP_LIB\Include/arm_math.h ****    /**
5301:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Floating-point Inverse Park transform
5302:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Id       input coordinate of rotor reference frame d
5303:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Iq       input coordinate of rotor reference frame q
5304:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5305:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5306:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  sinVal   sine value of rotation angle theta
5307:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  cosVal   cosine value of rotation angle theta
5308:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5309:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE void arm_inv_park_f32(
5310:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t Id,
5311:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t Iq,
5312:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pIalpha,
5313:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pIbeta,
5314:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t sinVal,
5315:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t cosVal)
5316:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5317:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculate pIalpha using the equation, pIalpha = Id * cosVal - Iq * sinVal */
5318:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIalpha = Id * cosVal - Iq * sinVal;
5319:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5320:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculate pIbeta using the equation, pIbeta = Id * sinVal + Iq * cosVal */
5321:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIbeta = Id * sinVal + Iq * cosVal;
5322:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5323:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5324:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5325:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5326:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Inverse Park transform for   Q31 version
5327:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Id       input coordinate of rotor reference frame d
5328:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Iq       input coordinate of rotor reference frame q
5329:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5330:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5331:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  sinVal   sine value of rotation angle theta
5332:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  cosVal   cosine value of rotation angle theta
5333:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5334:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5335:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
5336:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 117


5337:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5338:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * There is saturation on the addition, hence there is no risk of overflow.
5339:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5340:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE void arm_inv_park_q31(
5341:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t Id,
5342:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t Iq,
5343:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pIalpha,
5344:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pIbeta,
5345:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t sinVal,
5346:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t cosVal)
5347:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5348:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5349:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t product3, product4;                    /* Temporary variables used to store intermediate 
5350:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5351:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (Id * cosVal) */
5352:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product1 = (q31_t) (((q63_t) (Id) * (cosVal)) >> 31);
5353:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5354:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (Iq * sinVal) */
5355:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product2 = (q31_t) (((q63_t) (Iq) * (sinVal)) >> 31);
5356:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5357:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5358:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (Id * sinVal) */
5359:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product3 = (q31_t) (((q63_t) (Id) * (sinVal)) >> 31);
5360:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5361:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (Iq * cosVal) */
5362:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product4 = (q31_t) (((q63_t) (Iq) * (cosVal)) >> 31);
5363:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5364:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculate pIalpha by using the two intermediate products 1 and 2 */
5365:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIalpha = __QSUB(product1, product2);
5366:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5367:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculate pIbeta by using the two intermediate products 3 and 4 */
5368:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIbeta = __QADD(product4, product3);
5369:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5370:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5371:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5372:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @} end of Inverse park group
5373:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5374:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5375:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5376:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5377:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Converts the elements of the Q31 vector to floating-point vector.
5378:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       is input pointer
5379:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       is output pointer
5380:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  is the number of samples to process
5381:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5382:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_q31_to_float(
5383:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
5384:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
5385:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
5386:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5387:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5388:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @ingroup groupInterpolation
5389:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5390:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5391:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5392:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @defgroup LinearInterpolate Linear Interpolation
5393:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 118


5394:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Linear interpolation is a method of curve fitting using linear polynomials.
5395:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Linear interpolation works by effectively drawing a straight line between two neighboring samp
5396:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5397:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
5398:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \image html LinearInterp.gif "Linear interpolation"
5399:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5400:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
5401:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * A  Linear Interpolate function calculates an output value(y), for the input(x)
5402:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * using linear interpolation of the input values x0, x1( nearest input values) and the output va
5403:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5404:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Algorithm:
5405:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <pre>
5406:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *       y = y0 + (x - x0) * ((y1 - y0)/(x1-x0))
5407:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *       where x0, x1 are nearest values of input x
5408:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *             y0, y1 are nearest values to output y
5409:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * </pre>
5410:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5411:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
5412:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * This set of functions implements Linear interpolation process
5413:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * for Q7, Q15, Q31, and floating-point data types.  The functions operate on a single
5414:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * sample of data and each call to the function returns a single processed value.
5415:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>S</code> points to an instance of the Linear Interpolate function data structure.
5416:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>x</code> is the input sample value. The functions returns the output value.
5417:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5418:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
5419:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * if x is outside of the table boundary, Linear interpolation returns first value of the table
5420:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * if x is below input range and returns last value of table if x is above range.
5421:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5422:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5423:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5424:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @addtogroup LinearInterpolate
5425:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @{
5426:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5427:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5428:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5429:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Process function for the floating-point Linear Interpolation Function.
5430:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S  is an instance of the floating-point Linear Interpolation structure
5431:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     x  input sample to process
5432:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return y processed output sample.
5433:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5434:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5435:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE float32_t arm_linear_interp_f32(
5436:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_linear_interp_instance_f32 * S,
5437:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t x)
5438:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5439:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t y;
5440:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t x0, x1;                            /* Nearest input values */
5441:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t y0, y1;                            /* Nearest output values */
5442:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t xSpacing = S->xSpacing;            /* spacing between input values */
5443:..\CMSIS_DSP_LIB\Include/arm_math.h ****     int32_t i;                                   /* Index variable */
5444:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pYData = S->pYData;               /* pointer to output table */
5445:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5446:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculation of index */
5447:..\CMSIS_DSP_LIB\Include/arm_math.h ****     i = (int32_t) ((x - S->x1) / xSpacing);
5448:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5449:..\CMSIS_DSP_LIB\Include/arm_math.h ****     if(i < 0)
5450:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 119


5451:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Iniatilize output for below specified range as least output value of table */
5452:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y = pYData[0];
5453:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5454:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else if((uint32_t)i >= S->nValues)
5455:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5456:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Iniatilize output for above specified range as last output value of table */
5457:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y = pYData[S->nValues - 1];
5458:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5459:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else
5460:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5461:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Calculation of nearest input values */
5462:..\CMSIS_DSP_LIB\Include/arm_math.h ****       x0 = S->x1 +  i      * xSpacing;
5463:..\CMSIS_DSP_LIB\Include/arm_math.h ****       x1 = S->x1 + (i + 1) * xSpacing;
5464:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5465:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Read of nearest output values */
5466:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y0 = pYData[i];
5467:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y1 = pYData[i + 1];
5468:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5469:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Calculation of output */
5470:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y = y0 + (x - x0) * ((y1 - y0) / (x1 - x0));
5471:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5472:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5473:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5474:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* returns output value */
5475:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return (y);
5476:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5477:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5478:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5479:..\CMSIS_DSP_LIB\Include/arm_math.h ****    /**
5480:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5481:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Process function for the Q31 Linear Interpolation Function.
5482:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pYData   pointer to Q31 Linear Interpolation table
5483:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] x        input sample to process
5484:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] nValues  number of table values
5485:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return y processed output sample.
5486:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5487:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
5488:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 b
5489:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * This function can support maximum of table size 2^12.
5490:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5491:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5492:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q31_t arm_linear_interp_q31(
5493:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pYData,
5494:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t x,
5495:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t nValues)
5496:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5497:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t y;                                     /* output */
5498:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t y0, y1;                                /* Nearest output values */
5499:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t fract;                                 /* fractional part */
5500:..\CMSIS_DSP_LIB\Include/arm_math.h ****     int32_t index;                               /* Index to read nearest output values */
5501:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5502:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Input is in 12.20 format */
5503:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* 12 bits for the table index */
5504:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Index value calculation */
5505:..\CMSIS_DSP_LIB\Include/arm_math.h ****     index = ((x & (q31_t)0xFFF00000) >> 20);
5506:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5507:..\CMSIS_DSP_LIB\Include/arm_math.h ****     if(index >= (int32_t)(nValues - 1))
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 120


5508:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5509:..\CMSIS_DSP_LIB\Include/arm_math.h ****       return (pYData[nValues - 1]);
5510:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5511:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else if(index < 0)
5512:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5513:..\CMSIS_DSP_LIB\Include/arm_math.h ****       return (pYData[0]);
5514:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5515:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else
5516:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5517:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* 20 bits for the fractional part */
5518:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* shift left by 11 to keep fract in 1.31 format */
5519:..\CMSIS_DSP_LIB\Include/arm_math.h ****       fract = (x & 0x000FFFFF) << 11;
5520:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5521:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Read two nearest output values from the index in 1.31(q31) format */
5522:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y0 = pYData[index];
5523:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y1 = pYData[index + 1];
5524:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5525:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Calculation of y0 * (1-fract) and y is in 2.30 format */
5526:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y = ((q31_t) ((q63_t) y0 * (0x7FFFFFFF - fract) >> 32));
5527:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5528:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Calculation of y0 * (1-fract) + y1 *fract and y is in 2.30 format */
5529:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y += ((q31_t) (((q63_t) y1 * fract) >> 32));
5530:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5531:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Convert y to 1.31 format */
5532:..\CMSIS_DSP_LIB\Include/arm_math.h ****       return (y << 1u);
5533:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5534:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5535:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5536:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5537:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5538:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5539:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Process function for the Q15 Linear Interpolation Function.
5540:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pYData   pointer to Q15 Linear Interpolation table
5541:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] x        input sample to process
5542:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] nValues  number of table values
5543:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return y processed output sample.
5544:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5545:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
5546:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 b
5547:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * This function can support maximum of table size 2^12.
5548:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5549:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5550:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q15_t arm_linear_interp_q15(
5551:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pYData,
5552:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t x,
5553:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t nValues)
5554:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5555:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q63_t y;                                     /* output */
5556:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t y0, y1;                                /* Nearest output values */
5557:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t fract;                                 /* fractional part */
5558:..\CMSIS_DSP_LIB\Include/arm_math.h ****     int32_t index;                               /* Index to read nearest output values */
5559:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5560:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Input is in 12.20 format */
5561:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* 12 bits for the table index */
5562:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Index value calculation */
5563:..\CMSIS_DSP_LIB\Include/arm_math.h ****     index = ((x & (int32_t)0xFFF00000) >> 20);
5564:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 121


5565:..\CMSIS_DSP_LIB\Include/arm_math.h ****     if(index >= (int32_t)(nValues - 1))
5566:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5567:..\CMSIS_DSP_LIB\Include/arm_math.h ****       return (pYData[nValues - 1]);
5568:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5569:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else if(index < 0)
5570:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5571:..\CMSIS_DSP_LIB\Include/arm_math.h ****       return (pYData[0]);
5572:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5573:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else
5574:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5575:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* 20 bits for the fractional part */
5576:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* fract is in 12.20 format */
5577:..\CMSIS_DSP_LIB\Include/arm_math.h ****       fract = (x & 0x000FFFFF);
5578:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5579:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Read two nearest output values from the index */
5580:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y0 = pYData[index];
5581:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y1 = pYData[index + 1];
5582:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5583:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Calculation of y0 * (1-fract) and y is in 13.35 format */
5584:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y = ((q63_t) y0 * (0xFFFFF - fract));
5585:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5586:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Calculation of (y0 * (1-fract) + y1 * fract) and y is in 13.35 format */
5587:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y += ((q63_t) y1 * (fract));
5588:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5589:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* convert y to 1.15 format */
5590:..\CMSIS_DSP_LIB\Include/arm_math.h ****       return (q15_t) (y >> 20);
5591:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5592:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5593:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5594:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5595:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5596:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5597:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Process function for the Q7 Linear Interpolation Function.
5598:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pYData   pointer to Q7 Linear Interpolation table
5599:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] x        input sample to process
5600:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] nValues  number of table values
5601:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return y processed output sample.
5602:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5603:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
5604:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 b
5605:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * This function can support maximum of table size 2^12.
5606:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5607:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q7_t arm_linear_interp_q7(
5608:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pYData,
5609:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t x,
5610:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t nValues)
5611:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5612:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t y;                                     /* output */
5613:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q7_t y0, y1;                                 /* Nearest output values */
5614:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t fract;                                 /* fractional part */
5615:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t index;                              /* Index to read nearest output values */
5616:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5617:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Input is in 12.20 format */
5618:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* 12 bits for the table index */
5619:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Index value calculation */
5620:..\CMSIS_DSP_LIB\Include/arm_math.h ****     if (x < 0)
5621:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 122


5622:..\CMSIS_DSP_LIB\Include/arm_math.h ****       return (pYData[0]);
5623:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5624:..\CMSIS_DSP_LIB\Include/arm_math.h ****     index = (x >> 20) & 0xfff;
5625:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5626:..\CMSIS_DSP_LIB\Include/arm_math.h ****     if(index >= (nValues - 1))
5627:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5628:..\CMSIS_DSP_LIB\Include/arm_math.h ****       return (pYData[nValues - 1]);
5629:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5630:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else
5631:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5632:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* 20 bits for the fractional part */
5633:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* fract is in 12.20 format */
5634:..\CMSIS_DSP_LIB\Include/arm_math.h ****       fract = (x & 0x000FFFFF);
5635:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5636:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Read two nearest output values from the index and are in 1.7(q7) format */
5637:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y0 = pYData[index];
5638:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y1 = pYData[index + 1];
5639:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5640:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Calculation of y0 * (1-fract ) and y is in 13.27(q27) format */
5641:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y = ((y0 * (0xFFFFF - fract)));
5642:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5643:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Calculation of y1 * fract + y0 * (1-fract) and y is in 13.27(q27) format */
5644:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y += (y1 * fract);
5645:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5646:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* convert y to 1.7(q7) format */
5647:..\CMSIS_DSP_LIB\Include/arm_math.h ****       return (q7_t) (y >> 20);
5648:..\CMSIS_DSP_LIB\Include/arm_math.h ****      }
5649:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5650:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5651:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5652:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @} end of LinearInterpolate group
5653:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5654:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5655:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5656:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric sine function for floating-point data.
5657:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] x  input value in radians.
5658:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  sin(x).
5659:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5660:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t arm_sin_f32(
5661:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t x);
5662:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5663:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5664:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5665:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric sine function for Q31 data.
5666:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] x  Scaled input value in radians.
5667:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  sin(x).
5668:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5669:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t arm_sin_q31(
5670:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t x);
5671:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5672:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5673:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5674:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric sine function for Q15 data.
5675:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] x  Scaled input value in radians.
5676:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  sin(x).
5677:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5678:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t arm_sin_q15(
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 123


5679:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t x);
5680:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5681:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5682:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5683:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric cosine function for floating-point data.
5684:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] x  input value in radians.
5685:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  cos(x).
5686:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5687:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t arm_cos_f32(
5688:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t x);
5689:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5690:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5691:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5692:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Fast approximation to the trigonometric cosine function for Q31 data.
5693:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] x  Scaled input value in radians.
5694:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  cos(x).
5695:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5696:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t arm_cos_q31(
5697:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t x);
5698:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5699:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5700:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5701:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric cosine function for Q15 data.
5702:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] x  Scaled input value in radians.
5703:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  cos(x).
5704:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5705:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t arm_cos_q15(
5706:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t x);
5707:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5708:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5709:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5710:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @ingroup groupFastMath
5711:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5712:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5713:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5714:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5715:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @defgroup SQRT Square Root
5716:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5717:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Computes the square root of a number.
5718:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * There are separate functions for Q15, Q31, and floating-point data types.
5719:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The square root function is computed using the Newton-Raphson algorithm.
5720:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * This is an iterative algorithm of the form:
5721:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <pre>
5722:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *      x1 = x0 - f(x0)/f'(x0)
5723:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * </pre>
5724:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * where <code>x1</code> is the current estimate,
5725:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>x0</code> is the previous estimate, and
5726:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>f'(x0)</code> is the derivative of <code>f()</code> evaluated at <code>x0</code>.
5727:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * For the square root function, the algorithm reduces to:
5728:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <pre>
5729:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *     x0 = in/2                         [initial guess]
5730:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *     x1 = 1/2 * ( x0 + in / x0)        [each iteration]
5731:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * </pre>
5732:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5733:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5734:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5735:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 124


5736:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @addtogroup SQRT
5737:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @{
5738:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5739:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5740:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5741:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Floating-point square root function.
5742:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  in    input value.
5743:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pOut  square root of input value.
5744:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return The function returns ARM_MATH_SUCCESS if input value is positive value or ARM_MATH_ARG
5745:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>in</code> is negative value and returns zero output for negative values.
5746:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5747:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE arm_status arm_sqrt_f32(
5748:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t in,
5749:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pOut)
5750:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5751:..\CMSIS_DSP_LIB\Include/arm_math.h ****     if(in >= 0.0f)
 886              		.loc 2 5751 0
 887 0176 0021     		movs	r1, #0
 888 0178 FFF7FEFF 		bl	__aeabi_fcmpge
 889              	.LVL109:
 890 017c 20B1     		cbz	r0, .L94
5752:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5753:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5754:..\CMSIS_DSP_LIB\Include/arm_math.h **** #if   (__FPU_USED == 1) && defined ( __CC_ARM   )
5755:..\CMSIS_DSP_LIB\Include/arm_math.h ****       *pOut = __sqrtf(in);
5756:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif (__FPU_USED == 1) && (defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050))
5757:..\CMSIS_DSP_LIB\Include/arm_math.h ****       *pOut = __builtin_sqrtf(in);
5758:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif (__FPU_USED == 1) && defined(__GNUC__)
5759:..\CMSIS_DSP_LIB\Include/arm_math.h ****       *pOut = __builtin_sqrtf(in);
5760:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif (__FPU_USED == 1) && defined ( __ICCARM__ ) && (__VER__ >= 6040000)
5761:..\CMSIS_DSP_LIB\Include/arm_math.h ****       __ASM("VSQRT.F32 %0,%1" : "=t"(*pOut) : "t"(in));
5762:..\CMSIS_DSP_LIB\Include/arm_math.h **** #else
5763:..\CMSIS_DSP_LIB\Include/arm_math.h ****       *pOut = sqrtf(in);
 891              		.loc 2 5763 0
 892 017e 2046     		mov	r0, r4
 893 0180 FFF7FEFF 		bl	sqrtf
 894              	.LVL110:
 895 0184 0546     		mov	r5, r0
 896              	.LVL111:
 897 0186 00E0     		b	.L47
 898              	.LVL112:
 899              	.L94:
5764:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
5765:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5766:..\CMSIS_DSP_LIB\Include/arm_math.h ****       return (ARM_MATH_SUCCESS);
5767:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5768:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else
5769:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5770:..\CMSIS_DSP_LIB\Include/arm_math.h ****       *pOut = 0.0f;
 900              		.loc 2 5770 0
 901 0188 0025     		movs	r5, #0
 902              	.L47:
 903              	.LVL113:
 904              	.LBE5:
 905              	.LBE4:
 388:CLCD_control.c **** 
 389:CLCD_control.c ****             /*********************************************************
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 125


 390:CLCD_control.c ****             * direction of srcA_buf_f32 and srcB_buf_f32
 391:CLCD_control.c ****             **********************************************************/
 392:CLCD_control.c ****             dir = atan2(rms[1], rms[0]);
 906              		.loc 1 392 0
 907 018a 0798     		ldr	r0, [sp, #28]	@ float
 908 018c FFF7FEFF 		bl	__aeabi_f2d
 909              	.LVL114:
 910 0190 0646     		mov	r6, r0
 911 0192 0F46     		mov	r7, r1
 912              	.LVL115:
 913 0194 0698     		ldr	r0, [sp, #24]	@ float
 914 0196 FFF7FEFF 		bl	__aeabi_f2d
 915              	.LVL116:
 916 019a 0246     		mov	r2, r0
 917 019c 0B46     		mov	r3, r1
 918 019e 3046     		mov	r0, r6
 919 01a0 3946     		mov	r1, r7
 920 01a2 FFF7FEFF 		bl	atan2
 921              	.LVL117:
 393:CLCD_control.c ****             dir_deg = (dir / 3.14159) * 180;
 922              		.loc 1 393 0
 923 01a6 56A3     		adr	r3, .L97
 924 01a8 D3E90023 		ldrd	r2, [r3]
 925 01ac FFF7FEFF 		bl	__aeabi_ddiv
 926              	.LVL118:
 927 01b0 0022     		movs	r2, #0
 928 01b2 614B     		ldr	r3, .L97+56
 929 01b4 FFF7FEFF 		bl	__aeabi_dmul
 930              	.LVL119:
 931 01b8 8346     		mov	fp, r0
 932 01ba 0C46     		mov	r4, r1
 933              	.LVL120:
 394:CLCD_control.c ****             if (abs((int)phi_deg) <= 90)
 934              		.loc 1 394 0
 935 01bc DDE90001 		ldrd	r0, [sp]
 936              	.LVL121:
 937 01c0 FFF7FEFF 		bl	__aeabi_d2iz
 938              	.LVL122:
 939 01c4 5A30     		adds	r0, r0, #90
 940 01c6 B428     		cmp	r0, #180
 941 01c8 01D8     		bhi	.L49
 395:CLCD_control.c ****                 dir_deg *= (-1);        /* (-) means left side */
 942              		.loc 1 395 0
 943 01ca 04F10044 		add	r4, r4, #-2147483648
 944              	.LVL123:
 945              	.L49:
 396:CLCD_control.c ****             
 397:CLCD_control.c ****             update_level_flag = 1;      /* flag for LEVEL diaplay */
 398:CLCD_control.c ****             update_gain_flag = 1;       /* flag for PGA Gain */
 399:CLCD_control.c ****             xSemaphoreGive(xMutex_RX_BUF);
 946              		.loc 1 399 0
 947 01ce 564B     		ldr	r3, .L97+40
 948 01d0 1868     		ldr	r0, [r3]
 949 01d2 0021     		movs	r1, #0
 950 01d4 0A46     		mov	r2, r1
 951 01d6 0B46     		mov	r3, r1
 952 01d8 FFF7FEFF 		bl	xQueueGenericSend
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 126


 953              	.LVL124:
 400:CLCD_control.c **** 
 401:CLCD_control.c ****             MON_Write(0u);      /* Debug */
 954              		.loc 1 401 0
 955 01dc 0020     		movs	r0, #0
 956 01de FFF7FEFF 		bl	MON_Write
 957              	.LVL125:
 398:CLCD_control.c ****             xSemaphoreGive(xMutex_RX_BUF);
 958              		.loc 1 398 0
 959 01e2 0126     		movs	r6, #1
 397:CLCD_control.c ****             update_gain_flag = 1;       /* flag for PGA Gain */
 960              		.loc 1 397 0
 961 01e4 3746     		mov	r7, r6
 962              	.LVL126:
 963              	.L45:
 402:CLCD_control.c ****         }    
 403:CLCD_control.c **** 
 404:CLCD_control.c ****         if (update_level_flag)
 964              		.loc 1 404 0
 965 01e6 002F     		cmp	r7, #0
 966 01e8 00F08181 		beq	.L50
 405:CLCD_control.c ****         {
 406:CLCD_control.c ****             if (mode == DISTANCE)
 967              		.loc 1 406 0
 968 01ec 4A4B     		ldr	r3, .L97+24
 969 01ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 970 01f0 012B     		cmp	r3, #1
 971 01f2 40F0C880 		bne	.L95
 972 01f6 27E0     		b	.L86
 973              	.LVL127:
 974              	.L56:
 407:CLCD_control.c ****             {
 408:CLCD_control.c ****                 n_bar = 0xff;
 409:CLCD_control.c ****                 for (i = 0; i < DIR_MAX; i++)
 410:CLCD_control.c ****                 {
 411:CLCD_control.c ****                     if ((dir_deg >= dir_tab[i].angle_min)
 975              		.loc 1 411 0
 976 01f8 07EB4703 		add	r3, r7, r7, lsl #1
 977 01fc 5B00     		lsls	r3, r3, #1
 978 01fe 474A     		ldr	r2, .L97+28
 979 0200 1344     		add	r3, r3, r2
 980 0202 B3F95000 		ldrsh	r0, [r3, #80]
 981 0206 FFF7FEFF 		bl	__aeabi_i2d
 982              	.LVL128:
 983 020a 5A46     		mov	r2, fp
 984 020c 2346     		mov	r3, r4
 985 020e FFF7FEFF 		bl	__aeabi_dcmple
 986              	.LVL129:
 987 0212 B0B1     		cbz	r0, .L53
 412:CLCD_control.c ****                         && (dir_deg < dir_tab[i].angle_max))
 988              		.loc 1 412 0
 989 0214 07EB4702 		add	r2, r7, r7, lsl #1
 990 0218 5200     		lsls	r2, r2, #1
 991 021a 484B     		ldr	r3, .L97+60
 992 021c 1344     		add	r3, r3, r2
 993 021e B3F90200 		ldrsh	r0, [r3, #2]
 994 0222 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 127


 995              	.LVL130:
 996 0226 5A46     		mov	r2, fp
 997 0228 2346     		mov	r3, r4
 998 022a FFF7FEFF 		bl	__aeabi_dcmpgt
 999              	.LVL131:
 1000 022e 40B1     		cbz	r0, .L53
 413:CLCD_control.c ****                     {
 414:CLCD_control.c ****                         bar_position = dir_tab[i].mark_position;
 1001              		.loc 1 414 0
 1002 0230 3A4A     		ldr	r2, .L97+28
 1003 0232 7900     		lsls	r1, r7, #1
 1004 0234 CB19     		adds	r3, r1, r7
 1005 0236 5B00     		lsls	r3, r3, #1
 1006 0238 1344     		add	r3, r3, r2
 1007 023a 93F854A0 		ldrb	r10, [r3, #84]	@ zero_extendqisi2
 1008              	.LVL132:
 415:CLCD_control.c ****                         n_bar = dir_tab[i].n_mark;
 1009              		.loc 1 415 0
 1010 023e 93F85590 		ldrb	r9, [r3, #85]	@ zero_extendqisi2
 1011              	.LVL133:
 1012              	.L53:
 409:CLCD_control.c ****                 {
 1013              		.loc 1 409 0 discriminator 2
 1014 0242 0137     		adds	r7, r7, #1
 1015              	.LVL134:
 1016 0244 FFB2     		uxtb	r7, r7
 1017              	.LVL135:
 1018 0246 02E0     		b	.L51
 1019              	.LVL136:
 1020              	.L86:
 1021 0248 0027     		movs	r7, #0
 1022              	.LVL137:
 1023 024a 4FF0FF09 		mov	r9, #255
 1024              	.L51:
 1025              	.LVL138:
 409:CLCD_control.c ****                 {
 1026              		.loc 1 409 0 is_stmt 0 discriminator 1
 1027 024e 0C2F     		cmp	r7, #12
 1028 0250 D2D9     		bls	.L56
 416:CLCD_control.c ****                     }
 417:CLCD_control.c ****                 }
 418:CLCD_control.c ****                 if ((car_flag) && (n_bar < BAR_MAX))
 1029              		.loc 1 418 0 is_stmt 1
 1030 0252 9DF82A30 		ldrb	r3, [sp, #42]	@ zero_extendqisi2
 1031 0256 83B1     		cbz	r3, .L57
 1032              		.loc 1 418 0 is_stmt 0 discriminator 1
 1033 0258 B9F10C0F 		cmp	r9, #12
 1034 025c 0DD8     		bhi	.L57
 419:CLCD_control.c ****                 {
 420:CLCD_control.c ****                     I2C_CLCD_Position(0u, bar_position);
 1035              		.loc 1 420 0 is_stmt 1
 1036 025e 0020     		movs	r0, #0
 1037 0260 5146     		mov	r1, r10
 1038 0262 FFF7FEFF 		bl	I2C_CLCD_Position
 1039              	.LVL139:
 421:CLCD_control.c ****                     sprintf(str, "%s", bar[n_bar]);
 1040              		.loc 1 421 0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 128


 1041 0266 0BA8     		add	r0, sp, #44
 1042 0268 3549     		ldr	r1, .L97+64
 1043 026a 01EB0911 		add	r1, r1, r9, lsl #4
 1044 026e FFF7FEFF 		bl	strcpy
 1045              	.LVL140:
 422:CLCD_control.c ****                     I2C_CLCD_PrintString(str);
 1046              		.loc 1 422 0
 1047 0272 0BA8     		add	r0, sp, #44
 1048 0274 FFF7FEFF 		bl	I2C_CLCD_PrintString
 1049              	.LVL141:
 1050 0278 06E0     		b	.L58
 1051              	.L57:
 423:CLCD_control.c ****                 }
 424:CLCD_control.c ****                 else
 425:CLCD_control.c ****                 {
 426:CLCD_control.c ****                     I2C_CLCD_Position(0u, 0u);
 1052              		.loc 1 426 0
 1053 027a 0020     		movs	r0, #0
 1054 027c 0146     		mov	r1, r0
 1055 027e FFF7FEFF 		bl	I2C_CLCD_Position
 1056              	.LVL142:
 427:CLCD_control.c ****                     I2C_CLCD_PrintString("   |      |      |  ");
 1057              		.loc 1 427 0
 1058 0282 3048     		ldr	r0, .L97+68
 1059 0284 FFF7FEFF 		bl	I2C_CLCD_PrintString
 1060              	.LVL143:
 1061              	.L58:
 428:CLCD_control.c ****                 }
 429:CLCD_control.c ****                 
 430:CLCD_control.c ****                 /* Distance to the target */
 431:CLCD_control.c ****                 I2C_CLCD_Position(1u, 10u);
 1062              		.loc 1 431 0
 1063 0288 0120     		movs	r0, #1
 1064 028a 0A21     		movs	r1, #10
 1065 028c FFF7FEFF 		bl	I2C_CLCD_Position
 1066              	.LVL144:
 432:CLCD_control.c ****                 if (car_flag)
 1067              		.loc 1 432 0
 1068 0290 9DF82A30 		ldrb	r3, [sp, #42]	@ zero_extendqisi2
 1069 0294 002B     		cmp	r3, #0
 1070 0296 59D0     		beq	.L59
 433:CLCD_control.c ****                 {
 434:CLCD_control.c ****                     //(2017.01.18) moved PGA position after the MIX
 435:CLCD_control.c ****                     //rms_pga = rms_mixed / pga_gain[gain].magnification;
 436:CLCD_control.c ****                     //(2017.06.09) added RF BIAS control
 437:CLCD_control.c ****                     rms_pga = (rms_mixed * pga_gain[gain].rec_rf_gain) / pga_gain[gain].magnificati
 1071              		.loc 1 437 0
 1072 0298 1F4B     		ldr	r3, .L97+24
 1073 029a B3F90270 		ldrsh	r7, [r3, #2]
 1074              	.LVL145:
 1075 029e DFF87C80 		ldr	r8, .L97+28
 1076 02a2 4FEA4709 		lsl	r9, r7, #1
 1077              	.LVL146:
 1078 02a6 09EB0703 		add	r3, r9, r7
 1079 02aa 5B00     		lsls	r3, r3, #1
 1080 02ac 4344     		add	r3, r3, r8
 1081 02ae 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 129


 1082 02b0 FFF7FEFF 		bl	__aeabi_i2f
 1083              	.LVL147:
 1084 02b4 2946     		mov	r1, r5
 1085 02b6 FFF7FEFF 		bl	__aeabi_fmul
 1086              	.LVL148:
 1087 02ba 0390     		str	r0, [sp, #12]	@ float
 1088 02bc 4F44     		add	r7, r7, r9
 1089 02be 7F00     		lsls	r7, r7, #1
 1090 02c0 4744     		add	r7, r7, r8
 1091 02c2 7878     		ldrb	r0, [r7, #1]	@ zero_extendqisi2
 1092 02c4 FFF7FEFF 		bl	__aeabi_i2f
 1093              	.LVL149:
 1094 02c8 0146     		mov	r1, r0
 1095 02ca 0398     		ldr	r0, [sp, #12]	@ float
 1096 02cc FFF7FEFF 		bl	__aeabi_fdiv
 1097              	.LVL150:
 1098 02d0 FFF7FEFF 		bl	__aeabi_f2d
 1099              	.LVL151:
 438:CLCD_control.c ****                     distance = (FOP / pow(rms_pga, PORMS));
 1100              		.loc 1 438 0
 1101 02d4 0CA3     		adr	r3, .L97+8
 1102 02d6 D3E90023 		ldrd	r2, [r3]
 1103 02da FFF7FEFF 		bl	pow
 1104              	.LVL152:
 1105 02de 0246     		mov	r2, r0
 1106 02e0 0B46     		mov	r3, r1
 1107 02e2 0BA1     		adr	r1, .L97+16
 1108 02e4 D1E90001 		ldrd	r0, [r1]
 1109 02e8 FFF7FEFF 		bl	__aeabi_ddiv
 1110              	.LVL153:
 1111 02ec 0246     		mov	r2, r0
 1112 02ee 0B46     		mov	r3, r1
 1113              	.LVL154:
 439:CLCD_control.c ****                     
 440:CLCD_control.c ****                     sprintf(str, "%+3.1f", distance);
 1114              		.loc 1 440 0
 1115 02f0 0BA8     		add	r0, sp, #44
 1116 02f2 1549     		ldr	r1, .L97+72
 1117 02f4 FFF7FEFF 		bl	sprintf
 1118              	.LVL155:
 1119 02f8 2EE0     		b	.L60
 1120              	.L98:
 1121 02fa 00BFAFF3 		.align	3
 1121      0080
 1122              	.L97:
 1123 0300 6E861BF0 		.word	-266631570
 1124 0304 F9210940 		.word	1074340345
 1125 0308 04560E2D 		.word	755914244
 1126 030c B29DD73F 		.word	1071095218
 1127 0310 295C8FC2 		.word	-1030792151
 1128 0314 F5E83040 		.word	1076947189
 1129 0318 00000000 		.word	.LANCHOR0
 1130 031c 00000000 		.word	.LANCHOR1
 1131 0320 00000000 		.word	xQueue_KEY
 1132 0324 00000000 		.word	xQueue_RXD
 1133 0328 00000000 		.word	xMutex_RX_BUF
 1134 032c 00000000 		.word	ANT1_buf_f32
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 130


 1135 0330 00000000 		.word	ANT2_buf_f32
 1136 0334 00000000 		.word	dst_buf_f32
 1137 0338 00806640 		.word	1080459264
 1138 033c 50000000 		.word	.LANCHOR1+80
 1139 0340 A0000000 		.word	.LANCHOR1+160
 1140 0344 78000000 		.word	.LC5
 1141 0348 BC010000 		.word	.LC21
 1142              	.LVL156:
 1143              	.L59:
 441:CLCD_control.c ****                 }
 442:CLCD_control.c ****                 else
 443:CLCD_control.c ****                     sprintf(str, "lost   ");
 1144              		.loc 1 443 0
 1145 034c 0BAB     		add	r3, sp, #44
 1146 034e A84A     		ldr	r2, .L99
 1147 0350 92E80300 		ldmia	r2, {r0, r1}
 1148 0354 83E80300 		stmia	r3, {r0, r1}
 1149              	.LVL157:
 1150              	.L60:
 444:CLCD_control.c ****                 I2C_CLCD_PrintString(str);
 1151              		.loc 1 444 0
 1152 0358 0BA8     		add	r0, sp, #44
 1153 035a FFF7FEFF 		bl	I2C_CLCD_PrintString
 1154              	.LVL158:
 445:CLCD_control.c **** 
 446:CLCD_control.c ****                 /* ANT1 + ANT2 rms */
 447:CLCD_control.c ****                 I2C_CLCD_Position(2u, 6u);
 1155              		.loc 1 447 0
 1156 035e 0220     		movs	r0, #2
 1157 0360 0621     		movs	r1, #6
 1158 0362 FFF7FEFF 		bl	I2C_CLCD_Position
 1159              	.LVL159:
 448:CLCD_control.c ****                 sprintf(str, "%6.1f", rms_mixed);
 1160              		.loc 1 448 0
 1161 0366 2846     		mov	r0, r5
 1162 0368 FFF7FEFF 		bl	__aeabi_f2d
 1163              	.LVL160:
 1164 036c 0246     		mov	r2, r0
 1165 036e 0B46     		mov	r3, r1
 1166 0370 0BA8     		add	r0, sp, #44
 1167 0372 A049     		ldr	r1, .L99+4
 1168 0374 FFF7FEFF 		bl	sprintf
 1169              	.LVL161:
 449:CLCD_control.c ****                 I2C_CLCD_PrintString(str);
 1170              		.loc 1 449 0
 1171 0378 0BA8     		add	r0, sp, #44
 1172 037a FFF7FEFF 		bl	I2C_CLCD_PrintString
 1173              	.LVL162:
 450:CLCD_control.c **** 
 451:CLCD_control.c ****                 /* PGA Gain */
 452:CLCD_control.c ****                 CLCD_set_PGA_gain();
 1174              		.loc 1 452 0
 1175 037e FFF7FEFF 		bl	CLCD_set_PGA_gain
 1176              	.LVL163:
 453:CLCD_control.c ****             }
 454:CLCD_control.c ****             else if (mode == SIGNAL)
 455:CLCD_control.c ****             {
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 131


 456:CLCD_control.c ****                 /* ANT1, ANT2 level */
 457:CLCD_control.c ****                 I2C_CLCD_Position(0u, 6u);
 458:CLCD_control.c ****                 sprintf(str, "%6.1f", rms[0]);
 459:CLCD_control.c ****                 I2C_CLCD_PrintString(str);
 460:CLCD_control.c ****                 I2C_CLCD_Position(1u, 6u);
 461:CLCD_control.c ****                 sprintf(str, "%6.1f", rms[1]);
 462:CLCD_control.c ****                 I2C_CLCD_PrintString(str);
 463:CLCD_control.c ****                 /* PGA Gain */
 464:CLCD_control.c ****                 CLCD_set_PGA_gain();
 465:CLCD_control.c **** 
 466:CLCD_control.c ****                 /* ANT1 - ANT2 phase */
 467:CLCD_control.c ****                 I2C_CLCD_Position(3u, 8u);
 468:CLCD_control.c ****                 if (car_flag)
 469:CLCD_control.c ****                     sprintf(str, "%+3.1f", phi_deg);
 470:CLCD_control.c ****                 else
 471:CLCD_control.c ****                     sprintf(str, "lost   ");
 472:CLCD_control.c ****                 I2C_CLCD_PrintString(str);
 473:CLCD_control.c ****             }
 474:CLCD_control.c ****             else if (mode == DIRECTION)
 475:CLCD_control.c ****             {
 476:CLCD_control.c ****                 n_bar = 0xff;
 477:CLCD_control.c ****                 for (i = 0; i < DIR_MAX; i++)
 478:CLCD_control.c ****                 {
 479:CLCD_control.c ****                     if ((dir_deg >= dir_tab[i].angle_min)
 480:CLCD_control.c ****                         && (dir_deg < dir_tab[i].angle_max))
 481:CLCD_control.c ****                     {
 482:CLCD_control.c ****                         bar_position = dir_tab[i].mark_position;
 483:CLCD_control.c ****                         n_bar = dir_tab[i].n_mark;
 484:CLCD_control.c ****                     }
 485:CLCD_control.c ****                 }
 486:CLCD_control.c ****                 if ((car_flag) && (n_bar < BAR_MAX))
 487:CLCD_control.c ****                 {
 488:CLCD_control.c ****                     I2C_CLCD_Position(0u, bar_position);
 489:CLCD_control.c ****                     sprintf(str, "%s", bar[n_bar]);
 490:CLCD_control.c ****                     I2C_CLCD_PrintString(str);
 491:CLCD_control.c ****                 }
 492:CLCD_control.c ****                 else
 493:CLCD_control.c ****                 {
 494:CLCD_control.c ****                     I2C_CLCD_Position(0u, 0u);
 495:CLCD_control.c ****                     I2C_CLCD_PrintString("   |      |      |  ");
 496:CLCD_control.c ****                 }
 497:CLCD_control.c ****                 
 498:CLCD_control.c ****                 /* Direction to the target */
 499:CLCD_control.c ****                 I2C_CLCD_Position(1u, 7u);
 500:CLCD_control.c ****                 if (car_flag)
 501:CLCD_control.c ****                     sprintf(str, "%+3.1f", dir_deg);
 502:CLCD_control.c ****                 else
 503:CLCD_control.c ****                     sprintf(str, "lost   ");
 504:CLCD_control.c ****                 I2C_CLCD_PrintString(str);
 505:CLCD_control.c ****                 
 506:CLCD_control.c ****                 /* ANT1 + ANT2 rms */
 507:CLCD_control.c ****                 I2C_CLCD_Position(2u, 6u);
 508:CLCD_control.c ****                 sprintf(str, "%6.1f", rms_mixed);
 509:CLCD_control.c ****                 I2C_CLCD_PrintString(str);
 510:CLCD_control.c **** 
 511:CLCD_control.c ****                 /* PGA Gain */
 512:CLCD_control.c ****                 CLCD_set_PGA_gain();
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 132


 513:CLCD_control.c ****             }
 514:CLCD_control.c **** 
 515:CLCD_control.c ****             update_level_flag = 0;
 1177              		.loc 1 515 0
 1178 0382 0027     		movs	r7, #0
 1179 0384 B3E0     		b	.L50
 1180              	.LVL164:
 1181              	.L95:
 454:CLCD_control.c ****             {
 1182              		.loc 1 454 0
 1183 0386 022B     		cmp	r3, #2
 1184 0388 3BD1     		bne	.L61
 457:CLCD_control.c ****                 sprintf(str, "%6.1f", rms[0]);
 1185              		.loc 1 457 0
 1186 038a 0020     		movs	r0, #0
 1187 038c 0621     		movs	r1, #6
 1188 038e FFF7FEFF 		bl	I2C_CLCD_Position
 1189              	.LVL165:
 458:CLCD_control.c ****                 I2C_CLCD_PrintString(str);
 1190              		.loc 1 458 0
 1191 0392 984F     		ldr	r7, .L99+4
 1192              	.LVL166:
 1193 0394 0698     		ldr	r0, [sp, #24]	@ float
 1194 0396 FFF7FEFF 		bl	__aeabi_f2d
 1195              	.LVL167:
 1196 039a 0246     		mov	r2, r0
 1197 039c 0B46     		mov	r3, r1
 1198 039e 0BA8     		add	r0, sp, #44
 1199 03a0 3946     		mov	r1, r7
 1200 03a2 FFF7FEFF 		bl	sprintf
 1201              	.LVL168:
 459:CLCD_control.c ****                 I2C_CLCD_Position(1u, 6u);
 1202              		.loc 1 459 0
 1203 03a6 0BA8     		add	r0, sp, #44
 1204 03a8 FFF7FEFF 		bl	I2C_CLCD_PrintString
 1205              	.LVL169:
 460:CLCD_control.c ****                 sprintf(str, "%6.1f", rms[1]);
 1206              		.loc 1 460 0
 1207 03ac 0120     		movs	r0, #1
 1208 03ae 0621     		movs	r1, #6
 1209 03b0 FFF7FEFF 		bl	I2C_CLCD_Position
 1210              	.LVL170:
 461:CLCD_control.c ****                 I2C_CLCD_PrintString(str);
 1211              		.loc 1 461 0
 1212 03b4 0798     		ldr	r0, [sp, #28]	@ float
 1213 03b6 FFF7FEFF 		bl	__aeabi_f2d
 1214              	.LVL171:
 1215 03ba 0246     		mov	r2, r0
 1216 03bc 0B46     		mov	r3, r1
 1217 03be 0BA8     		add	r0, sp, #44
 1218 03c0 3946     		mov	r1, r7
 1219 03c2 FFF7FEFF 		bl	sprintf
 1220              	.LVL172:
 462:CLCD_control.c ****                 /* PGA Gain */
 1221              		.loc 1 462 0
 1222 03c6 0BA8     		add	r0, sp, #44
 1223 03c8 FFF7FEFF 		bl	I2C_CLCD_PrintString
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 133


 1224              	.LVL173:
 464:CLCD_control.c **** 
 1225              		.loc 1 464 0
 1226 03cc FFF7FEFF 		bl	CLCD_set_PGA_gain
 1227              	.LVL174:
 467:CLCD_control.c ****                 if (car_flag)
 1228              		.loc 1 467 0
 1229 03d0 0320     		movs	r0, #3
 1230 03d2 0821     		movs	r1, #8
 1231 03d4 FFF7FEFF 		bl	I2C_CLCD_Position
 1232              	.LVL175:
 468:CLCD_control.c ****                     sprintf(str, "%+3.1f", phi_deg);
 1233              		.loc 1 468 0
 1234 03d8 9DF82A30 		ldrb	r3, [sp, #42]	@ zero_extendqisi2
 1235 03dc 33B1     		cbz	r3, .L62
 469:CLCD_control.c ****                 else
 1236              		.loc 1 469 0
 1237 03de 0BA8     		add	r0, sp, #44
 1238 03e0 8549     		ldr	r1, .L99+8
 1239 03e2 DDE90023 		ldrd	r2, [sp]
 1240 03e6 FFF7FEFF 		bl	sprintf
 1241              	.LVL176:
 1242 03ea 05E0     		b	.L63
 1243              	.L62:
 471:CLCD_control.c ****                 I2C_CLCD_PrintString(str);
 1244              		.loc 1 471 0
 1245 03ec 0BAB     		add	r3, sp, #44
 1246 03ee 804A     		ldr	r2, .L99
 1247 03f0 92E80300 		ldmia	r2, {r0, r1}
 1248 03f4 83E80300 		stmia	r3, {r0, r1}
 1249              	.L63:
 472:CLCD_control.c ****             }
 1250              		.loc 1 472 0
 1251 03f8 0BA8     		add	r0, sp, #44
 1252 03fa FFF7FEFF 		bl	I2C_CLCD_PrintString
 1253              	.LVL177:
 1254              		.loc 1 515 0
 1255 03fe 0027     		movs	r7, #0
 1256 0400 75E0     		b	.L50
 1257              	.LVL178:
 1258              	.L61:
 474:CLCD_control.c ****             {
 1259              		.loc 1 474 0
 1260 0402 032B     		cmp	r3, #3
 1261 0404 29D0     		beq	.L87
 1262              		.loc 1 515 0
 1263 0406 0027     		movs	r7, #0
 1264              	.LVL179:
 1265 0408 71E0     		b	.L50
 1266              	.LVL180:
 1267              	.L68:
 479:CLCD_control.c ****                         && (dir_deg < dir_tab[i].angle_max))
 1268              		.loc 1 479 0
 1269 040a 07EB4703 		add	r3, r7, r7, lsl #1
 1270 040e 5B00     		lsls	r3, r3, #1
 1271 0410 7A4A     		ldr	r2, .L99+12
 1272 0412 1344     		add	r3, r3, r2
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 134


 1273 0414 B3F95000 		ldrsh	r0, [r3, #80]
 1274 0418 FFF7FEFF 		bl	__aeabi_i2d
 1275              	.LVL181:
 1276 041c 5A46     		mov	r2, fp
 1277 041e 2346     		mov	r3, r4
 1278 0420 FFF7FEFF 		bl	__aeabi_dcmple
 1279              	.LVL182:
 1280 0424 B0B1     		cbz	r0, .L65
 480:CLCD_control.c ****                     {
 1281              		.loc 1 480 0
 1282 0426 07EB4702 		add	r2, r7, r7, lsl #1
 1283 042a 5200     		lsls	r2, r2, #1
 1284 042c 744B     		ldr	r3, .L99+16
 1285 042e 1344     		add	r3, r3, r2
 1286 0430 B3F90200 		ldrsh	r0, [r3, #2]
 1287 0434 FFF7FEFF 		bl	__aeabi_i2d
 1288              	.LVL183:
 1289 0438 5A46     		mov	r2, fp
 1290 043a 2346     		mov	r3, r4
 1291 043c FFF7FEFF 		bl	__aeabi_dcmpgt
 1292              	.LVL184:
 1293 0440 40B1     		cbz	r0, .L65
 482:CLCD_control.c ****                         n_bar = dir_tab[i].n_mark;
 1294              		.loc 1 482 0
 1295 0442 6E4A     		ldr	r2, .L99+12
 1296 0444 7900     		lsls	r1, r7, #1
 1297 0446 CB19     		adds	r3, r1, r7
 1298 0448 5B00     		lsls	r3, r3, #1
 1299 044a 1344     		add	r3, r3, r2
 1300 044c 93F854A0 		ldrb	r10, [r3, #84]	@ zero_extendqisi2
 1301              	.LVL185:
 483:CLCD_control.c ****                     }
 1302              		.loc 1 483 0
 1303 0450 93F85590 		ldrb	r9, [r3, #85]	@ zero_extendqisi2
 1304              	.LVL186:
 1305              	.L65:
 477:CLCD_control.c ****                 {
 1306              		.loc 1 477 0 discriminator 2
 1307 0454 0137     		adds	r7, r7, #1
 1308              	.LVL187:
 1309 0456 FFB2     		uxtb	r7, r7
 1310              	.LVL188:
 1311 0458 02E0     		b	.L64
 1312              	.LVL189:
 1313              	.L87:
 1314 045a 0027     		movs	r7, #0
 1315              	.LVL190:
 1316 045c 4FF0FF09 		mov	r9, #255
 1317              	.L64:
 1318              	.LVL191:
 477:CLCD_control.c ****                 {
 1319              		.loc 1 477 0 is_stmt 0 discriminator 1
 1320 0460 0C2F     		cmp	r7, #12
 1321 0462 D2D9     		bls	.L68
 486:CLCD_control.c ****                 {
 1322              		.loc 1 486 0 is_stmt 1
 1323 0464 9DF82A30 		ldrb	r3, [sp, #42]	@ zero_extendqisi2
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 135


 1324 0468 83B1     		cbz	r3, .L69
 486:CLCD_control.c ****                 {
 1325              		.loc 1 486 0 is_stmt 0 discriminator 1
 1326 046a B9F10C0F 		cmp	r9, #12
 1327 046e 0DD8     		bhi	.L69
 488:CLCD_control.c ****                     sprintf(str, "%s", bar[n_bar]);
 1328              		.loc 1 488 0 is_stmt 1
 1329 0470 0020     		movs	r0, #0
 1330 0472 5146     		mov	r1, r10
 1331 0474 FFF7FEFF 		bl	I2C_CLCD_Position
 1332              	.LVL192:
 489:CLCD_control.c ****                     I2C_CLCD_PrintString(str);
 1333              		.loc 1 489 0
 1334 0478 0BA8     		add	r0, sp, #44
 1335 047a 6249     		ldr	r1, .L99+20
 1336 047c 01EB0911 		add	r1, r1, r9, lsl #4
 1337 0480 FFF7FEFF 		bl	strcpy
 1338              	.LVL193:
 490:CLCD_control.c ****                 }
 1339              		.loc 1 490 0
 1340 0484 0BA8     		add	r0, sp, #44
 1341 0486 FFF7FEFF 		bl	I2C_CLCD_PrintString
 1342              	.LVL194:
 1343 048a 06E0     		b	.L70
 1344              	.L69:
 494:CLCD_control.c ****                     I2C_CLCD_PrintString("   |      |      |  ");
 1345              		.loc 1 494 0
 1346 048c 0020     		movs	r0, #0
 1347 048e 0146     		mov	r1, r0
 1348 0490 FFF7FEFF 		bl	I2C_CLCD_Position
 1349              	.LVL195:
 495:CLCD_control.c ****                 }
 1350              		.loc 1 495 0
 1351 0494 5C48     		ldr	r0, .L99+24
 1352 0496 FFF7FEFF 		bl	I2C_CLCD_PrintString
 1353              	.LVL196:
 1354              	.L70:
 499:CLCD_control.c ****                 if (car_flag)
 1355              		.loc 1 499 0
 1356 049a 0120     		movs	r0, #1
 1357 049c 0721     		movs	r1, #7
 1358 049e FFF7FEFF 		bl	I2C_CLCD_Position
 1359              	.LVL197:
 500:CLCD_control.c ****                     sprintf(str, "%+3.1f", dir_deg);
 1360              		.loc 1 500 0
 1361 04a2 9DF82A30 		ldrb	r3, [sp, #42]	@ zero_extendqisi2
 1362 04a6 33B1     		cbz	r3, .L71
 501:CLCD_control.c ****                 else
 1363              		.loc 1 501 0
 1364 04a8 0BA8     		add	r0, sp, #44
 1365 04aa 5349     		ldr	r1, .L99+8
 1366 04ac 5A46     		mov	r2, fp
 1367 04ae 2346     		mov	r3, r4
 1368 04b0 FFF7FEFF 		bl	sprintf
 1369              	.LVL198:
 1370 04b4 05E0     		b	.L72
 1371              	.L71:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 136


 503:CLCD_control.c ****                 I2C_CLCD_PrintString(str);
 1372              		.loc 1 503 0
 1373 04b6 0BAB     		add	r3, sp, #44
 1374 04b8 4D4A     		ldr	r2, .L99
 1375 04ba 92E80300 		ldmia	r2, {r0, r1}
 1376 04be 83E80300 		stmia	r3, {r0, r1}
 1377              	.L72:
 504:CLCD_control.c ****                 
 1378              		.loc 1 504 0
 1379 04c2 0BA8     		add	r0, sp, #44
 1380 04c4 FFF7FEFF 		bl	I2C_CLCD_PrintString
 1381              	.LVL199:
 507:CLCD_control.c ****                 sprintf(str, "%6.1f", rms_mixed);
 1382              		.loc 1 507 0
 1383 04c8 0220     		movs	r0, #2
 1384 04ca 0621     		movs	r1, #6
 1385 04cc FFF7FEFF 		bl	I2C_CLCD_Position
 1386              	.LVL200:
 508:CLCD_control.c ****                 I2C_CLCD_PrintString(str);
 1387              		.loc 1 508 0
 1388 04d0 2846     		mov	r0, r5
 1389 04d2 FFF7FEFF 		bl	__aeabi_f2d
 1390              	.LVL201:
 1391 04d6 0246     		mov	r2, r0
 1392 04d8 0B46     		mov	r3, r1
 1393 04da 0BA8     		add	r0, sp, #44
 1394 04dc 4549     		ldr	r1, .L99+4
 1395 04de FFF7FEFF 		bl	sprintf
 1396              	.LVL202:
 509:CLCD_control.c **** 
 1397              		.loc 1 509 0
 1398 04e2 0BA8     		add	r0, sp, #44
 1399 04e4 FFF7FEFF 		bl	I2C_CLCD_PrintString
 1400              	.LVL203:
 512:CLCD_control.c ****             }
 1401              		.loc 1 512 0
 1402 04e8 FFF7FEFF 		bl	CLCD_set_PGA_gain
 1403              	.LVL204:
 1404              		.loc 1 515 0
 1405 04ec 0027     		movs	r7, #0
 1406              	.LVL205:
 1407              	.L50:
 516:CLCD_control.c ****         }
 517:CLCD_control.c **** 
 518:CLCD_control.c ****         /* Get click count of ROT */
 519:CLCD_control.c ****         if (uxQueueMessagesWaiting(xQueue_ROT) > 0)
 1408              		.loc 1 519 0
 1409 04ee 474B     		ldr	r3, .L99+28
 1410 04f0 1868     		ldr	r0, [r3]
 1411 04f2 FFF7FEFF 		bl	uxQueueMessagesWaiting
 1412              	.LVL206:
 1413 04f6 0028     		cmp	r0, #0
 1414 04f8 00F0CF80 		beq	.L73
 520:CLCD_control.c ****         {
 521:CLCD_control.c ****             xQueueReceive(xQueue_ROT, &click, 0);
 1415              		.loc 1 521 0
 1416 04fc 434B     		ldr	r3, .L99+28
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 137


 1417 04fe 1868     		ldr	r0, [r3]
 1418 0500 0DF11701 		add	r1, sp, #23
 1419 0504 0022     		movs	r2, #0
 1420 0506 1346     		mov	r3, r2
 1421 0508 FFF7FEFF 		bl	xQueueGenericReceive
 1422              	.LVL207:
 522:CLCD_control.c ****             if ((mode == SIGNAL) || (mode == DIRECTION) || (mode == DISTANCE))
 1423              		.loc 1 522 0
 1424 050c 404B     		ldr	r3, .L99+32
 1425 050e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1426 0510 531E     		subs	r3, r2, #1
 1427 0512 DBB2     		uxtb	r3, r3
 1428 0514 022B     		cmp	r3, #2
 1429 0516 2ED8     		bhi	.L74
 523:CLCD_control.c ****             {
 524:CLCD_control.c ****                 /* the target PGA gain */
 525:CLCD_control.c ****                 gain += click ;
 1430              		.loc 1 525 0
 1431 0518 9DF91710 		ldrsb	r1, [sp, #23]
 1432 051c 3C4A     		ldr	r2, .L99+32
 1433 051e 5388     		ldrh	r3, [r2, #2]
 1434 0520 0B44     		add	r3, r3, r1
 1435 0522 9BB2     		uxth	r3, r3
 1436 0524 5380     		strh	r3, [r2, #2]	@ movhi
 526:CLCD_control.c ****                 if (gain < 0)
 1437              		.loc 1 526 0
 1438 0526 13F4004F 		tst	r3, #32768
 1439 052a 02D0     		beq	.L75
 527:CLCD_control.c ****                     gain = 0;
 1440              		.loc 1 527 0
 1441 052c 0022     		movs	r2, #0
 1442 052e 384B     		ldr	r3, .L99+32
 1443 0530 5A80     		strh	r2, [r3, #2]	@ movhi
 1444              	.L75:
 528:CLCD_control.c ****                 if ((uint16)gain > (GAIN_MAX - 1))
 1445              		.loc 1 528 0
 1446 0532 374B     		ldr	r3, .L99+32
 1447 0534 5B88     		ldrh	r3, [r3, #2]
 1448 0536 0C2B     		cmp	r3, #12
 1449 0538 02D9     		bls	.L76
 529:CLCD_control.c ****                     gain = GAIN_MAX - 1;
 1450              		.loc 1 529 0
 1451 053a 0C22     		movs	r2, #12
 1452 053c 344B     		ldr	r3, .L99+32
 1453 053e 5A80     		strh	r2, [r3, #2]	@ movhi
 1454              	.L76:
 530:CLCD_control.c ****                 /*set PGA gain*/
 531:CLCD_control.c ****                 PGA_1_SetGain(pga_gain[gain].pga_gain);
 1455              		.loc 1 531 0
 1456 0540 DFF8B880 		ldr	r8, .L99+12
 1457 0544 DFF8C890 		ldr	r9, .L99+32
 1458 0548 B9F90230 		ldrsh	r3, [r9, #2]
 1459 054c 03EB4303 		add	r3, r3, r3, lsl #1
 1460 0550 5B00     		lsls	r3, r3, #1
 1461 0552 18F80300 		ldrb	r0, [r8, r3]	@ zero_extendqisi2
 1462 0556 FFF7FEFF 		bl	PGA_1_SetGain
 1463              	.LVL208:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 138


 532:CLCD_control.c ****                 PGA_2_SetGain(pga_gain[gain].pga_gain);
 1464              		.loc 1 532 0
 1465 055a B9F90230 		ldrsh	r3, [r9, #2]
 1466 055e 03EB4303 		add	r3, r3, r3, lsl #1
 1467 0562 5B00     		lsls	r3, r3, #1
 1468 0564 18F80300 		ldrb	r0, [r8, r3]	@ zero_extendqisi2
 1469 0568 FFF7FEFF 		bl	PGA_2_SetGain
 1470              	.LVL209:
 533:CLCD_control.c ****                 // update Vth and Vbias
 534:CLCD_control.c ****                 set_Vth_Vbias();
 1471              		.loc 1 534 0
 1472 056c FFF7FEFF 		bl	set_Vth_Vbias
 1473              	.LVL210:
 535:CLCD_control.c **** 
 536:CLCD_control.c ****                 /* PGA Gain */
 537:CLCD_control.c ****                 CLCD_set_PGA_gain();
 1474              		.loc 1 537 0
 1475 0570 FFF7FEFF 		bl	CLCD_set_PGA_gain
 1476              	.LVL211:
 1477 0574 91E0     		b	.L73
 1478              	.L74:
 538:CLCD_control.c ****             }
 539:CLCD_control.c ****             else if (mode == THRESHOLD)
 1479              		.loc 1 539 0
 1480 0576 042A     		cmp	r2, #4
 1481 0578 50D1     		bne	.L77
 540:CLCD_control.c ****             {
 541:CLCD_control.c ****                 Adj_Vth += click;
 1482              		.loc 1 541 0
 1483 057a DFF89C80 		ldr	r8, .L99+40
 1484 057e 9DF91720 		ldrsb	r2, [sp, #23]
 1485 0582 B8F80030 		ldrh	r3, [r8]
 1486 0586 1344     		add	r3, r3, r2
 1487 0588 A8F80030 		strh	r3, [r8]	@ movhi
 542:CLCD_control.c ****                 set_Vth_Vbias();
 1488              		.loc 1 542 0
 1489 058c FFF7FEFF 		bl	set_Vth_Vbias
 1490              	.LVL212:
 543:CLCD_control.c ****                 // set CLCD
 544:CLCD_control.c ****                 I2C_CLCD_Position(1u, 12u);
 1491              		.loc 1 544 0
 1492 0590 0120     		movs	r0, #1
 1493 0592 0C21     		movs	r1, #12
 1494 0594 FFF7FEFF 		bl	I2C_CLCD_Position
 1495              	.LVL213:
 545:CLCD_control.c ****                 sprintf(str, "%3d", pga_gain[gain].threshold);
 1496              		.loc 1 545 0
 1497 0598 DFF87490 		ldr	r9, .L99+32
 1498 059c B9F90230 		ldrsh	r3, [r9, #2]
 1499 05a0 03EB4303 		add	r3, r3, r3, lsl #1
 1500 05a4 5B00     		lsls	r3, r3, #1
 1501 05a6 154A     		ldr	r2, .L99+12
 1502 05a8 1344     		add	r3, r3, r2
 1503 05aa 0BA8     		add	r0, sp, #44
 1504 05ac 1949     		ldr	r1, .L99+36
 1505 05ae DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 1506 05b0 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 139


 1507              	.LVL214:
 546:CLCD_control.c ****                 I2C_CLCD_PrintString(str);
 1508              		.loc 1 546 0
 1509 05b4 0BA8     		add	r0, sp, #44
 1510 05b6 FFF7FEFF 		bl	I2C_CLCD_PrintString
 1511              	.LVL215:
 547:CLCD_control.c ****                 I2C_CLCD_Position(2u, 12u);
 1512              		.loc 1 547 0
 1513 05ba 0220     		movs	r0, #2
 1514 05bc 0C21     		movs	r1, #12
 1515 05be FFF7FEFF 		bl	I2C_CLCD_Position
 1516              	.LVL216:
 548:CLCD_control.c ****                 sprintf(str, "%3d", Adj_Vth);
 1517              		.loc 1 548 0
 1518 05c2 0BA8     		add	r0, sp, #44
 1519 05c4 1349     		ldr	r1, .L99+36
 1520 05c6 B8F90020 		ldrsh	r2, [r8]
 1521 05ca FFF7FEFF 		bl	sprintf
 1522              	.LVL217:
 549:CLCD_control.c ****                 I2C_CLCD_PrintString(str);
 1523              		.loc 1 549 0
 1524 05ce 0BA8     		add	r0, sp, #44
 1525 05d0 FFF7FEFF 		bl	I2C_CLCD_PrintString
 1526              	.LVL218:
 550:CLCD_control.c ****                 I2C_CLCD_Position(3u, 12u);
 1527              		.loc 1 550 0
 1528 05d4 0320     		movs	r0, #3
 1529 05d6 0C21     		movs	r1, #12
 1530 05d8 FFF7FEFF 		bl	I2C_CLCD_Position
 1531              	.LVL219:
 551:CLCD_control.c ****                 sprintf(str, "%3d", Vth);
 1532              		.loc 1 551 0
 1533 05dc 0BA8     		add	r0, sp, #44
 1534 05de 0D49     		ldr	r1, .L99+36
 1535 05e0 B9F80420 		ldrh	r2, [r9, #4]
 1536 05e4 FFF7FEFF 		bl	sprintf
 1537              	.LVL220:
 552:CLCD_control.c ****                 I2C_CLCD_PrintString(str);
 1538              		.loc 1 552 0
 1539 05e8 0BA8     		add	r0, sp, #44
 1540 05ea FFF7FEFF 		bl	I2C_CLCD_PrintString
 1541              	.LVL221:
 1542 05ee 54E0     		b	.L73
 1543              	.L100:
 1544              		.align	2
 1545              	.L99:
 1546 05f0 C4010000 		.word	.LC22
 1547 05f4 CC010000 		.word	.LC23
 1548 05f8 BC010000 		.word	.LC21
 1549 05fc 00000000 		.word	.LANCHOR1
 1550 0600 50000000 		.word	.LANCHOR1+80
 1551 0604 A0000000 		.word	.LANCHOR1+160
 1552 0608 78000000 		.word	.LC5
 1553 060c 00000000 		.word	xQueue_ROT
 1554 0610 00000000 		.word	.LANCHOR0
 1555 0614 D4010000 		.word	.LC24
 1556 0618 00000000 		.word	.LANCHOR2
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 140


 1557              	.L77:
 553:CLCD_control.c ****             }
 554:CLCD_control.c ****             else if (mode == IF_BIAS)
 1558              		.loc 1 554 0
 1559 061c 052A     		cmp	r2, #5
 1560 061e 3CD1     		bne	.L73
 555:CLCD_control.c ****             {
 556:CLCD_control.c ****                 Adj_Vbias += (click * 10);
 1561              		.loc 1 556 0
 1562 0620 DFF82481 		ldr	r8, .L101+16
 1563 0624 9DF91730 		ldrsb	r3, [sp, #23]
 1564 0628 03EB8303 		add	r3, r3, r3, lsl #2
 1565 062c 5A00     		lsls	r2, r3, #1
 1566 062e B8F80230 		ldrh	r3, [r8, #2]
 1567 0632 1344     		add	r3, r3, r2
 1568 0634 A8F80230 		strh	r3, [r8, #2]	@ movhi
 557:CLCD_control.c ****                 set_Vth_Vbias();
 1569              		.loc 1 557 0
 1570 0638 FFF7FEFF 		bl	set_Vth_Vbias
 1571              	.LVL222:
 558:CLCD_control.c ****                 // set CLCD
 559:CLCD_control.c ****                 I2C_CLCD_Position(1u, 11u);
 1572              		.loc 1 559 0
 1573 063c 0120     		movs	r0, #1
 1574 063e 0B21     		movs	r1, #11
 1575 0640 FFF7FEFF 		bl	I2C_CLCD_Position
 1576              	.LVL223:
 560:CLCD_control.c ****                 sprintf(str, "%4d", pga_gain[gain].bias);
 1577              		.loc 1 560 0
 1578 0644 DFF8FC90 		ldr	r9, .L101+12
 1579 0648 B9F90230 		ldrsh	r3, [r9, #2]
 1580 064c 03EB4303 		add	r3, r3, r3, lsl #1
 1581 0650 5B00     		lsls	r3, r3, #1
 1582 0652 394A     		ldr	r2, .L101
 1583 0654 1344     		add	r3, r3, r2
 1584 0656 0BA8     		add	r0, sp, #44
 1585 0658 3849     		ldr	r1, .L101+4
 1586 065a 9A88     		ldrh	r2, [r3, #4]
 1587 065c FFF7FEFF 		bl	sprintf
 1588              	.LVL224:
 561:CLCD_control.c ****                 I2C_CLCD_PrintString(str);
 1589              		.loc 1 561 0
 1590 0660 0BA8     		add	r0, sp, #44
 1591 0662 FFF7FEFF 		bl	I2C_CLCD_PrintString
 1592              	.LVL225:
 562:CLCD_control.c ****                 I2C_CLCD_Position(2u, 11u);
 1593              		.loc 1 562 0
 1594 0666 0220     		movs	r0, #2
 1595 0668 0B21     		movs	r1, #11
 1596 066a FFF7FEFF 		bl	I2C_CLCD_Position
 1597              	.LVL226:
 563:CLCD_control.c ****                 sprintf(str, "%4d", Adj_Vbias);
 1598              		.loc 1 563 0
 1599 066e 0BA8     		add	r0, sp, #44
 1600 0670 3249     		ldr	r1, .L101+4
 1601 0672 B8F90220 		ldrsh	r2, [r8, #2]
 1602 0676 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 141


 1603              	.LVL227:
 564:CLCD_control.c ****                 I2C_CLCD_PrintString(str);
 1604              		.loc 1 564 0
 1605 067a 0BA8     		add	r0, sp, #44
 1606 067c FFF7FEFF 		bl	I2C_CLCD_PrintString
 1607              	.LVL228:
 565:CLCD_control.c ****                 I2C_CLCD_Position(3u, 11u);
 1608              		.loc 1 565 0
 1609 0680 0320     		movs	r0, #3
 1610 0682 0B21     		movs	r1, #11
 1611 0684 FFF7FEFF 		bl	I2C_CLCD_Position
 1612              	.LVL229:
 566:CLCD_control.c ****                 sprintf(str, "%4d", Vbias);
 1613              		.loc 1 566 0
 1614 0688 0BA8     		add	r0, sp, #44
 1615 068a 2C49     		ldr	r1, .L101+4
 1616 068c B9F80620 		ldrh	r2, [r9, #6]
 1617 0690 FFF7FEFF 		bl	sprintf
 1618              	.LVL230:
 567:CLCD_control.c ****                 I2C_CLCD_PrintString(str);
 1619              		.loc 1 567 0
 1620 0694 0BA8     		add	r0, sp, #44
 1621 0696 FFF7FEFF 		bl	I2C_CLCD_PrintString
 1622              	.LVL231:
 1623              	.L73:
 568:CLCD_control.c ****             }
 569:CLCD_control.c ****         }
 570:CLCD_control.c **** 
 571:CLCD_control.c **** #define PGA_AGC
 572:CLCD_control.c **** #ifdef PGA_AGC
 573:CLCD_control.c ****         /* PGA AGC */
 574:CLCD_control.c ****         if (update_gain_flag)
 1624              		.loc 1 574 0
 1625 069a 06BB     		cbnz	r6, .L88
 1626 069c 47E0     		b	.L79
 1627              	.LVL232:
 1628              	.L81:
 575:CLCD_control.c ****         {
 576:CLCD_control.c ****             for (i = 0; i < AGC_MAX; i++)
 577:CLCD_control.c ****             {
 578:CLCD_control.c ****                 if (((uint32)rms_mixed >= pga_agc[i].rms_mv_min)
 1629              		.loc 1 578 0
 1630 069e 2846     		mov	r0, r5
 1631 06a0 FFF7FEFF 		bl	__aeabi_f2uiz
 1632              	.LVL233:
 1633 06a4 06EB4603 		add	r3, r6, r6, lsl #1
 1634 06a8 5B00     		lsls	r3, r3, #1
 1635 06aa 2349     		ldr	r1, .L101
 1636 06ac 0B44     		add	r3, r3, r1
 1637 06ae B3F87031 		ldrh	r3, [r3, #368]
 1638 06b2 9842     		cmp	r0, r3
 1639 06b4 10D3     		bcc	.L80
 579:CLCD_control.c ****                     && ((uint32)rms_mixed < pga_agc[i].rms_mv_max))
 1640              		.loc 1 579 0
 1641 06b6 06EB4601 		add	r1, r6, r6, lsl #1
 1642 06ba 4900     		lsls	r1, r1, #1
 1643 06bc 204B     		ldr	r3, .L101+8
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 142


 1644 06be 0B44     		add	r3, r3, r1
 1645 06c0 5B88     		ldrh	r3, [r3, #2]
 1646 06c2 9842     		cmp	r0, r3
 1647 06c4 08D2     		bcs	.L80
 580:CLCD_control.c ****                 {
 581:CLCD_control.c ****                     gain += pga_agc[i].gain_ctl;
 1648              		.loc 1 581 0
 1649 06c6 0A46     		mov	r2, r1
 1650 06c8 1D4B     		ldr	r3, .L101+8
 1651 06ca 1A44     		add	r2, r2, r3
 1652 06cc 1D49     		ldr	r1, .L101+12
 1653 06ce 92F90420 		ldrsb	r2, [r2, #4]
 1654 06d2 4B88     		ldrh	r3, [r1, #2]
 1655 06d4 1344     		add	r3, r3, r2
 1656 06d6 4B80     		strh	r3, [r1, #2]	@ movhi
 1657              	.L80:
 576:CLCD_control.c ****             {
 1658              		.loc 1 576 0 discriminator 2
 1659 06d8 0136     		adds	r6, r6, #1
 1660              	.LVL234:
 1661 06da F6B2     		uxtb	r6, r6
 1662              	.LVL235:
 1663 06dc 00E0     		b	.L78
 1664              	.LVL236:
 1665              	.L88:
 1666 06de 0026     		movs	r6, #0
 1667              	.LVL237:
 1668              	.L78:
 576:CLCD_control.c ****             {
 1669              		.loc 1 576 0 is_stmt 0 discriminator 1
 1670 06e0 082E     		cmp	r6, #8
 1671 06e2 DCD9     		bls	.L81
 582:CLCD_control.c ****                 }
 583:CLCD_control.c ****             }
 584:CLCD_control.c ****             if (gain < 0)
 1672              		.loc 1 584 0 is_stmt 1
 1673 06e4 174B     		ldr	r3, .L101+12
 1674 06e6 B3F90230 		ldrsh	r3, [r3, #2]
 1675 06ea 002B     		cmp	r3, #0
 1676 06ec 02DA     		bge	.L82
 585:CLCD_control.c ****                 gain = 0;
 1677              		.loc 1 585 0
 1678 06ee 0022     		movs	r2, #0
 1679 06f0 144B     		ldr	r3, .L101+12
 1680 06f2 5A80     		strh	r2, [r3, #2]	@ movhi
 1681              	.L82:
 586:CLCD_control.c ****             if ((uint16)gain > (GAIN_MAX - 1))
 1682              		.loc 1 586 0
 1683 06f4 134B     		ldr	r3, .L101+12
 1684 06f6 5B88     		ldrh	r3, [r3, #2]
 1685 06f8 0C2B     		cmp	r3, #12
 1686 06fa 02D9     		bls	.L83
 587:CLCD_control.c ****                 gain = GAIN_MAX - 1;
 1687              		.loc 1 587 0
 1688 06fc 0C22     		movs	r2, #12
 1689 06fe 114B     		ldr	r3, .L101+12
 1690 0700 5A80     		strh	r2, [r3, #2]	@ movhi
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 143


 1691              	.L83:
 588:CLCD_control.c ****             /* set PGA gain */
 589:CLCD_control.c ****             PGA_1_SetGain(pga_gain[gain].pga_gain);
 1692              		.loc 1 589 0
 1693 0702 0D4E     		ldr	r6, .L101
 1694              	.LVL238:
 1695 0704 DFF83C80 		ldr	r8, .L101+12
 1696 0708 B8F90230 		ldrsh	r3, [r8, #2]
 1697 070c 03EB4303 		add	r3, r3, r3, lsl #1
 1698 0710 5B00     		lsls	r3, r3, #1
 1699 0712 F05C     		ldrb	r0, [r6, r3]	@ zero_extendqisi2
 1700 0714 FFF7FEFF 		bl	PGA_1_SetGain
 1701              	.LVL239:
 590:CLCD_control.c ****             PGA_2_SetGain(pga_gain[gain].pga_gain);
 1702              		.loc 1 590 0
 1703 0718 B8F90230 		ldrsh	r3, [r8, #2]
 1704 071c 03EB4303 		add	r3, r3, r3, lsl #1
 1705 0720 5B00     		lsls	r3, r3, #1
 1706 0722 F05C     		ldrb	r0, [r6, r3]	@ zero_extendqisi2
 1707 0724 FFF7FEFF 		bl	PGA_2_SetGain
 1708              	.LVL240:
 591:CLCD_control.c ****             // update Vth and Vbias
 592:CLCD_control.c ****             set_Vth_Vbias();
 1709              		.loc 1 592 0
 1710 0728 FFF7FEFF 		bl	set_Vth_Vbias
 1711              	.LVL241:
 593:CLCD_control.c **** 
 594:CLCD_control.c ****             update_gain_flag = 0;
 1712              		.loc 1 594 0
 1713 072c 0026     		movs	r6, #0
 1714              	.LVL242:
 1715              	.L79:
 595:CLCD_control.c ****         }
 596:CLCD_control.c **** #endif
 597:CLCD_control.c ****         
 598:CLCD_control.c ****         vTaskDelay(xDelay);
 1716              		.loc 1 598 0
 1717 072e 0520     		movs	r0, #5
 1718 0730 FFF7FEFF 		bl	vTaskDelay
 1719              	.LVL243:
 1720 0734 81E4     		b	.L38
 1721              	.L102:
 1722 0736 00BF     		.align	2
 1723              	.L101:
 1724 0738 00000000 		.word	.LANCHOR1
 1725 073c D8010000 		.word	.LC25
 1726 0740 70010000 		.word	.LANCHOR1+368
 1727 0744 00000000 		.word	.LANCHOR0
 1728 0748 00000000 		.word	.LANCHOR2
 1729              		.cfi_endproc
 1730              	.LFE123:
 1731              		.size	Task_CLCD, .-Task_CLCD
 1732              		.global	bar
 1733              		.global	dir_tab
 1734              		.global	pga_agc
 1735              		.global	pga_gain
 1736              		.global	Adj_Vbias
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 144


 1737              		.global	Adj_Vth
 1738              		.global	Vbias
 1739              		.global	Vth
 1740              		.global	gain
 1741              		.global	mode
 1742 074c AFF30080 		.section	.rodata
 1743              		.align	2
 1744              		.set	.LANCHOR1,. + 0
 1745              		.type	pga_gain, %object
 1746              		.size	pga_gain, 78
 1747              	pga_gain:
 1748 0000 00       		.byte	0
 1749 0001 01       		.byte	1
 1750 0002 08       		.byte	8
 1751 0003 3C       		.byte	60
 1752 0004 6B03     		.short	875
 1753 0006 00       		.byte	0
 1754 0007 01       		.byte	1
 1755 0008 04       		.byte	4
 1756 0009 3C       		.byte	60
 1757 000a ED03     		.short	1005
 1758 000c 00       		.byte	0
 1759 000d 01       		.byte	1
 1760 000e 02       		.byte	2
 1761 000f 3C       		.byte	60
 1762 0010 A104     		.short	1185
 1763 0012 00       		.byte	0
 1764 0013 01       		.byte	1
 1765 0014 01       		.byte	1
 1766 0015 3C       		.byte	60
 1767 0016 D905     		.short	1497
 1768 0018 01       		.byte	1
 1769 0019 02       		.byte	2
 1770 001a 01       		.byte	1
 1771 001b 3C       		.byte	60
 1772 001c D905     		.short	1497
 1773 001e 02       		.byte	2
 1774 001f 04       		.byte	4
 1775 0020 01       		.byte	1
 1776 0021 3C       		.byte	60
 1777 0022 D905     		.short	1497
 1778 0024 03       		.byte	3
 1779 0025 08       		.byte	8
 1780 0026 01       		.byte	1
 1781 0027 3C       		.byte	60
 1782 0028 D905     		.short	1497
 1783 002a 04       		.byte	4
 1784 002b 10       		.byte	16
 1785 002c 01       		.byte	1
 1786 002d 3C       		.byte	60
 1787 002e D905     		.short	1497
 1788 0030 05       		.byte	5
 1789 0031 18       		.byte	24
 1790 0032 01       		.byte	1
 1791 0033 3C       		.byte	60
 1792 0034 D905     		.short	1497
 1793 0036 06       		.byte	6
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 145


 1794 0037 20       		.byte	32
 1795 0038 01       		.byte	1
 1796 0039 3C       		.byte	60
 1797 003a D905     		.short	1497
 1798 003c 07       		.byte	7
 1799 003d 30       		.byte	48
 1800 003e 01       		.byte	1
 1801 003f 3C       		.byte	60
 1802 0040 D905     		.short	1497
 1803 0042 08       		.byte	8
 1804 0043 32       		.byte	50
 1805 0044 01       		.byte	1
 1806 0045 3C       		.byte	60
 1807 0046 D905     		.short	1497
 1808 0048 08       		.byte	8
 1809 0049 32       		.byte	50
 1810 004a 01       		.byte	1
 1811 004b 3C       		.byte	60
 1812 004c D905     		.short	1497
 1813 004e 0000     		.space	2
 1814              		.type	dir_tab, %object
 1815              		.size	dir_tab, 78
 1816              	dir_tab:
 1817 0050 A5FF     		.short	-91
 1818 0052 B3FF     		.short	-77
 1819 0054 03       		.byte	3
 1820 0055 00       		.byte	0
 1821 0056 B3FF     		.short	-77
 1822 0058 C1FF     		.short	-63
 1823 005a 03       		.byte	3
 1824 005b 01       		.byte	1
 1825 005c C1FF     		.short	-63
 1826 005e CFFF     		.short	-49
 1827 0060 03       		.byte	3
 1828 0061 02       		.byte	2
 1829 0062 CFFF     		.short	-49
 1830 0064 DDFF     		.short	-35
 1831 0066 03       		.byte	3
 1832 0067 03       		.byte	3
 1833 0068 DDFF     		.short	-35
 1834 006a EBFF     		.short	-21
 1835 006c 03       		.byte	3
 1836 006d 04       		.byte	4
 1837 006e EBFF     		.short	-21
 1838 0070 F9FF     		.short	-7
 1839 0072 03       		.byte	3
 1840 0073 05       		.byte	5
 1841 0074 F9FF     		.short	-7
 1842 0076 0700     		.short	7
 1843 0078 03       		.byte	3
 1844 0079 06       		.byte	6
 1845 007a 0700     		.short	7
 1846 007c 1500     		.short	21
 1847 007e 03       		.byte	3
 1848 007f 07       		.byte	7
 1849 0080 1500     		.short	21
 1850 0082 2300     		.short	35
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 146


 1851 0084 03       		.byte	3
 1852 0085 08       		.byte	8
 1853 0086 2300     		.short	35
 1854 0088 3100     		.short	49
 1855 008a 03       		.byte	3
 1856 008b 09       		.byte	9
 1857 008c 3100     		.short	49
 1858 008e 3F00     		.short	63
 1859 0090 03       		.byte	3
 1860 0091 0A       		.byte	10
 1861 0092 3F00     		.short	63
 1862 0094 4D00     		.short	77
 1863 0096 03       		.byte	3
 1864 0097 0B       		.byte	11
 1865 0098 4D00     		.short	77
 1866 009a 5B00     		.short	91
 1867 009c 03       		.byte	3
 1868 009d 0C       		.byte	12
 1869 009e 0000     		.space	2
 1870              		.type	bar, %object
 1871              		.size	bar, 208
 1872              	bar:
 1873 00a0 7C       		.byte	124
 1874 00a1 FF       		.byte	-1
 1875 00a2 FF       		.byte	-1
 1876 00a3 FF       		.byte	-1
 1877 00a4 FF       		.byte	-1
 1878 00a5 FF       		.byte	-1
 1879 00a6 FF       		.byte	-1
 1880 00a7 7C       		.byte	124
 1881 00a8 20       		.byte	32
 1882 00a9 20       		.byte	32
 1883 00aa 20       		.byte	32
 1884 00ab 20       		.byte	32
 1885 00ac 20       		.byte	32
 1886 00ad 20       		.byte	32
 1887 00ae 7C       		.byte	124
 1888 00af 00       		.byte	0
 1889 00b0 7C       		.byte	124
 1890 00b1 20       		.byte	32
 1891 00b2 FF       		.byte	-1
 1892 00b3 FF       		.byte	-1
 1893 00b4 FF       		.byte	-1
 1894 00b5 FF       		.byte	-1
 1895 00b6 FF       		.byte	-1
 1896 00b7 7C       		.byte	124
 1897 00b8 20       		.byte	32
 1898 00b9 20       		.byte	32
 1899 00ba 20       		.byte	32
 1900 00bb 20       		.byte	32
 1901 00bc 20       		.byte	32
 1902 00bd 20       		.byte	32
 1903 00be 7C       		.byte	124
 1904 00bf 00       		.byte	0
 1905 00c0 7C       		.byte	124
 1906 00c1 20       		.byte	32
 1907 00c2 20       		.byte	32
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 147


 1908 00c3 FF       		.byte	-1
 1909 00c4 FF       		.byte	-1
 1910 00c5 FF       		.byte	-1
 1911 00c6 FF       		.byte	-1
 1912 00c7 7C       		.byte	124
 1913 00c8 20       		.byte	32
 1914 00c9 20       		.byte	32
 1915 00ca 20       		.byte	32
 1916 00cb 20       		.byte	32
 1917 00cc 20       		.byte	32
 1918 00cd 20       		.byte	32
 1919 00ce 7C       		.byte	124
 1920 00cf 00       		.byte	0
 1921 00d0 7C       		.byte	124
 1922 00d1 20       		.byte	32
 1923 00d2 20       		.byte	32
 1924 00d3 20       		.byte	32
 1925 00d4 FF       		.byte	-1
 1926 00d5 FF       		.byte	-1
 1927 00d6 FF       		.byte	-1
 1928 00d7 7C       		.byte	124
 1929 00d8 20       		.byte	32
 1930 00d9 20       		.byte	32
 1931 00da 20       		.byte	32
 1932 00db 20       		.byte	32
 1933 00dc 20       		.byte	32
 1934 00dd 20       		.byte	32
 1935 00de 7C       		.byte	124
 1936 00df 00       		.byte	0
 1937 00e0 7C       		.byte	124
 1938 00e1 20       		.byte	32
 1939 00e2 20       		.byte	32
 1940 00e3 20       		.byte	32
 1941 00e4 20       		.byte	32
 1942 00e5 FF       		.byte	-1
 1943 00e6 FF       		.byte	-1
 1944 00e7 7C       		.byte	124
 1945 00e8 20       		.byte	32
 1946 00e9 20       		.byte	32
 1947 00ea 20       		.byte	32
 1948 00eb 20       		.byte	32
 1949 00ec 20       		.byte	32
 1950 00ed 20       		.byte	32
 1951 00ee 7C       		.byte	124
 1952 00ef 00       		.byte	0
 1953 00f0 7C       		.byte	124
 1954 00f1 20       		.byte	32
 1955 00f2 20       		.byte	32
 1956 00f3 20       		.byte	32
 1957 00f4 20       		.byte	32
 1958 00f5 20       		.byte	32
 1959 00f6 FF       		.byte	-1
 1960 00f7 7C       		.byte	124
 1961 00f8 20       		.byte	32
 1962 00f9 20       		.byte	32
 1963 00fa 20       		.byte	32
 1964 00fb 20       		.byte	32
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 148


 1965 00fc 20       		.byte	32
 1966 00fd 20       		.byte	32
 1967 00fe 7C       		.byte	124
 1968 00ff 00       		.byte	0
 1969 0100 7C       		.byte	124
 1970 0101 20       		.byte	32
 1971 0102 20       		.byte	32
 1972 0103 20       		.byte	32
 1973 0104 20       		.byte	32
 1974 0105 20       		.byte	32
 1975 0106 20       		.byte	32
 1976 0107 FF       		.byte	-1
 1977 0108 20       		.byte	32
 1978 0109 20       		.byte	32
 1979 010a 20       		.byte	32
 1980 010b 20       		.byte	32
 1981 010c 20       		.byte	32
 1982 010d 20       		.byte	32
 1983 010e 7C       		.byte	124
 1984 010f 00       		.byte	0
 1985 0110 7C       		.byte	124
 1986 0111 20       		.byte	32
 1987 0112 20       		.byte	32
 1988 0113 20       		.byte	32
 1989 0114 20       		.byte	32
 1990 0115 20       		.byte	32
 1991 0116 20       		.byte	32
 1992 0117 7C       		.byte	124
 1993 0118 FF       		.byte	-1
 1994 0119 20       		.byte	32
 1995 011a 20       		.byte	32
 1996 011b 20       		.byte	32
 1997 011c 20       		.byte	32
 1998 011d 20       		.byte	32
 1999 011e 7C       		.byte	124
 2000 011f 00       		.byte	0
 2001 0120 7C       		.byte	124
 2002 0121 20       		.byte	32
 2003 0122 20       		.byte	32
 2004 0123 20       		.byte	32
 2005 0124 20       		.byte	32
 2006 0125 20       		.byte	32
 2007 0126 20       		.byte	32
 2008 0127 7C       		.byte	124
 2009 0128 FF       		.byte	-1
 2010 0129 FF       		.byte	-1
 2011 012a 20       		.byte	32
 2012 012b 20       		.byte	32
 2013 012c 20       		.byte	32
 2014 012d 20       		.byte	32
 2015 012e 7C       		.byte	124
 2016 012f 00       		.byte	0
 2017 0130 7C       		.byte	124
 2018 0131 20       		.byte	32
 2019 0132 20       		.byte	32
 2020 0133 20       		.byte	32
 2021 0134 20       		.byte	32
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 149


 2022 0135 20       		.byte	32
 2023 0136 20       		.byte	32
 2024 0137 7C       		.byte	124
 2025 0138 FF       		.byte	-1
 2026 0139 FF       		.byte	-1
 2027 013a FF       		.byte	-1
 2028 013b 20       		.byte	32
 2029 013c 20       		.byte	32
 2030 013d 20       		.byte	32
 2031 013e 7C       		.byte	124
 2032 013f 00       		.byte	0
 2033 0140 7C       		.byte	124
 2034 0141 20       		.byte	32
 2035 0142 20       		.byte	32
 2036 0143 20       		.byte	32
 2037 0144 20       		.byte	32
 2038 0145 20       		.byte	32
 2039 0146 20       		.byte	32
 2040 0147 7C       		.byte	124
 2041 0148 FF       		.byte	-1
 2042 0149 FF       		.byte	-1
 2043 014a FF       		.byte	-1
 2044 014b FF       		.byte	-1
 2045 014c 20       		.byte	32
 2046 014d 20       		.byte	32
 2047 014e 7C       		.byte	124
 2048 014f 00       		.byte	0
 2049 0150 7C       		.byte	124
 2050 0151 20       		.byte	32
 2051 0152 20       		.byte	32
 2052 0153 20       		.byte	32
 2053 0154 20       		.byte	32
 2054 0155 20       		.byte	32
 2055 0156 20       		.byte	32
 2056 0157 7C       		.byte	124
 2057 0158 FF       		.byte	-1
 2058 0159 FF       		.byte	-1
 2059 015a FF       		.byte	-1
 2060 015b FF       		.byte	-1
 2061 015c FF       		.byte	-1
 2062 015d 20       		.byte	32
 2063 015e 7C       		.byte	124
 2064 015f 00       		.byte	0
 2065 0160 7C       		.byte	124
 2066 0161 20       		.byte	32
 2067 0162 20       		.byte	32
 2068 0163 20       		.byte	32
 2069 0164 20       		.byte	32
 2070 0165 20       		.byte	32
 2071 0166 20       		.byte	32
 2072 0167 7C       		.byte	124
 2073 0168 FF       		.byte	-1
 2074 0169 FF       		.byte	-1
 2075 016a FF       		.byte	-1
 2076 016b FF       		.byte	-1
 2077 016c FF       		.byte	-1
 2078 016d FF       		.byte	-1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 150


 2079 016e 7C       		.byte	124
 2080 016f 00       		.byte	0
 2081              		.type	pga_agc, %object
 2082              		.size	pga_agc, 54
 2083              	pga_agc:
 2084 0170 0000     		.short	0
 2085 0172 0A00     		.short	10
 2086 0174 04       		.byte	4
 2087 0175 00       		.space	1
 2088 0176 0A00     		.short	10
 2089 0178 1400     		.short	20
 2090 017a 03       		.byte	3
 2091 017b 00       		.space	1
 2092 017c 1400     		.short	20
 2093 017e 3200     		.short	50
 2094 0180 02       		.byte	2
 2095 0181 00       		.space	1
 2096 0182 3200     		.short	50
 2097 0184 6400     		.short	100
 2098 0186 01       		.byte	1
 2099 0187 00       		.space	1
 2100 0188 C800     		.short	200
 2101 018a 2C01     		.short	300
 2102 018c 00       		.byte	0
 2103 018d 00       		.space	1
 2104 018e 2C01     		.short	300
 2105 0190 F401     		.short	500
 2106 0192 00       		.byte	0
 2107 0193 00       		.space	1
 2108 0194 F401     		.short	500
 2109 0196 2003     		.short	800
 2110 0198 FF       		.byte	-1
 2111 0199 00       		.space	1
 2112 019a 2003     		.short	800
 2113 019c E803     		.short	1000
 2114 019e FE       		.byte	-2
 2115 019f 00       		.space	1
 2116 01a0 E803     		.short	1000
 2117 01a2 D007     		.short	2000
 2118 01a4 FC       		.byte	-4
 2119 01a5 00       		.space	1
 2120 01a6 0000     		.data
 2121              		.align	1
 2122              		.set	.LANCHOR0,. + 0
 2123              		.type	mode, %object
 2124              		.size	mode, 1
 2125              	mode:
 2126 0000 01       		.byte	1
 2127 0001 00       		.space	1
 2128              		.type	gain, %object
 2129              		.size	gain, 2
 2130              	gain:
 2131 0002 0300     		.short	3
 2132              		.type	Vth, %object
 2133              		.size	Vth, 2
 2134              	Vth:
 2135 0004 3C00     		.short	60
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 151


 2136              		.type	Vbias, %object
 2137              		.size	Vbias, 2
 2138              	Vbias:
 2139 0006 D905     		.short	1497
 2140              		.section	.rodata.str1.4,"aMS",%progbits,1
 2141              		.align	2
 2142              	.LC0:
 2143 0000 20202020 		.ascii	"                    \000"
 2143      20202020 
 2143      20202020 
 2143      20202020 
 2143      20202020 
 2144 0015 000000   		.space	3
 2145              	.LC1:
 2146 0018 414E5431 		.ascii	"ANT1:        [mV]   \000"
 2146      3A202020 
 2146      20202020 
 2146      205B6D56 
 2146      5D202020 
 2147 002d 000000   		.space	3
 2148              	.LC2:
 2149 0030 414E5432 		.ascii	"ANT2:        [mV]   \000"
 2149      3A202020 
 2149      20202020 
 2149      205B6D56 
 2149      5D202020 
 2150 0045 000000   		.space	3
 2151              	.LC3:
 2152 0048 50474120 		.ascii	"PGA Gain: x         \000"
 2152      4761696E 
 2152      3A207820 
 2152      20202020 
 2152      20202020 
 2153 005d 000000   		.space	3
 2154              	.LC4:
 2155 0060 50686173 		.ascii	"Phase:         [deg]\000"
 2155      653A2020 
 2155      20202020 
 2155      2020205B 
 2155      6465675D 
 2156 0075 000000   		.space	3
 2157              	.LC5:
 2158 0078 2020207C 		.ascii	"   |      |      |  \000"
 2158      20202020 
 2158      20207C20 
 2158      20202020 
 2158      207C2020 
 2159 008d 000000   		.space	3
 2160              	.LC6:
 2161 0090 416E676C 		.ascii	"Angle:         [deg]\000"
 2161      653A2020 
 2161      20202020 
 2161      2020205B 
 2161      6465675D 
 2162 00a5 000000   		.space	3
 2163              	.LC7:
 2164 00a8 524D533A 		.ascii	"RMS:           [mV] \000"
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 152


 2164      20202020 
 2164      20202020 
 2164      2020205B 
 2164      6D565D20 
 2165 00bd 000000   		.space	3
 2166              	.LC8:
 2167 00c0 44697374 		.ascii	"Distance:      [m]  \000"
 2167      616E6365 
 2167      3A202020 
 2167      2020205B 
 2167      6D5D2020 
 2168 00d5 000000   		.space	3
 2169              	.LC9:
 2170 00d8 54687265 		.ascii	"Threshold           \000"
 2170      73686F6C 
 2170      64202020 
 2170      20202020 
 2170      20202020 
 2171 00ed 000000   		.space	3
 2172              	.LC10:
 2173 00f0 44656661 		.ascii	"Default:    %3d [mV]\000"
 2173      756C743A 
 2173      20202020 
 2173      25336420 
 2173      5B6D565D 
 2174 0105 000000   		.space	3
 2175              	.LC11:
 2176 0108 41646A3A 		.ascii	"Adj:        %3d [mV]\000"
 2176      20202020 
 2176      20202020 
 2176      25336420 
 2176      5B6D565D 
 2177 011d 000000   		.space	3
 2178              	.LC12:
 2179 0120 43757272 		.ascii	"Current Vth:%3d [mV]\000"
 2179      656E7420 
 2179      5674683A 
 2179      25336420 
 2179      5B6D565D 
 2180 0135 000000   		.space	3
 2181              	.LC13:
 2182 0138 49462041 		.ascii	"IF Amp BIAS         \000"
 2182      6D702042 
 2182      49415320 
 2182      20202020 
 2182      20202020 
 2183 014d 000000   		.space	3
 2184              	.LC14:
 2185 0150 44656661 		.ascii	"Default:   %4d [mV]\000"
 2185      756C743A 
 2185      20202025 
 2185      3464205B 
 2185      6D565D00 
 2186              	.LC15:
 2187 0164 41646A3A 		.ascii	"Adj:       %4d [mV]\000"
 2187      20202020 
 2187      20202025 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 153


 2187      3464205B 
 2187      6D565D00 
 2188              	.LC16:
 2189 0178 43757272 		.ascii	"Current Vb:%4d [mV]\000"
 2189      656E7420 
 2189      56623A25 
 2189      3464205B 
 2189      6D565D00 
 2190              	.LC17:
 2191 018c 25326420 		.ascii	"%2d      \000"
 2191      20202020 
 2191      2000
 2192 0196 0000     		.space	2
 2193              	.LC18:
 2194 0198 2520312E 		.ascii	"% 1.1f    \000"
 2194      31662020 
 2194      202000
 2195 01a3 00       		.space	1
 2196              	.LC19:
 2197 01a4 2520322E 		.ascii	"% 2.2f   \000"
 2197      32662020 
 2197      2000
 2198 01ae 0000     		.space	2
 2199              	.LC20:
 2200 01b0 2520332E 		.ascii	"% 3.3f  \000"
 2200      33662020 
 2200      00
 2201 01b9 000000   		.space	3
 2202              	.LC21:
 2203 01bc 252B332E 		.ascii	"%+3.1f\000"
 2203      316600
 2204 01c3 00       		.space	1
 2205              	.LC22:
 2206 01c4 6C6F7374 		.ascii	"lost   \000"
 2206      20202000 
 2207              	.LC23:
 2208 01cc 25362E31 		.ascii	"%6.1f\000"
 2208      6600
 2209 01d2 0000     		.space	2
 2210              	.LC24:
 2211 01d4 25336400 		.ascii	"%3d\000"
 2212              	.LC25:
 2213 01d8 25346400 		.ascii	"%4d\000"
 2214              		.bss
 2215              		.align	1
 2216              		.set	.LANCHOR2,. + 0
 2217              		.type	Adj_Vth, %object
 2218              		.size	Adj_Vth, 2
 2219              	Adj_Vth:
 2220 0000 0000     		.space	2
 2221              		.type	Adj_Vbias, %object
 2222              		.size	Adj_Vbias, 2
 2223              	Adj_Vbias:
 2224 0002 0000     		.space	2
 2225              		.text
 2226              	.Letext0:
 2227              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 154


 2228              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 2229              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 2230              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 2231              		.file 7 "..\\FreeRTOS/portmacro.h"
 2232              		.file 8 "..\\FreeRTOS/queue.h"
 2233              		.file 9 "..\\FreeRTOS/semphr.h"
 2234              		.file 10 "..\\CMSIS_DSP_LIB\\Include/core_cm3.h"
 2235              		.file 11 "..\\API/I2C_CLCD.h"
 2236              		.file 12 "Generated_Source\\PSoC5/Control_GAIN.h"
 2237              		.file 13 "Generated_Source\\PSoC5/DVDAC_2.h"
 2238              		.file 14 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9
 2239              		.file 15 "..\\FreeRTOS/task.h"
 2240              		.file 16 "Generated_Source\\PSoC5/MON.h"
 2241              		.file 17 "Generated_Source\\PSoC5/PGA_1.h"
 2242              		.file 18 "main.h"
 2243              		.file 19 "Generated_Source\\PSoC5/Status_Reg_1.h"
 2244              		.file 20 "<built-in>"
 2245              		.file 21 "Generated_Source\\PSoC5/PGA_2.h"
 2246              		.section	.debug_info,"",%progbits
 2247              	.Ldebug_info0:
 2248 0000 35150000 		.4byte	0x1535
 2249 0004 0400     		.2byte	0x4
 2250 0006 00000000 		.4byte	.Ldebug_abbrev0
 2251 000a 04       		.byte	0x4
 2252 000b 01       		.uleb128 0x1
 2253 000c 1E050000 		.4byte	.LASF114
 2254 0010 01       		.byte	0x1
 2255 0011 8E020000 		.4byte	.LASF115
 2256 0015 38040000 		.4byte	.LASF116
 2257 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2258 001d 00000000 		.4byte	0
 2259 0021 00000000 		.4byte	.Ldebug_line0
 2260 0025 02       		.uleb128 0x2
 2261 0026 08       		.byte	0x8
 2262 0027 04       		.byte	0x4
 2263 0028 40010000 		.4byte	.LASF0
 2264 002c 02       		.uleb128 0x2
 2265 002d 04       		.byte	0x4
 2266 002e 04       		.byte	0x4
 2267 002f 1E030000 		.4byte	.LASF1
 2268 0033 02       		.uleb128 0x2
 2269 0034 01       		.byte	0x1
 2270 0035 06       		.byte	0x6
 2271 0036 E7000000 		.4byte	.LASF2
 2272 003a 02       		.uleb128 0x2
 2273 003b 01       		.byte	0x1
 2274 003c 08       		.byte	0x8
 2275 003d 69030000 		.4byte	.LASF3
 2276 0041 02       		.uleb128 0x2
 2277 0042 02       		.byte	0x2
 2278 0043 05       		.byte	0x5
 2279 0044 7E020000 		.4byte	.LASF4
 2280 0048 02       		.uleb128 0x2
 2281 0049 02       		.byte	0x2
 2282 004a 07       		.byte	0x7
 2283 004b 13020000 		.4byte	.LASF5
 2284 004f 03       		.uleb128 0x3
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 155


 2285 0050 B5040000 		.4byte	.LASF7
 2286 0054 03       		.byte	0x3
 2287 0055 3F       		.byte	0x3f
 2288 0056 5A000000 		.4byte	0x5a
 2289 005a 02       		.uleb128 0x2
 2290 005b 04       		.byte	0x4
 2291 005c 05       		.byte	0x5
 2292 005d 58000000 		.4byte	.LASF6
 2293 0061 03       		.uleb128 0x3
 2294 0062 7F010000 		.4byte	.LASF8
 2295 0066 03       		.byte	0x3
 2296 0067 41       		.byte	0x41
 2297 0068 6C000000 		.4byte	0x6c
 2298 006c 02       		.uleb128 0x2
 2299 006d 04       		.byte	0x4
 2300 006e 07       		.byte	0x7
 2301 006f C7010000 		.4byte	.LASF9
 2302 0073 02       		.uleb128 0x2
 2303 0074 08       		.byte	0x8
 2304 0075 05       		.byte	0x5
 2305 0076 D9000000 		.4byte	.LASF10
 2306 007a 02       		.uleb128 0x2
 2307 007b 08       		.byte	0x8
 2308 007c 07       		.byte	0x7
 2309 007d 61000000 		.4byte	.LASF11
 2310 0081 04       		.uleb128 0x4
 2311 0082 04       		.byte	0x4
 2312 0083 05       		.byte	0x5
 2313 0084 696E7400 		.ascii	"int\000"
 2314 0088 02       		.uleb128 0x2
 2315 0089 04       		.byte	0x4
 2316 008a 07       		.byte	0x7
 2317 008b 93010000 		.4byte	.LASF12
 2318 008f 03       		.uleb128 0x3
 2319 0090 61030000 		.4byte	.LASF13
 2320 0094 04       		.byte	0x4
 2321 0095 2C       		.byte	0x2c
 2322 0096 4F000000 		.4byte	0x4f
 2323 009a 03       		.uleb128 0x3
 2324 009b EE030000 		.4byte	.LASF14
 2325 009f 04       		.byte	0x4
 2326 00a0 2D       		.byte	0x2d
 2327 00a1 61000000 		.4byte	0x61
 2328 00a5 05       		.uleb128 0x5
 2329 00a6 3A010000 		.4byte	.LASF15
 2330 00aa 05       		.byte	0x5
 2331 00ab 3801     		.2byte	0x138
 2332 00ad 3A000000 		.4byte	0x3a
 2333 00b1 05       		.uleb128 0x5
 2334 00b2 77030000 		.4byte	.LASF16
 2335 00b6 05       		.byte	0x5
 2336 00b7 3901     		.2byte	0x139
 2337 00b9 48000000 		.4byte	0x48
 2338 00bd 05       		.uleb128 0x5
 2339 00be 5C010000 		.4byte	.LASF17
 2340 00c2 05       		.byte	0x5
 2341 00c3 3A01     		.2byte	0x13a
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 156


 2342 00c5 6C000000 		.4byte	0x6c
 2343 00c9 05       		.uleb128 0x5
 2344 00ca 39020000 		.4byte	.LASF18
 2345 00ce 05       		.byte	0x5
 2346 00cf 3B01     		.2byte	0x13b
 2347 00d1 33000000 		.4byte	0x33
 2348 00d5 05       		.uleb128 0x5
 2349 00d6 E1050000 		.4byte	.LASF19
 2350 00da 05       		.byte	0x5
 2351 00db 3C01     		.2byte	0x13c
 2352 00dd 41000000 		.4byte	0x41
 2353 00e1 05       		.uleb128 0x5
 2354 00e2 BF040000 		.4byte	.LASF20
 2355 00e6 05       		.byte	0x5
 2356 00e7 4901     		.2byte	0x149
 2357 00e9 ED000000 		.4byte	0xed
 2358 00ed 02       		.uleb128 0x2
 2359 00ee 01       		.byte	0x1
 2360 00ef 08       		.byte	0x8
 2361 00f0 2E040000 		.4byte	.LASF21
 2362 00f4 02       		.uleb128 0x2
 2363 00f5 04       		.byte	0x4
 2364 00f6 07       		.byte	0x7
 2365 00f7 BE020000 		.4byte	.LASF22
 2366 00fb 06       		.uleb128 0x6
 2367 00fc 04       		.byte	0x4
 2368 00fd 07       		.uleb128 0x7
 2369 00fe 04       		.byte	0x4
 2370 00ff ED000000 		.4byte	0xed
 2371 0103 07       		.uleb128 0x7
 2372 0104 04       		.byte	0x4
 2373 0105 09010000 		.4byte	0x109
 2374 0109 08       		.uleb128 0x8
 2375 010a ED000000 		.4byte	0xed
 2376 010e 07       		.uleb128 0x7
 2377 010f 04       		.byte	0x4
 2378 0110 14010000 		.4byte	0x114
 2379 0114 09       		.uleb128 0x9
 2380 0115 02       		.uleb128 0x2
 2381 0116 08       		.byte	0x8
 2382 0117 04       		.byte	0x4
 2383 0118 10040000 		.4byte	.LASF23
 2384 011c 03       		.uleb128 0x3
 2385 011d 19000000 		.4byte	.LASF24
 2386 0121 06       		.byte	0x6
 2387 0122 9C       		.byte	0x9c
 2388 0123 25000000 		.4byte	0x25
 2389 0127 0A       		.uleb128 0xa
 2390 0128 01       		.byte	0x1
 2391 0129 02       		.byte	0x2
 2392 012a 7801     		.2byte	0x178
 2393 012c 5B010000 		.4byte	0x15b
 2394 0130 0B       		.uleb128 0xb
 2395 0131 78000000 		.4byte	.LASF25
 2396 0135 00       		.sleb128 0
 2397 0136 0B       		.uleb128 0xb
 2398 0137 25060000 		.4byte	.LASF26
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 157


 2399 013b 7F       		.sleb128 -1
 2400 013c 0B       		.uleb128 0xb
 2401 013d 08030000 		.4byte	.LASF27
 2402 0141 7E       		.sleb128 -2
 2403 0142 0B       		.uleb128 0xb
 2404 0143 91040000 		.4byte	.LASF28
 2405 0147 7D       		.sleb128 -3
 2406 0148 0B       		.uleb128 0xb
 2407 0149 42030000 		.4byte	.LASF29
 2408 014d 7C       		.sleb128 -4
 2409 014e 0B       		.uleb128 0xb
 2410 014f 24030000 		.4byte	.LASF30
 2411 0153 7B       		.sleb128 -5
 2412 0154 0B       		.uleb128 0xb
 2413 0155 61020000 		.4byte	.LASF31
 2414 0159 7A       		.sleb128 -6
 2415 015a 00       		.byte	0
 2416 015b 05       		.uleb128 0x5
 2417 015c D6050000 		.4byte	.LASF32
 2418 0160 02       		.byte	0x2
 2419 0161 8001     		.2byte	0x180
 2420 0163 27010000 		.4byte	0x127
 2421 0167 05       		.uleb128 0x5
 2422 0168 C5040000 		.4byte	.LASF33
 2423 016c 02       		.byte	0x2
 2424 016d 9901     		.2byte	0x199
 2425 016f 2C000000 		.4byte	0x2c
 2426 0173 07       		.uleb128 0x7
 2427 0174 04       		.byte	0x4
 2428 0175 67010000 		.4byte	0x167
 2429 0179 03       		.uleb128 0x3
 2430 017a 47010000 		.4byte	.LASF34
 2431 017e 07       		.byte	0x7
 2432 017f 62       		.byte	0x62
 2433 0180 5A000000 		.4byte	0x5a
 2434 0184 03       		.uleb128 0x3
 2435 0185 3D060000 		.4byte	.LASF35
 2436 0189 07       		.byte	0x7
 2437 018a 63       		.byte	0x63
 2438 018b 6C000000 		.4byte	0x6c
 2439 018f 03       		.uleb128 0x3
 2440 0190 CF020000 		.4byte	.LASF36
 2441 0194 07       		.byte	0x7
 2442 0195 69       		.byte	0x69
 2443 0196 9A000000 		.4byte	0x9a
 2444 019a 03       		.uleb128 0x3
 2445 019b 93000000 		.4byte	.LASF37
 2446 019f 08       		.byte	0x8
 2447 01a0 58       		.byte	0x58
 2448 01a1 FB000000 		.4byte	0xfb
 2449 01a5 03       		.uleb128 0x3
 2450 01a6 1C040000 		.4byte	.LASF38
 2451 01aa 09       		.byte	0x9
 2452 01ab 4F       		.byte	0x4f
 2453 01ac 9A010000 		.4byte	0x19a
 2454 01b0 0C       		.uleb128 0xc
 2455 01b1 52010000 		.4byte	.LASF117
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 158


 2456 01b5 01       		.byte	0x1
 2457 01b6 12       		.byte	0x12
 2458 01b7 23       		.byte	0x23
 2459 01b8 E7010000 		.4byte	0x1e7
 2460 01bc 0B       		.uleb128 0xb
 2461 01bd EC020000 		.4byte	.LASF39
 2462 01c1 00       		.sleb128 0
 2463 01c2 0B       		.uleb128 0xb
 2464 01c3 39000000 		.4byte	.LASF40
 2465 01c7 01       		.sleb128 1
 2466 01c8 0B       		.uleb128 0xb
 2467 01c9 DA030000 		.4byte	.LASF41
 2468 01cd 02       		.sleb128 2
 2469 01ce 0B       		.uleb128 0xb
 2470 01cf 94030000 		.4byte	.LASF42
 2471 01d3 03       		.sleb128 3
 2472 01d4 0B       		.uleb128 0xb
 2473 01d5 F7010000 		.4byte	.LASF43
 2474 01d9 04       		.sleb128 4
 2475 01da 0B       		.uleb128 0xb
 2476 01db F7030000 		.4byte	.LASF44
 2477 01df 05       		.sleb128 5
 2478 01e0 0B       		.uleb128 0xb
 2479 01e1 00000000 		.4byte	.LASF45
 2480 01e5 06       		.sleb128 6
 2481 01e6 00       		.byte	0
 2482 01e7 0D       		.uleb128 0xd
 2483 01e8 06       		.byte	0x6
 2484 01e9 01       		.byte	0x1
 2485 01ea 3D       		.byte	0x3d
 2486 01eb 2C020000 		.4byte	0x22c
 2487 01ef 0E       		.uleb128 0xe
 2488 01f0 05000000 		.4byte	.LASF46
 2489 01f4 01       		.byte	0x1
 2490 01f5 3F       		.byte	0x3f
 2491 01f6 A5000000 		.4byte	0xa5
 2492 01fa 00       		.byte	0
 2493 01fb 0E       		.uleb128 0xe
 2494 01fc B9010000 		.4byte	.LASF47
 2495 0200 01       		.byte	0x1
 2496 0201 40       		.byte	0x40
 2497 0202 A5000000 		.4byte	0xa5
 2498 0206 01       		.byte	0x1
 2499 0207 0E       		.uleb128 0xe
 2500 0208 FA040000 		.4byte	.LASF48
 2501 020c 01       		.byte	0x1
 2502 020d 41       		.byte	0x41
 2503 020e A5000000 		.4byte	0xa5
 2504 0212 02       		.byte	0x2
 2505 0213 0E       		.uleb128 0xe
 2506 0214 57030000 		.4byte	.LASF49
 2507 0218 01       		.byte	0x1
 2508 0219 42       		.byte	0x42
 2509 021a A5000000 		.4byte	0xa5
 2510 021e 03       		.byte	0x3
 2511 021f 0E       		.uleb128 0xe
 2512 0220 B2030000 		.4byte	.LASF50
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 159


 2513 0224 01       		.byte	0x1
 2514 0225 43       		.byte	0x43
 2515 0226 B1000000 		.4byte	0xb1
 2516 022a 04       		.byte	0x4
 2517 022b 00       		.byte	0
 2518 022c 03       		.uleb128 0x3
 2519 022d 08060000 		.4byte	.LASF51
 2520 0231 01       		.byte	0x1
 2521 0232 44       		.byte	0x44
 2522 0233 E7010000 		.4byte	0x1e7
 2523 0237 0D       		.uleb128 0xd
 2524 0238 06       		.byte	0x6
 2525 0239 01       		.byte	0x1
 2526 023a 58       		.byte	0x58
 2527 023b 64020000 		.4byte	0x264
 2528 023f 0E       		.uleb128 0xe
 2529 0240 F1050000 		.4byte	.LASF52
 2530 0244 01       		.byte	0x1
 2531 0245 5A       		.byte	0x5a
 2532 0246 B1000000 		.4byte	0xb1
 2533 024a 00       		.byte	0
 2534 024b 0E       		.uleb128 0xe
 2535 024c BF050000 		.4byte	.LASF53
 2536 0250 01       		.byte	0x1
 2537 0251 5B       		.byte	0x5b
 2538 0252 B1000000 		.4byte	0xb1
 2539 0256 02       		.byte	0x2
 2540 0257 0E       		.uleb128 0xe
 2541 0258 8A010000 		.4byte	.LASF54
 2542 025c 01       		.byte	0x1
 2543 025d 5C       		.byte	0x5c
 2544 025e C9000000 		.4byte	0xc9
 2545 0262 04       		.byte	0x4
 2546 0263 00       		.byte	0
 2547 0264 03       		.uleb128 0x3
 2548 0265 0D010000 		.4byte	.LASF55
 2549 0269 01       		.byte	0x1
 2550 026a 5D       		.byte	0x5d
 2551 026b 37020000 		.4byte	0x237
 2552 026f 0D       		.uleb128 0xd
 2553 0270 06       		.byte	0x6
 2554 0271 01       		.byte	0x1
 2555 0272 6C       		.byte	0x6c
 2556 0273 A8020000 		.4byte	0x2a8
 2557 0277 0E       		.uleb128 0xe
 2558 0278 B7030000 		.4byte	.LASF56
 2559 027c 01       		.byte	0x1
 2560 027d 6E       		.byte	0x6e
 2561 027e D5000000 		.4byte	0xd5
 2562 0282 00       		.byte	0
 2563 0283 0E       		.uleb128 0xe
 2564 0284 E7050000 		.4byte	.LASF57
 2565 0288 01       		.byte	0x1
 2566 0289 6F       		.byte	0x6f
 2567 028a D5000000 		.4byte	0xd5
 2568 028e 02       		.byte	0x2
 2569 028f 0E       		.uleb128 0xe
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 160


 2570 0290 CB000000 		.4byte	.LASF58
 2571 0294 01       		.byte	0x1
 2572 0295 70       		.byte	0x70
 2573 0296 A5000000 		.4byte	0xa5
 2574 029a 04       		.byte	0x4
 2575 029b 0E       		.uleb128 0xe
 2576 029c FE000000 		.4byte	.LASF59
 2577 02a0 01       		.byte	0x1
 2578 02a1 71       		.byte	0x71
 2579 02a2 A5000000 		.4byte	0xa5
 2580 02a6 05       		.byte	0x5
 2581 02a7 00       		.byte	0
 2582 02a8 03       		.uleb128 0x3
 2583 02a9 89000000 		.4byte	.LASF60
 2584 02ad 01       		.byte	0x1
 2585 02ae 72       		.byte	0x72
 2586 02af 6F020000 		.4byte	0x26f
 2587 02b3 0F       		.uleb128 0xf
 2588 02b4 2D010000 		.4byte	.LASF118
 2589 02b8 02       		.byte	0x2
 2590 02b9 7316     		.2byte	0x1673
 2591 02bb 5B010000 		.4byte	0x15b
 2592 02bf 03       		.byte	0x3
 2593 02c0 DC020000 		.4byte	0x2dc
 2594 02c4 10       		.uleb128 0x10
 2595 02c5 696E00   		.ascii	"in\000"
 2596 02c8 02       		.byte	0x2
 2597 02c9 7416     		.2byte	0x1674
 2598 02cb 67010000 		.4byte	0x167
 2599 02cf 11       		.uleb128 0x11
 2600 02d0 A5020000 		.4byte	.LASF61
 2601 02d4 02       		.byte	0x2
 2602 02d5 7516     		.2byte	0x1675
 2603 02d7 73010000 		.4byte	0x173
 2604 02db 00       		.byte	0
 2605 02dc 12       		.uleb128 0x12
 2606 02dd AE010000 		.4byte	.LASF62
 2607 02e1 01       		.byte	0x1
 2608 02e2 96       		.byte	0x96
 2609 02e3 00000000 		.4byte	.LFB119
 2610 02e7 14000000 		.4byte	.LFE119-.LFB119
 2611 02eb 01       		.uleb128 0x1
 2612 02ec 9C       		.byte	0x9c
 2613 02ed 27030000 		.4byte	0x327
 2614 02f1 13       		.uleb128 0x13
 2615 02f2 72617700 		.ascii	"raw\000"
 2616 02f6 01       		.byte	0x1
 2617 02f7 96       		.byte	0x96
 2618 02f8 A5000000 		.4byte	0xa5
 2619 02fc 00000000 		.4byte	.LLST0
 2620 0300 14       		.uleb128 0x14
 2621 0301 08000000 		.4byte	.LVL1
 2622 0305 48130000 		.4byte	0x1348
 2623 0309 13030000 		.4byte	0x313
 2624 030d 15       		.uleb128 0x15
 2625 030e 01       		.uleb128 0x1
 2626 030f 51       		.byte	0x51
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 161


 2627 0310 01       		.uleb128 0x1
 2628 0311 30       		.byte	0x30
 2629 0312 00       		.byte	0
 2630 0313 16       		.uleb128 0x16
 2631 0314 0E000000 		.4byte	.LVL2
 2632 0318 5E130000 		.4byte	0x135e
 2633 031c 15       		.uleb128 0x15
 2634 031d 01       		.uleb128 0x1
 2635 031e 50       		.byte	0x50
 2636 031f 05       		.uleb128 0x5
 2637 0320 03       		.byte	0x3
 2638 0321 00000000 		.4byte	.LC0
 2639 0325 00       		.byte	0
 2640 0326 00       		.byte	0
 2641 0327 12       		.uleb128 0x12
 2642 0328 D9010000 		.4byte	.LASF63
 2643 032c 01       		.byte	0x1
 2644 032d 9C       		.byte	0x9c
 2645 032e 00000000 		.4byte	.LFB120
 2646 0332 F0010000 		.4byte	.LFE120-.LFB120
 2647 0336 01       		.uleb128 0x1
 2648 0337 9C       		.byte	0x9c
 2649 0338 8F070000 		.4byte	0x78f
 2650 033c 17       		.uleb128 0x17
 2651 033d 73747200 		.ascii	"str\000"
 2652 0341 01       		.byte	0x1
 2653 0342 9E       		.byte	0x9e
 2654 0343 8F070000 		.4byte	0x78f
 2655 0347 02       		.uleb128 0x2
 2656 0348 91       		.byte	0x91
 2657 0349 64       		.sleb128 -28
 2658 034a 14       		.uleb128 0x14
 2659 034b 22000000 		.4byte	.LVL3
 2660 034f 48130000 		.4byte	0x1348
 2661 0353 62030000 		.4byte	0x362
 2662 0357 15       		.uleb128 0x15
 2663 0358 01       		.uleb128 0x1
 2664 0359 51       		.byte	0x51
 2665 035a 01       		.uleb128 0x1
 2666 035b 30       		.byte	0x30
 2667 035c 15       		.uleb128 0x15
 2668 035d 01       		.uleb128 0x1
 2669 035e 50       		.byte	0x50
 2670 035f 01       		.uleb128 0x1
 2671 0360 30       		.byte	0x30
 2672 0361 00       		.byte	0
 2673 0362 14       		.uleb128 0x14
 2674 0363 28000000 		.4byte	.LVL4
 2675 0367 5E130000 		.4byte	0x135e
 2676 036b 79030000 		.4byte	0x379
 2677 036f 15       		.uleb128 0x15
 2678 0370 01       		.uleb128 0x1
 2679 0371 50       		.byte	0x50
 2680 0372 05       		.uleb128 0x5
 2681 0373 03       		.byte	0x3
 2682 0374 18000000 		.4byte	.LC1
 2683 0378 00       		.byte	0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 162


 2684 0379 14       		.uleb128 0x14
 2685 037a 30000000 		.4byte	.LVL5
 2686 037e 48130000 		.4byte	0x1348
 2687 0382 91030000 		.4byte	0x391
 2688 0386 15       		.uleb128 0x15
 2689 0387 01       		.uleb128 0x1
 2690 0388 51       		.byte	0x51
 2691 0389 01       		.uleb128 0x1
 2692 038a 30       		.byte	0x30
 2693 038b 15       		.uleb128 0x15
 2694 038c 01       		.uleb128 0x1
 2695 038d 50       		.byte	0x50
 2696 038e 01       		.uleb128 0x1
 2697 038f 31       		.byte	0x31
 2698 0390 00       		.byte	0
 2699 0391 14       		.uleb128 0x14
 2700 0392 36000000 		.4byte	.LVL6
 2701 0396 5E130000 		.4byte	0x135e
 2702 039a A8030000 		.4byte	0x3a8
 2703 039e 15       		.uleb128 0x15
 2704 039f 01       		.uleb128 0x1
 2705 03a0 50       		.byte	0x50
 2706 03a1 05       		.uleb128 0x5
 2707 03a2 03       		.byte	0x3
 2708 03a3 30000000 		.4byte	.LC2
 2709 03a7 00       		.byte	0
 2710 03a8 14       		.uleb128 0x14
 2711 03a9 3E000000 		.4byte	.LVL7
 2712 03ad 48130000 		.4byte	0x1348
 2713 03b1 C0030000 		.4byte	0x3c0
 2714 03b5 15       		.uleb128 0x15
 2715 03b6 01       		.uleb128 0x1
 2716 03b7 51       		.byte	0x51
 2717 03b8 01       		.uleb128 0x1
 2718 03b9 30       		.byte	0x30
 2719 03ba 15       		.uleb128 0x15
 2720 03bb 01       		.uleb128 0x1
 2721 03bc 50       		.byte	0x50
 2722 03bd 01       		.uleb128 0x1
 2723 03be 32       		.byte	0x32
 2724 03bf 00       		.byte	0
 2725 03c0 14       		.uleb128 0x14
 2726 03c1 44000000 		.4byte	.LVL8
 2727 03c5 5E130000 		.4byte	0x135e
 2728 03c9 D7030000 		.4byte	0x3d7
 2729 03cd 15       		.uleb128 0x15
 2730 03ce 01       		.uleb128 0x1
 2731 03cf 50       		.byte	0x50
 2732 03d0 05       		.uleb128 0x5
 2733 03d1 03       		.byte	0x3
 2734 03d2 48000000 		.4byte	.LC3
 2735 03d6 00       		.byte	0
 2736 03d7 14       		.uleb128 0x14
 2737 03d8 4C000000 		.4byte	.LVL9
 2738 03dc 48130000 		.4byte	0x1348
 2739 03e0 EF030000 		.4byte	0x3ef
 2740 03e4 15       		.uleb128 0x15
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 163


 2741 03e5 01       		.uleb128 0x1
 2742 03e6 51       		.byte	0x51
 2743 03e7 01       		.uleb128 0x1
 2744 03e8 30       		.byte	0x30
 2745 03e9 15       		.uleb128 0x15
 2746 03ea 01       		.uleb128 0x1
 2747 03eb 50       		.byte	0x50
 2748 03ec 01       		.uleb128 0x1
 2749 03ed 33       		.byte	0x33
 2750 03ee 00       		.byte	0
 2751 03ef 14       		.uleb128 0x14
 2752 03f0 52000000 		.4byte	.LVL10
 2753 03f4 5E130000 		.4byte	0x135e
 2754 03f8 06040000 		.4byte	0x406
 2755 03fc 15       		.uleb128 0x15
 2756 03fd 01       		.uleb128 0x1
 2757 03fe 50       		.byte	0x50
 2758 03ff 05       		.uleb128 0x5
 2759 0400 03       		.byte	0x3
 2760 0401 60000000 		.4byte	.LC4
 2761 0405 00       		.byte	0
 2762 0406 14       		.uleb128 0x14
 2763 0407 5C000000 		.4byte	.LVL11
 2764 040b 48130000 		.4byte	0x1348
 2765 040f 1E040000 		.4byte	0x41e
 2766 0413 15       		.uleb128 0x15
 2767 0414 01       		.uleb128 0x1
 2768 0415 51       		.byte	0x51
 2769 0416 01       		.uleb128 0x1
 2770 0417 30       		.byte	0x30
 2771 0418 15       		.uleb128 0x15
 2772 0419 01       		.uleb128 0x1
 2773 041a 50       		.byte	0x50
 2774 041b 01       		.uleb128 0x1
 2775 041c 30       		.byte	0x30
 2776 041d 00       		.byte	0
 2777 041e 14       		.uleb128 0x14
 2778 041f 62000000 		.4byte	.LVL12
 2779 0423 5E130000 		.4byte	0x135e
 2780 0427 35040000 		.4byte	0x435
 2781 042b 15       		.uleb128 0x15
 2782 042c 01       		.uleb128 0x1
 2783 042d 50       		.byte	0x50
 2784 042e 05       		.uleb128 0x5
 2785 042f 03       		.byte	0x3
 2786 0430 78000000 		.4byte	.LC5
 2787 0434 00       		.byte	0
 2788 0435 14       		.uleb128 0x14
 2789 0436 6A000000 		.4byte	.LVL13
 2790 043a 48130000 		.4byte	0x1348
 2791 043e 4D040000 		.4byte	0x44d
 2792 0442 15       		.uleb128 0x15
 2793 0443 01       		.uleb128 0x1
 2794 0444 51       		.byte	0x51
 2795 0445 01       		.uleb128 0x1
 2796 0446 30       		.byte	0x30
 2797 0447 15       		.uleb128 0x15
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 164


 2798 0448 01       		.uleb128 0x1
 2799 0449 50       		.byte	0x50
 2800 044a 01       		.uleb128 0x1
 2801 044b 31       		.byte	0x31
 2802 044c 00       		.byte	0
 2803 044d 14       		.uleb128 0x14
 2804 044e 70000000 		.4byte	.LVL14
 2805 0452 5E130000 		.4byte	0x135e
 2806 0456 64040000 		.4byte	0x464
 2807 045a 15       		.uleb128 0x15
 2808 045b 01       		.uleb128 0x1
 2809 045c 50       		.byte	0x50
 2810 045d 05       		.uleb128 0x5
 2811 045e 03       		.byte	0x3
 2812 045f 90000000 		.4byte	.LC6
 2813 0463 00       		.byte	0
 2814 0464 14       		.uleb128 0x14
 2815 0465 78000000 		.4byte	.LVL15
 2816 0469 48130000 		.4byte	0x1348
 2817 046d 7C040000 		.4byte	0x47c
 2818 0471 15       		.uleb128 0x15
 2819 0472 01       		.uleb128 0x1
 2820 0473 51       		.byte	0x51
 2821 0474 01       		.uleb128 0x1
 2822 0475 30       		.byte	0x30
 2823 0476 15       		.uleb128 0x15
 2824 0477 01       		.uleb128 0x1
 2825 0478 50       		.byte	0x50
 2826 0479 01       		.uleb128 0x1
 2827 047a 32       		.byte	0x32
 2828 047b 00       		.byte	0
 2829 047c 14       		.uleb128 0x14
 2830 047d 7E000000 		.4byte	.LVL16
 2831 0481 5E130000 		.4byte	0x135e
 2832 0485 93040000 		.4byte	0x493
 2833 0489 15       		.uleb128 0x15
 2834 048a 01       		.uleb128 0x1
 2835 048b 50       		.byte	0x50
 2836 048c 05       		.uleb128 0x5
 2837 048d 03       		.byte	0x3
 2838 048e A8000000 		.4byte	.LC7
 2839 0492 00       		.byte	0
 2840 0493 14       		.uleb128 0x14
 2841 0494 86000000 		.4byte	.LVL17
 2842 0498 48130000 		.4byte	0x1348
 2843 049c AB040000 		.4byte	0x4ab
 2844 04a0 15       		.uleb128 0x15
 2845 04a1 01       		.uleb128 0x1
 2846 04a2 51       		.byte	0x51
 2847 04a3 01       		.uleb128 0x1
 2848 04a4 30       		.byte	0x30
 2849 04a5 15       		.uleb128 0x15
 2850 04a6 01       		.uleb128 0x1
 2851 04a7 50       		.byte	0x50
 2852 04a8 01       		.uleb128 0x1
 2853 04a9 33       		.byte	0x33
 2854 04aa 00       		.byte	0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 165


 2855 04ab 14       		.uleb128 0x14
 2856 04ac 8C000000 		.4byte	.LVL18
 2857 04b0 5E130000 		.4byte	0x135e
 2858 04b4 C2040000 		.4byte	0x4c2
 2859 04b8 15       		.uleb128 0x15
 2860 04b9 01       		.uleb128 0x1
 2861 04ba 50       		.byte	0x50
 2862 04bb 05       		.uleb128 0x5
 2863 04bc 03       		.byte	0x3
 2864 04bd 48000000 		.4byte	.LC3
 2865 04c1 00       		.byte	0
 2866 04c2 14       		.uleb128 0x14
 2867 04c3 96000000 		.4byte	.LVL19
 2868 04c7 48130000 		.4byte	0x1348
 2869 04cb DA040000 		.4byte	0x4da
 2870 04cf 15       		.uleb128 0x15
 2871 04d0 01       		.uleb128 0x1
 2872 04d1 51       		.byte	0x51
 2873 04d2 01       		.uleb128 0x1
 2874 04d3 30       		.byte	0x30
 2875 04d4 15       		.uleb128 0x15
 2876 04d5 01       		.uleb128 0x1
 2877 04d6 50       		.byte	0x50
 2878 04d7 01       		.uleb128 0x1
 2879 04d8 30       		.byte	0x30
 2880 04d9 00       		.byte	0
 2881 04da 14       		.uleb128 0x14
 2882 04db 9C000000 		.4byte	.LVL20
 2883 04df 5E130000 		.4byte	0x135e
 2884 04e3 F1040000 		.4byte	0x4f1
 2885 04e7 15       		.uleb128 0x15
 2886 04e8 01       		.uleb128 0x1
 2887 04e9 50       		.byte	0x50
 2888 04ea 05       		.uleb128 0x5
 2889 04eb 03       		.byte	0x3
 2890 04ec 78000000 		.4byte	.LC5
 2891 04f0 00       		.byte	0
 2892 04f1 14       		.uleb128 0x14
 2893 04f2 A4000000 		.4byte	.LVL21
 2894 04f6 48130000 		.4byte	0x1348
 2895 04fa 09050000 		.4byte	0x509
 2896 04fe 15       		.uleb128 0x15
 2897 04ff 01       		.uleb128 0x1
 2898 0500 51       		.byte	0x51
 2899 0501 01       		.uleb128 0x1
 2900 0502 30       		.byte	0x30
 2901 0503 15       		.uleb128 0x15
 2902 0504 01       		.uleb128 0x1
 2903 0505 50       		.byte	0x50
 2904 0506 01       		.uleb128 0x1
 2905 0507 31       		.byte	0x31
 2906 0508 00       		.byte	0
 2907 0509 14       		.uleb128 0x14
 2908 050a AA000000 		.4byte	.LVL22
 2909 050e 5E130000 		.4byte	0x135e
 2910 0512 20050000 		.4byte	0x520
 2911 0516 15       		.uleb128 0x15
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 166


 2912 0517 01       		.uleb128 0x1
 2913 0518 50       		.byte	0x50
 2914 0519 05       		.uleb128 0x5
 2915 051a 03       		.byte	0x3
 2916 051b C0000000 		.4byte	.LC8
 2917 051f 00       		.byte	0
 2918 0520 14       		.uleb128 0x14
 2919 0521 B2000000 		.4byte	.LVL23
 2920 0525 48130000 		.4byte	0x1348
 2921 0529 38050000 		.4byte	0x538
 2922 052d 15       		.uleb128 0x15
 2923 052e 01       		.uleb128 0x1
 2924 052f 51       		.byte	0x51
 2925 0530 01       		.uleb128 0x1
 2926 0531 30       		.byte	0x30
 2927 0532 15       		.uleb128 0x15
 2928 0533 01       		.uleb128 0x1
 2929 0534 50       		.byte	0x50
 2930 0535 01       		.uleb128 0x1
 2931 0536 32       		.byte	0x32
 2932 0537 00       		.byte	0
 2933 0538 14       		.uleb128 0x14
 2934 0539 B8000000 		.4byte	.LVL24
 2935 053d 5E130000 		.4byte	0x135e
 2936 0541 4F050000 		.4byte	0x54f
 2937 0545 15       		.uleb128 0x15
 2938 0546 01       		.uleb128 0x1
 2939 0547 50       		.byte	0x50
 2940 0548 05       		.uleb128 0x5
 2941 0549 03       		.byte	0x3
 2942 054a A8000000 		.4byte	.LC7
 2943 054e 00       		.byte	0
 2944 054f 14       		.uleb128 0x14
 2945 0550 C0000000 		.4byte	.LVL25
 2946 0554 48130000 		.4byte	0x1348
 2947 0558 67050000 		.4byte	0x567
 2948 055c 15       		.uleb128 0x15
 2949 055d 01       		.uleb128 0x1
 2950 055e 51       		.byte	0x51
 2951 055f 01       		.uleb128 0x1
 2952 0560 30       		.byte	0x30
 2953 0561 15       		.uleb128 0x15
 2954 0562 01       		.uleb128 0x1
 2955 0563 50       		.byte	0x50
 2956 0564 01       		.uleb128 0x1
 2957 0565 33       		.byte	0x33
 2958 0566 00       		.byte	0
 2959 0567 14       		.uleb128 0x14
 2960 0568 C6000000 		.4byte	.LVL26
 2961 056c 5E130000 		.4byte	0x135e
 2962 0570 7E050000 		.4byte	0x57e
 2963 0574 15       		.uleb128 0x15
 2964 0575 01       		.uleb128 0x1
 2965 0576 50       		.byte	0x50
 2966 0577 05       		.uleb128 0x5
 2967 0578 03       		.byte	0x3
 2968 0579 48000000 		.4byte	.LC3
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 167


 2969 057d 00       		.byte	0
 2970 057e 14       		.uleb128 0x14
 2971 057f D0000000 		.4byte	.LVL27
 2972 0583 48130000 		.4byte	0x1348
 2973 0587 96050000 		.4byte	0x596
 2974 058b 15       		.uleb128 0x15
 2975 058c 01       		.uleb128 0x1
 2976 058d 51       		.byte	0x51
 2977 058e 01       		.uleb128 0x1
 2978 058f 30       		.byte	0x30
 2979 0590 15       		.uleb128 0x15
 2980 0591 01       		.uleb128 0x1
 2981 0592 50       		.byte	0x50
 2982 0593 01       		.uleb128 0x1
 2983 0594 30       		.byte	0x30
 2984 0595 00       		.byte	0
 2985 0596 14       		.uleb128 0x14
 2986 0597 D6000000 		.4byte	.LVL28
 2987 059b 5E130000 		.4byte	0x135e
 2988 059f AD050000 		.4byte	0x5ad
 2989 05a3 15       		.uleb128 0x15
 2990 05a4 01       		.uleb128 0x1
 2991 05a5 50       		.byte	0x50
 2992 05a6 05       		.uleb128 0x5
 2993 05a7 03       		.byte	0x3
 2994 05a8 D8000000 		.4byte	.LC9
 2995 05ac 00       		.byte	0
 2996 05ad 14       		.uleb128 0x14
 2997 05ae DE000000 		.4byte	.LVL29
 2998 05b2 48130000 		.4byte	0x1348
 2999 05b6 C5050000 		.4byte	0x5c5
 3000 05ba 15       		.uleb128 0x15
 3001 05bb 01       		.uleb128 0x1
 3002 05bc 51       		.byte	0x51
 3003 05bd 01       		.uleb128 0x1
 3004 05be 30       		.byte	0x30
 3005 05bf 15       		.uleb128 0x15
 3006 05c0 01       		.uleb128 0x1
 3007 05c1 50       		.byte	0x50
 3008 05c2 01       		.uleb128 0x1
 3009 05c3 31       		.byte	0x31
 3010 05c4 00       		.byte	0
 3011 05c5 14       		.uleb128 0x14
 3012 05c6 F8000000 		.4byte	.LVL30
 3013 05ca 7A130000 		.4byte	0x137a
 3014 05ce E2050000 		.4byte	0x5e2
 3015 05d2 15       		.uleb128 0x15
 3016 05d3 01       		.uleb128 0x1
 3017 05d4 51       		.byte	0x51
 3018 05d5 05       		.uleb128 0x5
 3019 05d6 03       		.byte	0x3
 3020 05d7 F0000000 		.4byte	.LC10
 3021 05db 15       		.uleb128 0x15
 3022 05dc 01       		.uleb128 0x1
 3023 05dd 50       		.byte	0x50
 3024 05de 02       		.uleb128 0x2
 3025 05df 91       		.byte	0x91
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 168


 3026 05e0 64       		.sleb128 -28
 3027 05e1 00       		.byte	0
 3028 05e2 14       		.uleb128 0x14
 3029 05e3 FE000000 		.4byte	.LVL31
 3030 05e7 5E130000 		.4byte	0x135e
 3031 05eb F6050000 		.4byte	0x5f6
 3032 05ef 15       		.uleb128 0x15
 3033 05f0 01       		.uleb128 0x1
 3034 05f1 50       		.byte	0x50
 3035 05f2 02       		.uleb128 0x2
 3036 05f3 91       		.byte	0x91
 3037 05f4 64       		.sleb128 -28
 3038 05f5 00       		.byte	0
 3039 05f6 14       		.uleb128 0x14
 3040 05f7 06010000 		.4byte	.LVL32
 3041 05fb 48130000 		.4byte	0x1348
 3042 05ff 0E060000 		.4byte	0x60e
 3043 0603 15       		.uleb128 0x15
 3044 0604 01       		.uleb128 0x1
 3045 0605 51       		.byte	0x51
 3046 0606 01       		.uleb128 0x1
 3047 0607 30       		.byte	0x30
 3048 0608 15       		.uleb128 0x15
 3049 0609 01       		.uleb128 0x1
 3050 060a 50       		.byte	0x50
 3051 060b 01       		.uleb128 0x1
 3052 060c 32       		.byte	0x32
 3053 060d 00       		.byte	0
 3054 060e 14       		.uleb128 0x14
 3055 060f 14010000 		.4byte	.LVL33
 3056 0613 7A130000 		.4byte	0x137a
 3057 0617 2B060000 		.4byte	0x62b
 3058 061b 15       		.uleb128 0x15
 3059 061c 01       		.uleb128 0x1
 3060 061d 51       		.byte	0x51
 3061 061e 05       		.uleb128 0x5
 3062 061f 03       		.byte	0x3
 3063 0620 08010000 		.4byte	.LC11
 3064 0624 15       		.uleb128 0x15
 3065 0625 01       		.uleb128 0x1
 3066 0626 50       		.byte	0x50
 3067 0627 02       		.uleb128 0x2
 3068 0628 91       		.byte	0x91
 3069 0629 64       		.sleb128 -28
 3070 062a 00       		.byte	0
 3071 062b 14       		.uleb128 0x14
 3072 062c 1A010000 		.4byte	.LVL34
 3073 0630 5E130000 		.4byte	0x135e
 3074 0634 3F060000 		.4byte	0x63f
 3075 0638 15       		.uleb128 0x15
 3076 0639 01       		.uleb128 0x1
 3077 063a 50       		.byte	0x50
 3078 063b 02       		.uleb128 0x2
 3079 063c 91       		.byte	0x91
 3080 063d 64       		.sleb128 -28
 3081 063e 00       		.byte	0
 3082 063f 14       		.uleb128 0x14
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 169


 3083 0640 22010000 		.4byte	.LVL35
 3084 0644 48130000 		.4byte	0x1348
 3085 0648 57060000 		.4byte	0x657
 3086 064c 15       		.uleb128 0x15
 3087 064d 01       		.uleb128 0x1
 3088 064e 51       		.byte	0x51
 3089 064f 01       		.uleb128 0x1
 3090 0650 30       		.byte	0x30
 3091 0651 15       		.uleb128 0x15
 3092 0652 01       		.uleb128 0x1
 3093 0653 50       		.byte	0x50
 3094 0654 01       		.uleb128 0x1
 3095 0655 33       		.byte	0x33
 3096 0656 00       		.byte	0
 3097 0657 14       		.uleb128 0x14
 3098 0658 2C010000 		.4byte	.LVL36
 3099 065c 7A130000 		.4byte	0x137a
 3100 0660 74060000 		.4byte	0x674
 3101 0664 15       		.uleb128 0x15
 3102 0665 01       		.uleb128 0x1
 3103 0666 51       		.byte	0x51
 3104 0667 05       		.uleb128 0x5
 3105 0668 03       		.byte	0x3
 3106 0669 20010000 		.4byte	.LC12
 3107 066d 15       		.uleb128 0x15
 3108 066e 01       		.uleb128 0x1
 3109 066f 50       		.byte	0x50
 3110 0670 02       		.uleb128 0x2
 3111 0671 91       		.byte	0x91
 3112 0672 64       		.sleb128 -28
 3113 0673 00       		.byte	0
 3114 0674 14       		.uleb128 0x14
 3115 0675 32010000 		.4byte	.LVL37
 3116 0679 5E130000 		.4byte	0x135e
 3117 067d 88060000 		.4byte	0x688
 3118 0681 15       		.uleb128 0x15
 3119 0682 01       		.uleb128 0x1
 3120 0683 50       		.byte	0x50
 3121 0684 02       		.uleb128 0x2
 3122 0685 91       		.byte	0x91
 3123 0686 64       		.sleb128 -28
 3124 0687 00       		.byte	0
 3125 0688 14       		.uleb128 0x14
 3126 0689 3C010000 		.4byte	.LVL38
 3127 068d 48130000 		.4byte	0x1348
 3128 0691 A0060000 		.4byte	0x6a0
 3129 0695 15       		.uleb128 0x15
 3130 0696 01       		.uleb128 0x1
 3131 0697 51       		.byte	0x51
 3132 0698 01       		.uleb128 0x1
 3133 0699 30       		.byte	0x30
 3134 069a 15       		.uleb128 0x15
 3135 069b 01       		.uleb128 0x1
 3136 069c 50       		.byte	0x50
 3137 069d 01       		.uleb128 0x1
 3138 069e 30       		.byte	0x30
 3139 069f 00       		.byte	0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 170


 3140 06a0 14       		.uleb128 0x14
 3141 06a1 42010000 		.4byte	.LVL39
 3142 06a5 5E130000 		.4byte	0x135e
 3143 06a9 B7060000 		.4byte	0x6b7
 3144 06ad 15       		.uleb128 0x15
 3145 06ae 01       		.uleb128 0x1
 3146 06af 50       		.byte	0x50
 3147 06b0 05       		.uleb128 0x5
 3148 06b1 03       		.byte	0x3
 3149 06b2 38010000 		.4byte	.LC13
 3150 06b6 00       		.byte	0
 3151 06b7 14       		.uleb128 0x14
 3152 06b8 4A010000 		.4byte	.LVL40
 3153 06bc 48130000 		.4byte	0x1348
 3154 06c0 CF060000 		.4byte	0x6cf
 3155 06c4 15       		.uleb128 0x15
 3156 06c5 01       		.uleb128 0x1
 3157 06c6 51       		.byte	0x51
 3158 06c7 01       		.uleb128 0x1
 3159 06c8 30       		.byte	0x30
 3160 06c9 15       		.uleb128 0x15
 3161 06ca 01       		.uleb128 0x1
 3162 06cb 50       		.byte	0x50
 3163 06cc 01       		.uleb128 0x1
 3164 06cd 31       		.byte	0x31
 3165 06ce 00       		.byte	0
 3166 06cf 14       		.uleb128 0x14
 3167 06d0 64010000 		.4byte	.LVL41
 3168 06d4 7A130000 		.4byte	0x137a
 3169 06d8 EC060000 		.4byte	0x6ec
 3170 06dc 15       		.uleb128 0x15
 3171 06dd 01       		.uleb128 0x1
 3172 06de 51       		.byte	0x51
 3173 06df 05       		.uleb128 0x5
 3174 06e0 03       		.byte	0x3
 3175 06e1 50010000 		.4byte	.LC14
 3176 06e5 15       		.uleb128 0x15
 3177 06e6 01       		.uleb128 0x1
 3178 06e7 50       		.byte	0x50
 3179 06e8 02       		.uleb128 0x2
 3180 06e9 91       		.byte	0x91
 3181 06ea 64       		.sleb128 -28
 3182 06eb 00       		.byte	0
 3183 06ec 14       		.uleb128 0x14
 3184 06ed 6A010000 		.4byte	.LVL42
 3185 06f1 5E130000 		.4byte	0x135e
 3186 06f5 00070000 		.4byte	0x700
 3187 06f9 15       		.uleb128 0x15
 3188 06fa 01       		.uleb128 0x1
 3189 06fb 50       		.byte	0x50
 3190 06fc 02       		.uleb128 0x2
 3191 06fd 91       		.byte	0x91
 3192 06fe 64       		.sleb128 -28
 3193 06ff 00       		.byte	0
 3194 0700 14       		.uleb128 0x14
 3195 0701 72010000 		.4byte	.LVL43
 3196 0705 48130000 		.4byte	0x1348
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 171


 3197 0709 18070000 		.4byte	0x718
 3198 070d 15       		.uleb128 0x15
 3199 070e 01       		.uleb128 0x1
 3200 070f 51       		.byte	0x51
 3201 0710 01       		.uleb128 0x1
 3202 0711 30       		.byte	0x30
 3203 0712 15       		.uleb128 0x15
 3204 0713 01       		.uleb128 0x1
 3205 0714 50       		.byte	0x50
 3206 0715 01       		.uleb128 0x1
 3207 0716 32       		.byte	0x32
 3208 0717 00       		.byte	0
 3209 0718 14       		.uleb128 0x14
 3210 0719 80010000 		.4byte	.LVL44
 3211 071d 7A130000 		.4byte	0x137a
 3212 0721 35070000 		.4byte	0x735
 3213 0725 15       		.uleb128 0x15
 3214 0726 01       		.uleb128 0x1
 3215 0727 51       		.byte	0x51
 3216 0728 05       		.uleb128 0x5
 3217 0729 03       		.byte	0x3
 3218 072a 64010000 		.4byte	.LC15
 3219 072e 15       		.uleb128 0x15
 3220 072f 01       		.uleb128 0x1
 3221 0730 50       		.byte	0x50
 3222 0731 02       		.uleb128 0x2
 3223 0732 91       		.byte	0x91
 3224 0733 64       		.sleb128 -28
 3225 0734 00       		.byte	0
 3226 0735 14       		.uleb128 0x14
 3227 0736 86010000 		.4byte	.LVL45
 3228 073a 5E130000 		.4byte	0x135e
 3229 073e 49070000 		.4byte	0x749
 3230 0742 15       		.uleb128 0x15
 3231 0743 01       		.uleb128 0x1
 3232 0744 50       		.byte	0x50
 3233 0745 02       		.uleb128 0x2
 3234 0746 91       		.byte	0x91
 3235 0747 64       		.sleb128 -28
 3236 0748 00       		.byte	0
 3237 0749 14       		.uleb128 0x14
 3238 074a 8E010000 		.4byte	.LVL46
 3239 074e 48130000 		.4byte	0x1348
 3240 0752 61070000 		.4byte	0x761
 3241 0756 15       		.uleb128 0x15
 3242 0757 01       		.uleb128 0x1
 3243 0758 51       		.byte	0x51
 3244 0759 01       		.uleb128 0x1
 3245 075a 30       		.byte	0x30
 3246 075b 15       		.uleb128 0x15
 3247 075c 01       		.uleb128 0x1
 3248 075d 50       		.byte	0x50
 3249 075e 01       		.uleb128 0x1
 3250 075f 33       		.byte	0x33
 3251 0760 00       		.byte	0
 3252 0761 14       		.uleb128 0x14
 3253 0762 98010000 		.4byte	.LVL47
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 172


 3254 0766 7A130000 		.4byte	0x137a
 3255 076a 7E070000 		.4byte	0x77e
 3256 076e 15       		.uleb128 0x15
 3257 076f 01       		.uleb128 0x1
 3258 0770 51       		.byte	0x51
 3259 0771 05       		.uleb128 0x5
 3260 0772 03       		.byte	0x3
 3261 0773 78010000 		.4byte	.LC16
 3262 0777 15       		.uleb128 0x15
 3263 0778 01       		.uleb128 0x1
 3264 0779 50       		.byte	0x50
 3265 077a 02       		.uleb128 0x2
 3266 077b 91       		.byte	0x91
 3267 077c 64       		.sleb128 -28
 3268 077d 00       		.byte	0
 3269 077e 16       		.uleb128 0x16
 3270 077f 9E010000 		.4byte	.LVL48
 3271 0783 5E130000 		.4byte	0x135e
 3272 0787 15       		.uleb128 0x15
 3273 0788 01       		.uleb128 0x1
 3274 0789 50       		.byte	0x50
 3275 078a 02       		.uleb128 0x2
 3276 078b 91       		.byte	0x91
 3277 078c 64       		.sleb128 -28
 3278 078d 00       		.byte	0
 3279 078e 00       		.byte	0
 3280 078f 18       		.uleb128 0x18
 3281 0790 ED000000 		.4byte	0xed
 3282 0794 9F070000 		.4byte	0x79f
 3283 0798 19       		.uleb128 0x19
 3284 0799 F4000000 		.4byte	0xf4
 3285 079d 13       		.byte	0x13
 3286 079e 00       		.byte	0
 3287 079f 12       		.uleb128 0x12
 3288 07a0 A0010000 		.4byte	.LASF64
 3289 07a4 01       		.byte	0x1
 3290 07a5 E5       		.byte	0xe5
 3291 07a6 00000000 		.4byte	.LFB121
 3292 07aa A4000000 		.4byte	.LFE121-.LFB121
 3293 07ae 01       		.uleb128 0x1
 3294 07af 9C       		.byte	0x9c
 3295 07b0 E1070000 		.4byte	0x7e1
 3296 07b4 1A       		.uleb128 0x1a
 3297 07b5 6100     		.ascii	"a\000"
 3298 07b7 01       		.byte	0x1
 3299 07b8 E7       		.byte	0xe7
 3300 07b9 D5000000 		.4byte	0xd5
 3301 07bd 21000000 		.4byte	.LLST1
 3302 07c1 1A       		.uleb128 0x1a
 3303 07c2 6200     		.ascii	"b\000"
 3304 07c4 01       		.byte	0x1
 3305 07c5 E7       		.byte	0xe7
 3306 07c6 D5000000 		.4byte	0xd5
 3307 07ca 3F000000 		.4byte	.LLST2
 3308 07ce 1B       		.uleb128 0x1b
 3309 07cf 3E000000 		.4byte	.LVL51
 3310 07d3 95130000 		.4byte	0x1395
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 173


 3311 07d7 1B       		.uleb128 0x1b
 3312 07d8 96000000 		.4byte	.LVL54
 3313 07dc A6130000 		.4byte	0x13a6
 3314 07e0 00       		.byte	0
 3315 07e1 1C       		.uleb128 0x1c
 3316 07e2 DA020000 		.4byte	.LASF65
 3317 07e6 01       		.byte	0x1
 3318 07e7 0501     		.2byte	0x105
 3319 07e9 00000000 		.4byte	.LFB122
 3320 07ed E0000000 		.4byte	.LFE122-.LFB122
 3321 07f1 01       		.uleb128 0x1
 3322 07f2 9C       		.byte	0x9c
 3323 07f3 BB080000 		.4byte	0x8bb
 3324 07f7 1D       		.uleb128 0x1d
 3325 07f8 73747200 		.ascii	"str\000"
 3326 07fc 01       		.byte	0x1
 3327 07fd 0701     		.2byte	0x107
 3328 07ff 8F070000 		.4byte	0x78f
 3329 0803 02       		.uleb128 0x2
 3330 0804 91       		.byte	0x91
 3331 0805 64       		.sleb128 -28
 3332 0806 14       		.uleb128 0x14
 3333 0807 1C000000 		.4byte	.LVL55
 3334 080b 48130000 		.4byte	0x1348
 3335 080f 1E080000 		.4byte	0x81e
 3336 0813 15       		.uleb128 0x15
 3337 0814 01       		.uleb128 0x1
 3338 0815 51       		.byte	0x51
 3339 0816 01       		.uleb128 0x1
 3340 0817 3B       		.byte	0x3b
 3341 0818 15       		.uleb128 0x15
 3342 0819 01       		.uleb128 0x1
 3343 081a 50       		.byte	0x50
 3344 081b 01       		.uleb128 0x1
 3345 081c 32       		.byte	0x32
 3346 081d 00       		.byte	0
 3347 081e 14       		.uleb128 0x14
 3348 081f 26000000 		.4byte	.LVL56
 3349 0823 48130000 		.4byte	0x1348
 3350 0827 36080000 		.4byte	0x836
 3351 082b 15       		.uleb128 0x15
 3352 082c 01       		.uleb128 0x1
 3353 082d 51       		.byte	0x51
 3354 082e 01       		.uleb128 0x1
 3355 082f 3B       		.byte	0x3b
 3356 0830 15       		.uleb128 0x15
 3357 0831 01       		.uleb128 0x1
 3358 0832 50       		.byte	0x50
 3359 0833 01       		.uleb128 0x1
 3360 0834 33       		.byte	0x33
 3361 0835 00       		.byte	0
 3362 0836 14       		.uleb128 0x14
 3363 0837 4E000000 		.4byte	.LVL57
 3364 083b 7A130000 		.4byte	0x137a
 3365 083f 53080000 		.4byte	0x853
 3366 0843 15       		.uleb128 0x15
 3367 0844 01       		.uleb128 0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 174


 3368 0845 51       		.byte	0x51
 3369 0846 05       		.uleb128 0x5
 3370 0847 03       		.byte	0x3
 3371 0848 8C010000 		.4byte	.LC17
 3372 084c 15       		.uleb128 0x15
 3373 084d 01       		.uleb128 0x1
 3374 084e 50       		.byte	0x50
 3375 084f 02       		.uleb128 0x2
 3376 0850 91       		.byte	0x91
 3377 0851 64       		.sleb128 -28
 3378 0852 00       		.byte	0
 3379 0853 14       		.uleb128 0x14
 3380 0854 72000000 		.4byte	.LVL61
 3381 0858 7A130000 		.4byte	0x137a
 3382 085c 70080000 		.4byte	0x870
 3383 0860 15       		.uleb128 0x15
 3384 0861 01       		.uleb128 0x1
 3385 0862 51       		.byte	0x51
 3386 0863 05       		.uleb128 0x5
 3387 0864 03       		.byte	0x3
 3388 0865 98010000 		.4byte	.LC18
 3389 0869 15       		.uleb128 0x15
 3390 086a 01       		.uleb128 0x1
 3391 086b 50       		.byte	0x50
 3392 086c 02       		.uleb128 0x2
 3393 086d 91       		.byte	0x91
 3394 086e 64       		.sleb128 -28
 3395 086f 00       		.byte	0
 3396 0870 14       		.uleb128 0x14
 3397 0871 96000000 		.4byte	.LVL65
 3398 0875 7A130000 		.4byte	0x137a
 3399 0879 8D080000 		.4byte	0x88d
 3400 087d 15       		.uleb128 0x15
 3401 087e 01       		.uleb128 0x1
 3402 087f 51       		.byte	0x51
 3403 0880 05       		.uleb128 0x5
 3404 0881 03       		.byte	0x3
 3405 0882 A4010000 		.4byte	.LC19
 3406 0886 15       		.uleb128 0x15
 3407 0887 01       		.uleb128 0x1
 3408 0888 50       		.byte	0x50
 3409 0889 02       		.uleb128 0x2
 3410 088a 91       		.byte	0x91
 3411 088b 64       		.sleb128 -28
 3412 088c 00       		.byte	0
 3413 088d 14       		.uleb128 0x14
 3414 088e BA000000 		.4byte	.LVL69
 3415 0892 7A130000 		.4byte	0x137a
 3416 0896 AA080000 		.4byte	0x8aa
 3417 089a 15       		.uleb128 0x15
 3418 089b 01       		.uleb128 0x1
 3419 089c 51       		.byte	0x51
 3420 089d 05       		.uleb128 0x5
 3421 089e 03       		.byte	0x3
 3422 089f B0010000 		.4byte	.LC20
 3423 08a3 15       		.uleb128 0x15
 3424 08a4 01       		.uleb128 0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 175


 3425 08a5 50       		.byte	0x50
 3426 08a6 02       		.uleb128 0x2
 3427 08a7 91       		.byte	0x91
 3428 08a8 64       		.sleb128 -28
 3429 08a9 00       		.byte	0
 3430 08aa 16       		.uleb128 0x16
 3431 08ab C0000000 		.4byte	.LVL70
 3432 08af 5E130000 		.4byte	0x135e
 3433 08b3 15       		.uleb128 0x15
 3434 08b4 01       		.uleb128 0x1
 3435 08b5 50       		.byte	0x50
 3436 08b6 02       		.uleb128 0x2
 3437 08b7 91       		.byte	0x91
 3438 08b8 64       		.sleb128 -28
 3439 08b9 00       		.byte	0
 3440 08ba 00       		.byte	0
 3441 08bb 1C       		.uleb128 0x1c
 3442 08bc B5050000 		.4byte	.LASF66
 3443 08c0 01       		.byte	0x1
 3444 08c1 1D01     		.2byte	0x11d
 3445 08c3 00000000 		.4byte	.LFB123
 3446 08c7 4C070000 		.4byte	.LFE123-.LFB123
 3447 08cb 01       		.uleb128 0x1
 3448 08cc 9C       		.byte	0x9c
 3449 08cd B1110000 		.4byte	0x11b1
 3450 08d1 1E       		.uleb128 0x1e
 3451 08d2 EA010000 		.4byte	.LASF67
 3452 08d6 01       		.byte	0x1
 3453 08d7 1D01     		.2byte	0x11d
 3454 08d9 FB000000 		.4byte	0xfb
 3455 08dd 84000000 		.4byte	.LLST3
 3456 08e1 1D       		.uleb128 0x1d
 3457 08e2 73747200 		.ascii	"str\000"
 3458 08e6 01       		.byte	0x1
 3459 08e7 1F01     		.2byte	0x11f
 3460 08e9 8F070000 		.4byte	0x78f
 3461 08ed 02       		.uleb128 0x2
 3462 08ee 91       		.byte	0x91
 3463 08ef 44       		.sleb128 -60
 3464 08f0 1F       		.uleb128 0x1f
 3465 08f1 8F030000 		.4byte	.LASF68
 3466 08f5 01       		.byte	0x1
 3467 08f6 2001     		.2byte	0x120
 3468 08f8 A5000000 		.4byte	0xa5
 3469 08fc 02       		.uleb128 0x2
 3470 08fd 91       		.byte	0x91
 3471 08fe 43       		.sleb128 -61
 3472 08ff 20       		.uleb128 0x20
 3473 0900 E8040000 		.4byte	.LASF69
 3474 0904 01       		.byte	0x1
 3475 0905 2401     		.2byte	0x124
 3476 0907 A5000000 		.4byte	0xa5
 3477 090b A5000000 		.4byte	.LLST4
 3478 090f 20       		.uleb128 0x20
 3479 0910 1C010000 		.4byte	.LASF70
 3480 0914 01       		.byte	0x1
 3481 0915 2501     		.2byte	0x125
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 176


 3482 0917 A5000000 		.4byte	0xa5
 3483 091b 12010000 		.4byte	.LLST5
 3484 091f 1F       		.uleb128 0x1f
 3485 0920 AC050000 		.4byte	.LASF71
 3486 0924 01       		.byte	0x1
 3487 0925 2601     		.2byte	0x126
 3488 0927 A5000000 		.4byte	0xa5
 3489 092b 02       		.uleb128 0x2
 3490 092c 91       		.byte	0x91
 3491 092d 42       		.sleb128 -62
 3492 092e 1F       		.uleb128 0x1f
 3493 092f 36030000 		.4byte	.LASF72
 3494 0933 01       		.byte	0x1
 3495 0934 2701     		.2byte	0x127
 3496 0936 67010000 		.4byte	0x167
 3497 093a 03       		.uleb128 0x3
 3498 093b 91       		.byte	0x91
 3499 093c BC7F     		.sleb128 -68
 3500 093e 1F       		.uleb128 0x1f
 3501 093f CA050000 		.4byte	.LASF73
 3502 0943 01       		.byte	0x1
 3503 0944 2701     		.2byte	0x127
 3504 0946 67010000 		.4byte	0x167
 3505 094a 03       		.uleb128 0x3
 3506 094b 91       		.byte	0x91
 3507 094c B87F     		.sleb128 -72
 3508 094e 21       		.uleb128 0x21
 3509 094f 70686900 		.ascii	"phi\000"
 3510 0953 01       		.byte	0x1
 3511 0954 2801     		.2byte	0x128
 3512 0956 1C010000 		.4byte	0x11c
 3513 095a 75010000 		.4byte	.LLST6
 3514 095e 20       		.uleb128 0x20
 3515 095f 05010000 		.4byte	.LASF74
 3516 0963 01       		.byte	0x1
 3517 0964 2901     		.2byte	0x129
 3518 0966 1C010000 		.4byte	0x11c
 3519 096a A1010000 		.4byte	.LLST7
 3520 096e 1D       		.uleb128 0x1d
 3521 096f 726D7300 		.ascii	"rms\000"
 3522 0973 01       		.byte	0x1
 3523 0974 2A01     		.2byte	0x12a
 3524 0976 B1110000 		.4byte	0x11b1
 3525 097a 03       		.uleb128 0x3
 3526 097b 91       		.byte	0x91
 3527 097c B07F     		.sleb128 -80
 3528 097e 20       		.uleb128 0x20
 3529 097f FE020000 		.4byte	.LASF75
 3530 0983 01       		.byte	0x1
 3531 0984 2A01     		.2byte	0x12a
 3532 0986 67010000 		.4byte	0x167
 3533 098a E5010000 		.4byte	.LLST8
 3534 098e 21       		.uleb128 0x21
 3535 098f 64697200 		.ascii	"dir\000"
 3536 0993 01       		.byte	0x1
 3537 0994 2C01     		.2byte	0x12c
 3538 0996 1C010000 		.4byte	0x11c
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 177


 3539 099a 19020000 		.4byte	.LLST9
 3540 099e 20       		.uleb128 0x20
 3541 099f 9D020000 		.4byte	.LASF76
 3542 09a3 01       		.byte	0x1
 3543 09a4 2D01     		.2byte	0x12d
 3544 09a6 1C010000 		.4byte	0x11c
 3545 09aa 45020000 		.4byte	.LLST10
 3546 09ae 1F       		.uleb128 0x1f
 3547 09af 26020000 		.4byte	.LASF77
 3548 09b3 01       		.byte	0x1
 3549 09b4 2E01     		.2byte	0x12e
 3550 09b6 A5000000 		.4byte	0xa5
 3551 09ba 01       		.uleb128 0x1
 3552 09bb 5A       		.byte	0x5a
 3553 09bc 20       		.uleb128 0x20
 3554 09bd 33020000 		.4byte	.LASF78
 3555 09c1 01       		.byte	0x1
 3556 09c2 2F01     		.2byte	0x12f
 3557 09c4 A5000000 		.4byte	0xa5
 3558 09c8 B1020000 		.4byte	.LLST11
 3559 09cc 20       		.uleb128 0x20
 3560 09cd AA020000 		.4byte	.LASF79
 3561 09d1 01       		.byte	0x1
 3562 09d2 3101     		.2byte	0x131
 3563 09d4 1C010000 		.4byte	0x11c
 3564 09d8 F0020000 		.4byte	.LLST12
 3565 09dc 20       		.uleb128 0x20
 3566 09dd 88040000 		.4byte	.LASF80
 3567 09e1 01       		.byte	0x1
 3568 09e2 3201     		.2byte	0x132
 3569 09e4 1C010000 		.4byte	0x11c
 3570 09e8 1C030000 		.4byte	.LLST13
 3571 09ec 1F       		.uleb128 0x1f
 3572 09ed 4A000000 		.4byte	.LASF81
 3573 09f1 01       		.byte	0x1
 3574 09f2 3601     		.2byte	0x136
 3575 09f4 C9000000 		.4byte	0xc9
 3576 09f8 03       		.uleb128 0x3
 3577 09f9 91       		.byte	0x91
 3578 09fa AF7F     		.sleb128 -81
 3579 09fc 21       		.uleb128 0x21
 3580 09fd 6900     		.ascii	"i\000"
 3581 09ff 01       		.byte	0x1
 3582 0a00 3701     		.2byte	0x137
 3583 0a02 A5000000 		.4byte	0xa5
 3584 0a06 48030000 		.4byte	.LLST14
 3585 0a0a 22       		.uleb128 0x22
 3586 0a0b 5B060000 		.4byte	.LASF82
 3587 0a0f 01       		.byte	0x1
 3588 0a10 3901     		.2byte	0x139
 3589 0a12 C1110000 		.4byte	0x11c1
 3590 0a16 05       		.byte	0x5
 3591 0a17 23       		.uleb128 0x23
 3592 0a18 B3020000 		.4byte	0x2b3
 3593 0a1c 76010000 		.4byte	.LBB4
 3594 0a20 14000000 		.4byte	.LBE4-.LBB4
 3595 0a24 01       		.byte	0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 178


 3596 0a25 8301     		.2byte	0x183
 3597 0a27 4F0A0000 		.4byte	0xa4f
 3598 0a2b 24       		.uleb128 0x24
 3599 0a2c CF020000 		.4byte	0x2cf
 3600 0a30 BE030000 		.4byte	.LLST15
 3601 0a34 24       		.uleb128 0x24
 3602 0a35 C4020000 		.4byte	0x2c4
 3603 0a39 D6030000 		.4byte	.LLST16
 3604 0a3d 16       		.uleb128 0x16
 3605 0a3e 84010000 		.4byte	.LVL110
 3606 0a42 B7130000 		.4byte	0x13b7
 3607 0a46 15       		.uleb128 0x15
 3608 0a47 01       		.uleb128 0x1
 3609 0a48 50       		.byte	0x50
 3610 0a49 03       		.uleb128 0x3
 3611 0a4a F5       		.byte	0xf5
 3612 0a4b 04       		.uleb128 0x4
 3613 0a4c 2C       		.uleb128 0x2c
 3614 0a4d 00       		.byte	0
 3615 0a4e 00       		.byte	0
 3616 0a4f 1B       		.uleb128 0x1b
 3617 0a50 10000000 		.4byte	.LVL74
 3618 0a54 27030000 		.4byte	0x327
 3619 0a58 1B       		.uleb128 0x1b
 3620 0a59 26000000 		.4byte	.LVL75
 3621 0a5d 95130000 		.4byte	0x1395
 3622 0a61 1B       		.uleb128 0x1b
 3623 0a62 2C000000 		.4byte	.LVL76
 3624 0a66 A6130000 		.4byte	0x13a6
 3625 0a6a 1B       		.uleb128 0x1b
 3626 0a6b 3E000000 		.4byte	.LVL78
 3627 0a6f CD130000 		.4byte	0x13cd
 3628 0a73 14       		.uleb128 0x14
 3629 0a74 48000000 		.4byte	.LVL79
 3630 0a78 D8130000 		.4byte	0x13d8
 3631 0a7c 860A0000 		.4byte	0xa86
 3632 0a80 15       		.uleb128 0x15
 3633 0a81 01       		.uleb128 0x1
 3634 0a82 50       		.byte	0x50
 3635 0a83 01       		.uleb128 0x1
 3636 0a84 35       		.byte	0x35
 3637 0a85 00       		.byte	0
 3638 0a86 14       		.uleb128 0x14
 3639 0a87 5A000000 		.4byte	.LVL80
 3640 0a8b EA130000 		.4byte	0x13ea
 3641 0a8f A40A0000 		.4byte	0xaa4
 3642 0a93 15       		.uleb128 0x15
 3643 0a94 01       		.uleb128 0x1
 3644 0a95 53       		.byte	0x53
 3645 0a96 01       		.uleb128 0x1
 3646 0a97 30       		.byte	0x30
 3647 0a98 15       		.uleb128 0x15
 3648 0a99 01       		.uleb128 0x1
 3649 0a9a 52       		.byte	0x52
 3650 0a9b 01       		.uleb128 0x1
 3651 0a9c 30       		.byte	0x30
 3652 0a9d 15       		.uleb128 0x15
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 179


 3653 0a9e 01       		.uleb128 0x1
 3654 0a9f 51       		.byte	0x51
 3655 0aa0 02       		.uleb128 0x2
 3656 0aa1 91       		.byte	0x91
 3657 0aa2 43       		.sleb128 -61
 3658 0aa3 00       		.byte	0
 3659 0aa4 1B       		.uleb128 0x1b
 3660 0aa5 74000000 		.4byte	.LVL81
 3661 0aa9 27030000 		.4byte	0x327
 3662 0aad 14       		.uleb128 0x14
 3663 0aae 84000000 		.4byte	.LVL82
 3664 0ab2 EA130000 		.4byte	0x13ea
 3665 0ab6 CB0A0000 		.4byte	0xacb
 3666 0aba 15       		.uleb128 0x15
 3667 0abb 01       		.uleb128 0x1
 3668 0abc 53       		.byte	0x53
 3669 0abd 01       		.uleb128 0x1
 3670 0abe 30       		.byte	0x30
 3671 0abf 15       		.uleb128 0x15
 3672 0ac0 01       		.uleb128 0x1
 3673 0ac1 52       		.byte	0x52
 3674 0ac2 01       		.uleb128 0x1
 3675 0ac3 30       		.byte	0x30
 3676 0ac4 15       		.uleb128 0x15
 3677 0ac5 01       		.uleb128 0x1
 3678 0ac6 51       		.byte	0x51
 3679 0ac7 02       		.uleb128 0x2
 3680 0ac8 91       		.byte	0x91
 3681 0ac9 43       		.sleb128 -61
 3682 0aca 00       		.byte	0
 3683 0acb 1B       		.uleb128 0x1b
 3684 0acc 9C000000 		.4byte	.LVL83
 3685 0ad0 27030000 		.4byte	0x327
 3686 0ad4 1B       		.uleb128 0x1b
 3687 0ad5 A4000000 		.4byte	.LVL84
 3688 0ad9 19140000 		.4byte	0x1419
 3689 0add 14       		.uleb128 0x14
 3690 0ade B0000000 		.4byte	.LVL85
 3691 0ae2 34140000 		.4byte	0x1434
 3692 0ae6 F00A0000 		.4byte	0xaf0
 3693 0aea 15       		.uleb128 0x15
 3694 0aeb 01       		.uleb128 0x1
 3695 0aec 50       		.byte	0x50
 3696 0aed 01       		.uleb128 0x1
 3697 0aee 31       		.byte	0x31
 3698 0aef 00       		.byte	0
 3699 0af0 14       		.uleb128 0x14
 3700 0af1 C0000000 		.4byte	.LVL86
 3701 0af5 EA130000 		.4byte	0x13ea
 3702 0af9 0E0B0000 		.4byte	0xb0e
 3703 0afd 15       		.uleb128 0x15
 3704 0afe 01       		.uleb128 0x1
 3705 0aff 53       		.byte	0x53
 3706 0b00 01       		.uleb128 0x1
 3707 0b01 30       		.byte	0x30
 3708 0b02 15       		.uleb128 0x15
 3709 0b03 01       		.uleb128 0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 180


 3710 0b04 52       		.byte	0x52
 3711 0b05 01       		.uleb128 0x1
 3712 0b06 30       		.byte	0x30
 3713 0b07 15       		.uleb128 0x15
 3714 0b08 01       		.uleb128 0x1
 3715 0b09 51       		.byte	0x51
 3716 0b0a 02       		.uleb128 0x2
 3717 0b0b 91       		.byte	0x91
 3718 0b0c 42       		.sleb128 -62
 3719 0b0d 00       		.byte	0
 3720 0b0e 14       		.uleb128 0x14
 3721 0b0f D0000000 		.4byte	.LVL87
 3722 0b13 EA130000 		.4byte	0x13ea
 3723 0b17 2C0B0000 		.4byte	0xb2c
 3724 0b1b 15       		.uleb128 0x15
 3725 0b1c 01       		.uleb128 0x1
 3726 0b1d 53       		.byte	0x53
 3727 0b1e 01       		.uleb128 0x1
 3728 0b1f 30       		.byte	0x30
 3729 0b20 15       		.uleb128 0x15
 3730 0b21 01       		.uleb128 0x1
 3731 0b22 52       		.byte	0x52
 3732 0b23 02       		.uleb128 0x2
 3733 0b24 09       		.byte	0x9
 3734 0b25 FF       		.byte	0xff
 3735 0b26 15       		.uleb128 0x15
 3736 0b27 01       		.uleb128 0x1
 3737 0b28 51       		.byte	0x51
 3738 0b29 01       		.uleb128 0x1
 3739 0b2a 30       		.byte	0x30
 3740 0b2b 00       		.byte	0
 3741 0b2c 14       		.uleb128 0x14
 3742 0b2d E8000000 		.4byte	.LVL91
 3743 0b31 45140000 		.4byte	0x1445
 3744 0b35 520B0000 		.4byte	0xb52
 3745 0b39 15       		.uleb128 0x15
 3746 0b3a 01       		.uleb128 0x1
 3747 0b3b 53       		.byte	0x53
 3748 0b3c 02       		.uleb128 0x2
 3749 0b3d 08       		.byte	0x8
 3750 0b3e 80       		.byte	0x80
 3751 0b3f 15       		.uleb128 0x15
 3752 0b40 01       		.uleb128 0x1
 3753 0b41 52       		.byte	0x52
 3754 0b42 02       		.uleb128 0x2
 3755 0b43 74       		.byte	0x74
 3756 0b44 00       		.sleb128 0
 3757 0b45 15       		.uleb128 0x15
 3758 0b46 01       		.uleb128 0x1
 3759 0b47 51       		.byte	0x51
 3760 0b48 02       		.uleb128 0x2
 3761 0b49 75       		.byte	0x75
 3762 0b4a 00       		.sleb128 0
 3763 0b4b 15       		.uleb128 0x15
 3764 0b4c 01       		.uleb128 0x1
 3765 0b4d 50       		.byte	0x50
 3766 0b4e 02       		.uleb128 0x2
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 181


 3767 0b4f 76       		.byte	0x76
 3768 0b50 00       		.sleb128 0
 3769 0b51 00       		.byte	0
 3770 0b52 14       		.uleb128 0x14
 3771 0b53 F2000000 		.4byte	.LVL92
 3772 0b57 66140000 		.4byte	0x1466
 3773 0b5b 730B0000 		.4byte	0xb73
 3774 0b5f 15       		.uleb128 0x15
 3775 0b60 01       		.uleb128 0x1
 3776 0b61 52       		.byte	0x52
 3777 0b62 03       		.uleb128 0x3
 3778 0b63 91       		.byte	0x91
 3779 0b64 BC7F     		.sleb128 -68
 3780 0b66 15       		.uleb128 0x15
 3781 0b67 01       		.uleb128 0x1
 3782 0b68 51       		.byte	0x51
 3783 0b69 02       		.uleb128 0x2
 3784 0b6a 08       		.byte	0x8
 3785 0b6b 80       		.byte	0x80
 3786 0b6c 15       		.uleb128 0x15
 3787 0b6d 01       		.uleb128 0x1
 3788 0b6e 50       		.byte	0x50
 3789 0b6f 02       		.uleb128 0x2
 3790 0b70 74       		.byte	0x74
 3791 0b71 00       		.sleb128 0
 3792 0b72 00       		.byte	0
 3793 0b73 14       		.uleb128 0x14
 3794 0b74 00010000 		.4byte	.LVL93
 3795 0b78 45140000 		.4byte	0x1445
 3796 0b7c 990B0000 		.4byte	0xb99
 3797 0b80 15       		.uleb128 0x15
 3798 0b81 01       		.uleb128 0x1
 3799 0b82 53       		.byte	0x53
 3800 0b83 02       		.uleb128 0x2
 3801 0b84 08       		.byte	0x8
 3802 0b85 80       		.byte	0x80
 3803 0b86 15       		.uleb128 0x15
 3804 0b87 01       		.uleb128 0x1
 3805 0b88 52       		.byte	0x52
 3806 0b89 02       		.uleb128 0x2
 3807 0b8a 74       		.byte	0x74
 3808 0b8b 00       		.sleb128 0
 3809 0b8c 15       		.uleb128 0x15
 3810 0b8d 01       		.uleb128 0x1
 3811 0b8e 51       		.byte	0x51
 3812 0b8f 02       		.uleb128 0x2
 3813 0b90 75       		.byte	0x75
 3814 0b91 00       		.sleb128 0
 3815 0b92 15       		.uleb128 0x15
 3816 0b93 01       		.uleb128 0x1
 3817 0b94 50       		.byte	0x50
 3818 0b95 02       		.uleb128 0x2
 3819 0b96 76       		.byte	0x76
 3820 0b97 20       		.sleb128 32
 3821 0b98 00       		.byte	0
 3822 0b99 14       		.uleb128 0x14
 3823 0b9a 0A010000 		.4byte	.LVL94
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 182


 3824 0b9e 66140000 		.4byte	0x1466
 3825 0ba2 BA0B0000 		.4byte	0xbba
 3826 0ba6 15       		.uleb128 0x15
 3827 0ba7 01       		.uleb128 0x1
 3828 0ba8 52       		.byte	0x52
 3829 0ba9 03       		.uleb128 0x3
 3830 0baa 91       		.byte	0x91
 3831 0bab B87F     		.sleb128 -72
 3832 0bad 15       		.uleb128 0x15
 3833 0bae 01       		.uleb128 0x1
 3834 0baf 51       		.byte	0x51
 3835 0bb0 02       		.uleb128 0x2
 3836 0bb1 08       		.byte	0x8
 3837 0bb2 80       		.byte	0x80
 3838 0bb3 15       		.uleb128 0x15
 3839 0bb4 01       		.uleb128 0x1
 3840 0bb5 50       		.byte	0x50
 3841 0bb6 02       		.uleb128 0x2
 3842 0bb7 74       		.byte	0x74
 3843 0bb8 00       		.sleb128 0
 3844 0bb9 00       		.byte	0
 3845 0bba 1B       		.uleb128 0x1b
 3846 0bbb 26010000 		.4byte	.LVL97
 3847 0bbf 82140000 		.4byte	0x1482
 3848 0bc3 14       		.uleb128 0x14
 3849 0bc4 50010000 		.4byte	.LVL103
 3850 0bc8 9C140000 		.4byte	0x149c
 3851 0bcc DE0B0000 		.4byte	0xbde
 3852 0bd0 15       		.uleb128 0x15
 3853 0bd1 01       		.uleb128 0x1
 3854 0bd2 52       		.byte	0x52
 3855 0bd3 03       		.uleb128 0x3
 3856 0bd4 91       		.byte	0x91
 3857 0bd5 B07F     		.sleb128 -80
 3858 0bd7 15       		.uleb128 0x15
 3859 0bd8 01       		.uleb128 0x1
 3860 0bd9 51       		.byte	0x51
 3861 0bda 02       		.uleb128 0x2
 3862 0bdb 08       		.byte	0x8
 3863 0bdc 80       		.byte	0x80
 3864 0bdd 00       		.byte	0
 3865 0bde 14       		.uleb128 0x14
 3866 0bdf 5A010000 		.4byte	.LVL104
 3867 0be3 9C140000 		.4byte	0x149c
 3868 0be7 F90B0000 		.4byte	0xbf9
 3869 0beb 15       		.uleb128 0x15
 3870 0bec 01       		.uleb128 0x1
 3871 0bed 52       		.byte	0x52
 3872 0bee 03       		.uleb128 0x3
 3873 0bef 91       		.byte	0x91
 3874 0bf0 B47F     		.sleb128 -76
 3875 0bf2 15       		.uleb128 0x15
 3876 0bf3 01       		.uleb128 0x1
 3877 0bf4 51       		.byte	0x51
 3878 0bf5 02       		.uleb128 0x2
 3879 0bf6 08       		.byte	0x8
 3880 0bf7 80       		.byte	0x80
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 183


 3881 0bf8 00       		.byte	0
 3882 0bf9 1B       		.uleb128 0x1b
 3883 0bfa A6010000 		.4byte	.LVL117
 3884 0bfe 82140000 		.4byte	0x1482
 3885 0c02 14       		.uleb128 0x14
 3886 0c03 DC010000 		.4byte	.LVL124
 3887 0c07 B8140000 		.4byte	0x14b8
 3888 0c0b 1F0C0000 		.4byte	0xc1f
 3889 0c0f 15       		.uleb128 0x15
 3890 0c10 01       		.uleb128 0x1
 3891 0c11 53       		.byte	0x53
 3892 0c12 01       		.uleb128 0x1
 3893 0c13 30       		.byte	0x30
 3894 0c14 15       		.uleb128 0x15
 3895 0c15 01       		.uleb128 0x1
 3896 0c16 52       		.byte	0x52
 3897 0c17 01       		.uleb128 0x1
 3898 0c18 30       		.byte	0x30
 3899 0c19 15       		.uleb128 0x15
 3900 0c1a 01       		.uleb128 0x1
 3901 0c1b 51       		.byte	0x51
 3902 0c1c 01       		.uleb128 0x1
 3903 0c1d 30       		.byte	0x30
 3904 0c1e 00       		.byte	0
 3905 0c1f 14       		.uleb128 0x14
 3906 0c20 E2010000 		.4byte	.LVL125
 3907 0c24 34140000 		.4byte	0x1434
 3908 0c28 320C0000 		.4byte	0xc32
 3909 0c2c 15       		.uleb128 0x15
 3910 0c2d 01       		.uleb128 0x1
 3911 0c2e 50       		.byte	0x50
 3912 0c2f 01       		.uleb128 0x1
 3913 0c30 30       		.byte	0x30
 3914 0c31 00       		.byte	0
 3915 0c32 14       		.uleb128 0x14
 3916 0c33 66020000 		.4byte	.LVL139
 3917 0c37 48130000 		.4byte	0x1348
 3918 0c3b 4B0C0000 		.4byte	0xc4b
 3919 0c3f 15       		.uleb128 0x15
 3920 0c40 01       		.uleb128 0x1
 3921 0c41 51       		.byte	0x51
 3922 0c42 02       		.uleb128 0x2
 3923 0c43 7A       		.byte	0x7a
 3924 0c44 00       		.sleb128 0
 3925 0c45 15       		.uleb128 0x15
 3926 0c46 01       		.uleb128 0x1
 3927 0c47 50       		.byte	0x50
 3928 0c48 01       		.uleb128 0x1
 3929 0c49 30       		.byte	0x30
 3930 0c4a 00       		.byte	0
 3931 0c4b 14       		.uleb128 0x14
 3932 0c4c 72020000 		.4byte	.LVL140
 3933 0c50 E2140000 		.4byte	0x14e2
 3934 0c54 6D0C0000 		.4byte	0xc6d
 3935 0c58 15       		.uleb128 0x15
 3936 0c59 01       		.uleb128 0x1
 3937 0c5a 51       		.byte	0x51
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 184


 3938 0c5b 0A       		.uleb128 0xa
 3939 0c5c 79       		.byte	0x79
 3940 0c5d 00       		.sleb128 0
 3941 0c5e 34       		.byte	0x34
 3942 0c5f 24       		.byte	0x24
 3943 0c60 03       		.byte	0x3
 3944 0c61 A0000000 		.4byte	.LANCHOR1+160
 3945 0c65 22       		.byte	0x22
 3946 0c66 15       		.uleb128 0x15
 3947 0c67 01       		.uleb128 0x1
 3948 0c68 50       		.byte	0x50
 3949 0c69 02       		.uleb128 0x2
 3950 0c6a 91       		.byte	0x91
 3951 0c6b 44       		.sleb128 -60
 3952 0c6c 00       		.byte	0
 3953 0c6d 14       		.uleb128 0x14
 3954 0c6e 78020000 		.4byte	.LVL141
 3955 0c72 5E130000 		.4byte	0x135e
 3956 0c76 810C0000 		.4byte	0xc81
 3957 0c7a 15       		.uleb128 0x15
 3958 0c7b 01       		.uleb128 0x1
 3959 0c7c 50       		.byte	0x50
 3960 0c7d 02       		.uleb128 0x2
 3961 0c7e 91       		.byte	0x91
 3962 0c7f 44       		.sleb128 -60
 3963 0c80 00       		.byte	0
 3964 0c81 14       		.uleb128 0x14
 3965 0c82 82020000 		.4byte	.LVL142
 3966 0c86 48130000 		.4byte	0x1348
 3967 0c8a 990C0000 		.4byte	0xc99
 3968 0c8e 15       		.uleb128 0x15
 3969 0c8f 01       		.uleb128 0x1
 3970 0c90 51       		.byte	0x51
 3971 0c91 01       		.uleb128 0x1
 3972 0c92 30       		.byte	0x30
 3973 0c93 15       		.uleb128 0x15
 3974 0c94 01       		.uleb128 0x1
 3975 0c95 50       		.byte	0x50
 3976 0c96 01       		.uleb128 0x1
 3977 0c97 30       		.byte	0x30
 3978 0c98 00       		.byte	0
 3979 0c99 14       		.uleb128 0x14
 3980 0c9a 88020000 		.4byte	.LVL143
 3981 0c9e 5E130000 		.4byte	0x135e
 3982 0ca2 B00C0000 		.4byte	0xcb0
 3983 0ca6 15       		.uleb128 0x15
 3984 0ca7 01       		.uleb128 0x1
 3985 0ca8 50       		.byte	0x50
 3986 0ca9 05       		.uleb128 0x5
 3987 0caa 03       		.byte	0x3
 3988 0cab 78000000 		.4byte	.LC5
 3989 0caf 00       		.byte	0
 3990 0cb0 14       		.uleb128 0x14
 3991 0cb1 90020000 		.4byte	.LVL144
 3992 0cb5 48130000 		.4byte	0x1348
 3993 0cb9 C80C0000 		.4byte	0xcc8
 3994 0cbd 15       		.uleb128 0x15
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 185


 3995 0cbe 01       		.uleb128 0x1
 3996 0cbf 51       		.byte	0x51
 3997 0cc0 01       		.uleb128 0x1
 3998 0cc1 3A       		.byte	0x3a
 3999 0cc2 15       		.uleb128 0x15
 4000 0cc3 01       		.uleb128 0x1
 4001 0cc4 50       		.byte	0x50
 4002 0cc5 01       		.uleb128 0x1
 4003 0cc6 31       		.byte	0x31
 4004 0cc7 00       		.byte	0
 4005 0cc8 14       		.uleb128 0x14
 4006 0cc9 DE020000 		.4byte	.LVL152
 4007 0ccd 00150000 		.4byte	0x1500
 4008 0cd1 EA0C0000 		.4byte	0xcea
 4009 0cd5 15       		.uleb128 0x15
 4010 0cd6 06       		.uleb128 0x6
 4011 0cd7 52       		.byte	0x52
 4012 0cd8 93       		.byte	0x93
 4013 0cd9 04       		.uleb128 0x4
 4014 0cda 53       		.byte	0x53
 4015 0cdb 93       		.byte	0x93
 4016 0cdc 04       		.uleb128 0x4
 4017 0cdd 0B       		.uleb128 0xb
 4018 0cde F4       		.byte	0xf4
 4019 0cdf 25       		.uleb128 0x25
 4020 0ce0 08       		.byte	0x8
 4021 0ce1 04560E2D 		.4byte	0x2d0e5604
 4022 0ce5 B29DD73F 		.4byte	0x3fd79db2
 4023 0ce9 00       		.byte	0
 4024 0cea 14       		.uleb128 0x14
 4025 0ceb F8020000 		.4byte	.LVL155
 4026 0cef 7A130000 		.4byte	0x137a
 4027 0cf3 070D0000 		.4byte	0xd07
 4028 0cf7 15       		.uleb128 0x15
 4029 0cf8 01       		.uleb128 0x1
 4030 0cf9 51       		.byte	0x51
 4031 0cfa 05       		.uleb128 0x5
 4032 0cfb 03       		.byte	0x3
 4033 0cfc BC010000 		.4byte	.LC21
 4034 0d00 15       		.uleb128 0x15
 4035 0d01 01       		.uleb128 0x1
 4036 0d02 50       		.byte	0x50
 4037 0d03 02       		.uleb128 0x2
 4038 0d04 91       		.byte	0x91
 4039 0d05 44       		.sleb128 -60
 4040 0d06 00       		.byte	0
 4041 0d07 14       		.uleb128 0x14
 4042 0d08 5E030000 		.4byte	.LVL158
 4043 0d0c 5E130000 		.4byte	0x135e
 4044 0d10 1B0D0000 		.4byte	0xd1b
 4045 0d14 15       		.uleb128 0x15
 4046 0d15 01       		.uleb128 0x1
 4047 0d16 50       		.byte	0x50
 4048 0d17 02       		.uleb128 0x2
 4049 0d18 91       		.byte	0x91
 4050 0d19 44       		.sleb128 -60
 4051 0d1a 00       		.byte	0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 186


 4052 0d1b 14       		.uleb128 0x14
 4053 0d1c 66030000 		.4byte	.LVL159
 4054 0d20 48130000 		.4byte	0x1348
 4055 0d24 330D0000 		.4byte	0xd33
 4056 0d28 15       		.uleb128 0x15
 4057 0d29 01       		.uleb128 0x1
 4058 0d2a 51       		.byte	0x51
 4059 0d2b 01       		.uleb128 0x1
 4060 0d2c 36       		.byte	0x36
 4061 0d2d 15       		.uleb128 0x15
 4062 0d2e 01       		.uleb128 0x1
 4063 0d2f 50       		.byte	0x50
 4064 0d30 01       		.uleb128 0x1
 4065 0d31 32       		.byte	0x32
 4066 0d32 00       		.byte	0
 4067 0d33 14       		.uleb128 0x14
 4068 0d34 78030000 		.4byte	.LVL161
 4069 0d38 7A130000 		.4byte	0x137a
 4070 0d3c 500D0000 		.4byte	0xd50
 4071 0d40 15       		.uleb128 0x15
 4072 0d41 01       		.uleb128 0x1
 4073 0d42 51       		.byte	0x51
 4074 0d43 05       		.uleb128 0x5
 4075 0d44 03       		.byte	0x3
 4076 0d45 CC010000 		.4byte	.LC23
 4077 0d49 15       		.uleb128 0x15
 4078 0d4a 01       		.uleb128 0x1
 4079 0d4b 50       		.byte	0x50
 4080 0d4c 02       		.uleb128 0x2
 4081 0d4d 91       		.byte	0x91
 4082 0d4e 44       		.sleb128 -60
 4083 0d4f 00       		.byte	0
 4084 0d50 14       		.uleb128 0x14
 4085 0d51 7E030000 		.4byte	.LVL162
 4086 0d55 5E130000 		.4byte	0x135e
 4087 0d59 640D0000 		.4byte	0xd64
 4088 0d5d 15       		.uleb128 0x15
 4089 0d5e 01       		.uleb128 0x1
 4090 0d5f 50       		.byte	0x50
 4091 0d60 02       		.uleb128 0x2
 4092 0d61 91       		.byte	0x91
 4093 0d62 44       		.sleb128 -60
 4094 0d63 00       		.byte	0
 4095 0d64 1B       		.uleb128 0x1b
 4096 0d65 82030000 		.4byte	.LVL163
 4097 0d69 E1070000 		.4byte	0x7e1
 4098 0d6d 14       		.uleb128 0x14
 4099 0d6e 92030000 		.4byte	.LVL165
 4100 0d72 48130000 		.4byte	0x1348
 4101 0d76 850D0000 		.4byte	0xd85
 4102 0d7a 15       		.uleb128 0x15
 4103 0d7b 01       		.uleb128 0x1
 4104 0d7c 51       		.byte	0x51
 4105 0d7d 01       		.uleb128 0x1
 4106 0d7e 36       		.byte	0x36
 4107 0d7f 15       		.uleb128 0x15
 4108 0d80 01       		.uleb128 0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 187


 4109 0d81 50       		.byte	0x50
 4110 0d82 01       		.uleb128 0x1
 4111 0d83 30       		.byte	0x30
 4112 0d84 00       		.byte	0
 4113 0d85 14       		.uleb128 0x14
 4114 0d86 A6030000 		.4byte	.LVL168
 4115 0d8a 7A130000 		.4byte	0x137a
 4116 0d8e 9F0D0000 		.4byte	0xd9f
 4117 0d92 15       		.uleb128 0x15
 4118 0d93 01       		.uleb128 0x1
 4119 0d94 51       		.byte	0x51
 4120 0d95 02       		.uleb128 0x2
 4121 0d96 77       		.byte	0x77
 4122 0d97 00       		.sleb128 0
 4123 0d98 15       		.uleb128 0x15
 4124 0d99 01       		.uleb128 0x1
 4125 0d9a 50       		.byte	0x50
 4126 0d9b 02       		.uleb128 0x2
 4127 0d9c 91       		.byte	0x91
 4128 0d9d 44       		.sleb128 -60
 4129 0d9e 00       		.byte	0
 4130 0d9f 14       		.uleb128 0x14
 4131 0da0 AC030000 		.4byte	.LVL169
 4132 0da4 5E130000 		.4byte	0x135e
 4133 0da8 B30D0000 		.4byte	0xdb3
 4134 0dac 15       		.uleb128 0x15
 4135 0dad 01       		.uleb128 0x1
 4136 0dae 50       		.byte	0x50
 4137 0daf 02       		.uleb128 0x2
 4138 0db0 91       		.byte	0x91
 4139 0db1 44       		.sleb128 -60
 4140 0db2 00       		.byte	0
 4141 0db3 14       		.uleb128 0x14
 4142 0db4 B4030000 		.4byte	.LVL170
 4143 0db8 48130000 		.4byte	0x1348
 4144 0dbc CB0D0000 		.4byte	0xdcb
 4145 0dc0 15       		.uleb128 0x15
 4146 0dc1 01       		.uleb128 0x1
 4147 0dc2 51       		.byte	0x51
 4148 0dc3 01       		.uleb128 0x1
 4149 0dc4 36       		.byte	0x36
 4150 0dc5 15       		.uleb128 0x15
 4151 0dc6 01       		.uleb128 0x1
 4152 0dc7 50       		.byte	0x50
 4153 0dc8 01       		.uleb128 0x1
 4154 0dc9 31       		.byte	0x31
 4155 0dca 00       		.byte	0
 4156 0dcb 14       		.uleb128 0x14
 4157 0dcc C6030000 		.4byte	.LVL172
 4158 0dd0 7A130000 		.4byte	0x137a
 4159 0dd4 E50D0000 		.4byte	0xde5
 4160 0dd8 15       		.uleb128 0x15
 4161 0dd9 01       		.uleb128 0x1
 4162 0dda 51       		.byte	0x51
 4163 0ddb 02       		.uleb128 0x2
 4164 0ddc 77       		.byte	0x77
 4165 0ddd 00       		.sleb128 0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 188


 4166 0dde 15       		.uleb128 0x15
 4167 0ddf 01       		.uleb128 0x1
 4168 0de0 50       		.byte	0x50
 4169 0de1 02       		.uleb128 0x2
 4170 0de2 91       		.byte	0x91
 4171 0de3 44       		.sleb128 -60
 4172 0de4 00       		.byte	0
 4173 0de5 14       		.uleb128 0x14
 4174 0de6 CC030000 		.4byte	.LVL173
 4175 0dea 5E130000 		.4byte	0x135e
 4176 0dee F90D0000 		.4byte	0xdf9
 4177 0df2 15       		.uleb128 0x15
 4178 0df3 01       		.uleb128 0x1
 4179 0df4 50       		.byte	0x50
 4180 0df5 02       		.uleb128 0x2
 4181 0df6 91       		.byte	0x91
 4182 0df7 44       		.sleb128 -60
 4183 0df8 00       		.byte	0
 4184 0df9 1B       		.uleb128 0x1b
 4185 0dfa D0030000 		.4byte	.LVL174
 4186 0dfe E1070000 		.4byte	0x7e1
 4187 0e02 14       		.uleb128 0x14
 4188 0e03 D8030000 		.4byte	.LVL175
 4189 0e07 48130000 		.4byte	0x1348
 4190 0e0b 1A0E0000 		.4byte	0xe1a
 4191 0e0f 15       		.uleb128 0x15
 4192 0e10 01       		.uleb128 0x1
 4193 0e11 51       		.byte	0x51
 4194 0e12 01       		.uleb128 0x1
 4195 0e13 38       		.byte	0x38
 4196 0e14 15       		.uleb128 0x15
 4197 0e15 01       		.uleb128 0x1
 4198 0e16 50       		.byte	0x50
 4199 0e17 01       		.uleb128 0x1
 4200 0e18 33       		.byte	0x33
 4201 0e19 00       		.byte	0
 4202 0e1a 14       		.uleb128 0x14
 4203 0e1b EA030000 		.4byte	.LVL176
 4204 0e1f 7A130000 		.4byte	0x137a
 4205 0e23 450E0000 		.4byte	0xe45
 4206 0e27 15       		.uleb128 0x15
 4207 0e28 06       		.uleb128 0x6
 4208 0e29 52       		.byte	0x52
 4209 0e2a 93       		.byte	0x93
 4210 0e2b 04       		.uleb128 0x4
 4211 0e2c 53       		.byte	0x53
 4212 0e2d 93       		.byte	0x93
 4213 0e2e 04       		.uleb128 0x4
 4214 0e2f 05       		.uleb128 0x5
 4215 0e30 7D       		.byte	0x7d
 4216 0e31 00       		.sleb128 0
 4217 0e32 F6       		.byte	0xf6
 4218 0e33 08       		.byte	0x8
 4219 0e34 25       		.uleb128 0x25
 4220 0e35 15       		.uleb128 0x15
 4221 0e36 01       		.uleb128 0x1
 4222 0e37 51       		.byte	0x51
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 189


 4223 0e38 05       		.uleb128 0x5
 4224 0e39 03       		.byte	0x3
 4225 0e3a BC010000 		.4byte	.LC21
 4226 0e3e 15       		.uleb128 0x15
 4227 0e3f 01       		.uleb128 0x1
 4228 0e40 50       		.byte	0x50
 4229 0e41 02       		.uleb128 0x2
 4230 0e42 91       		.byte	0x91
 4231 0e43 44       		.sleb128 -60
 4232 0e44 00       		.byte	0
 4233 0e45 14       		.uleb128 0x14
 4234 0e46 FE030000 		.4byte	.LVL177
 4235 0e4a 5E130000 		.4byte	0x135e
 4236 0e4e 590E0000 		.4byte	0xe59
 4237 0e52 15       		.uleb128 0x15
 4238 0e53 01       		.uleb128 0x1
 4239 0e54 50       		.byte	0x50
 4240 0e55 02       		.uleb128 0x2
 4241 0e56 91       		.byte	0x91
 4242 0e57 44       		.sleb128 -60
 4243 0e58 00       		.byte	0
 4244 0e59 14       		.uleb128 0x14
 4245 0e5a 78040000 		.4byte	.LVL192
 4246 0e5e 48130000 		.4byte	0x1348
 4247 0e62 720E0000 		.4byte	0xe72
 4248 0e66 15       		.uleb128 0x15
 4249 0e67 01       		.uleb128 0x1
 4250 0e68 51       		.byte	0x51
 4251 0e69 02       		.uleb128 0x2
 4252 0e6a 7A       		.byte	0x7a
 4253 0e6b 00       		.sleb128 0
 4254 0e6c 15       		.uleb128 0x15
 4255 0e6d 01       		.uleb128 0x1
 4256 0e6e 50       		.byte	0x50
 4257 0e6f 01       		.uleb128 0x1
 4258 0e70 30       		.byte	0x30
 4259 0e71 00       		.byte	0
 4260 0e72 14       		.uleb128 0x14
 4261 0e73 84040000 		.4byte	.LVL193
 4262 0e77 E2140000 		.4byte	0x14e2
 4263 0e7b 940E0000 		.4byte	0xe94
 4264 0e7f 15       		.uleb128 0x15
 4265 0e80 01       		.uleb128 0x1
 4266 0e81 51       		.byte	0x51
 4267 0e82 0A       		.uleb128 0xa
 4268 0e83 79       		.byte	0x79
 4269 0e84 00       		.sleb128 0
 4270 0e85 34       		.byte	0x34
 4271 0e86 24       		.byte	0x24
 4272 0e87 03       		.byte	0x3
 4273 0e88 A0000000 		.4byte	.LANCHOR1+160
 4274 0e8c 22       		.byte	0x22
 4275 0e8d 15       		.uleb128 0x15
 4276 0e8e 01       		.uleb128 0x1
 4277 0e8f 50       		.byte	0x50
 4278 0e90 02       		.uleb128 0x2
 4279 0e91 91       		.byte	0x91
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 190


 4280 0e92 44       		.sleb128 -60
 4281 0e93 00       		.byte	0
 4282 0e94 14       		.uleb128 0x14
 4283 0e95 8A040000 		.4byte	.LVL194
 4284 0e99 5E130000 		.4byte	0x135e
 4285 0e9d A80E0000 		.4byte	0xea8
 4286 0ea1 15       		.uleb128 0x15
 4287 0ea2 01       		.uleb128 0x1
 4288 0ea3 50       		.byte	0x50
 4289 0ea4 02       		.uleb128 0x2
 4290 0ea5 91       		.byte	0x91
 4291 0ea6 44       		.sleb128 -60
 4292 0ea7 00       		.byte	0
 4293 0ea8 14       		.uleb128 0x14
 4294 0ea9 94040000 		.4byte	.LVL195
 4295 0ead 48130000 		.4byte	0x1348
 4296 0eb1 C00E0000 		.4byte	0xec0
 4297 0eb5 15       		.uleb128 0x15
 4298 0eb6 01       		.uleb128 0x1
 4299 0eb7 51       		.byte	0x51
 4300 0eb8 01       		.uleb128 0x1
 4301 0eb9 30       		.byte	0x30
 4302 0eba 15       		.uleb128 0x15
 4303 0ebb 01       		.uleb128 0x1
 4304 0ebc 50       		.byte	0x50
 4305 0ebd 01       		.uleb128 0x1
 4306 0ebe 30       		.byte	0x30
 4307 0ebf 00       		.byte	0
 4308 0ec0 14       		.uleb128 0x14
 4309 0ec1 9A040000 		.4byte	.LVL196
 4310 0ec5 5E130000 		.4byte	0x135e
 4311 0ec9 D70E0000 		.4byte	0xed7
 4312 0ecd 15       		.uleb128 0x15
 4313 0ece 01       		.uleb128 0x1
 4314 0ecf 50       		.byte	0x50
 4315 0ed0 05       		.uleb128 0x5
 4316 0ed1 03       		.byte	0x3
 4317 0ed2 78000000 		.4byte	.LC5
 4318 0ed6 00       		.byte	0
 4319 0ed7 14       		.uleb128 0x14
 4320 0ed8 A2040000 		.4byte	.LVL197
 4321 0edc 48130000 		.4byte	0x1348
 4322 0ee0 EF0E0000 		.4byte	0xeef
 4323 0ee4 15       		.uleb128 0x15
 4324 0ee5 01       		.uleb128 0x1
 4325 0ee6 51       		.byte	0x51
 4326 0ee7 01       		.uleb128 0x1
 4327 0ee8 37       		.byte	0x37
 4328 0ee9 15       		.uleb128 0x15
 4329 0eea 01       		.uleb128 0x1
 4330 0eeb 50       		.byte	0x50
 4331 0eec 01       		.uleb128 0x1
 4332 0eed 31       		.byte	0x31
 4333 0eee 00       		.byte	0
 4334 0eef 14       		.uleb128 0x14
 4335 0ef0 B4040000 		.4byte	.LVL198
 4336 0ef4 7A130000 		.4byte	0x137a
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 191


 4337 0ef8 0C0F0000 		.4byte	0xf0c
 4338 0efc 15       		.uleb128 0x15
 4339 0efd 01       		.uleb128 0x1
 4340 0efe 51       		.byte	0x51
 4341 0eff 05       		.uleb128 0x5
 4342 0f00 03       		.byte	0x3
 4343 0f01 BC010000 		.4byte	.LC21
 4344 0f05 15       		.uleb128 0x15
 4345 0f06 01       		.uleb128 0x1
 4346 0f07 50       		.byte	0x50
 4347 0f08 02       		.uleb128 0x2
 4348 0f09 91       		.byte	0x91
 4349 0f0a 44       		.sleb128 -60
 4350 0f0b 00       		.byte	0
 4351 0f0c 14       		.uleb128 0x14
 4352 0f0d C8040000 		.4byte	.LVL199
 4353 0f11 5E130000 		.4byte	0x135e
 4354 0f15 200F0000 		.4byte	0xf20
 4355 0f19 15       		.uleb128 0x15
 4356 0f1a 01       		.uleb128 0x1
 4357 0f1b 50       		.byte	0x50
 4358 0f1c 02       		.uleb128 0x2
 4359 0f1d 91       		.byte	0x91
 4360 0f1e 44       		.sleb128 -60
 4361 0f1f 00       		.byte	0
 4362 0f20 14       		.uleb128 0x14
 4363 0f21 D0040000 		.4byte	.LVL200
 4364 0f25 48130000 		.4byte	0x1348
 4365 0f29 380F0000 		.4byte	0xf38
 4366 0f2d 15       		.uleb128 0x15
 4367 0f2e 01       		.uleb128 0x1
 4368 0f2f 51       		.byte	0x51
 4369 0f30 01       		.uleb128 0x1
 4370 0f31 36       		.byte	0x36
 4371 0f32 15       		.uleb128 0x15
 4372 0f33 01       		.uleb128 0x1
 4373 0f34 50       		.byte	0x50
 4374 0f35 01       		.uleb128 0x1
 4375 0f36 32       		.byte	0x32
 4376 0f37 00       		.byte	0
 4377 0f38 14       		.uleb128 0x14
 4378 0f39 E2040000 		.4byte	.LVL202
 4379 0f3d 7A130000 		.4byte	0x137a
 4380 0f41 550F0000 		.4byte	0xf55
 4381 0f45 15       		.uleb128 0x15
 4382 0f46 01       		.uleb128 0x1
 4383 0f47 51       		.byte	0x51
 4384 0f48 05       		.uleb128 0x5
 4385 0f49 03       		.byte	0x3
 4386 0f4a CC010000 		.4byte	.LC23
 4387 0f4e 15       		.uleb128 0x15
 4388 0f4f 01       		.uleb128 0x1
 4389 0f50 50       		.byte	0x50
 4390 0f51 02       		.uleb128 0x2
 4391 0f52 91       		.byte	0x91
 4392 0f53 44       		.sleb128 -60
 4393 0f54 00       		.byte	0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 192


 4394 0f55 14       		.uleb128 0x14
 4395 0f56 E8040000 		.4byte	.LVL203
 4396 0f5a 5E130000 		.4byte	0x135e
 4397 0f5e 690F0000 		.4byte	0xf69
 4398 0f62 15       		.uleb128 0x15
 4399 0f63 01       		.uleb128 0x1
 4400 0f64 50       		.byte	0x50
 4401 0f65 02       		.uleb128 0x2
 4402 0f66 91       		.byte	0x91
 4403 0f67 44       		.sleb128 -60
 4404 0f68 00       		.byte	0
 4405 0f69 1B       		.uleb128 0x1b
 4406 0f6a EC040000 		.4byte	.LVL204
 4407 0f6e E1070000 		.4byte	0x7e1
 4408 0f72 1B       		.uleb128 0x1b
 4409 0f73 F6040000 		.4byte	.LVL206
 4410 0f77 19140000 		.4byte	0x1419
 4411 0f7b 14       		.uleb128 0x14
 4412 0f7c 0C050000 		.4byte	.LVL207
 4413 0f80 EA130000 		.4byte	0x13ea
 4414 0f84 9A0F0000 		.4byte	0xf9a
 4415 0f88 15       		.uleb128 0x15
 4416 0f89 01       		.uleb128 0x1
 4417 0f8a 53       		.byte	0x53
 4418 0f8b 01       		.uleb128 0x1
 4419 0f8c 30       		.byte	0x30
 4420 0f8d 15       		.uleb128 0x15
 4421 0f8e 01       		.uleb128 0x1
 4422 0f8f 52       		.byte	0x52
 4423 0f90 01       		.uleb128 0x1
 4424 0f91 30       		.byte	0x30
 4425 0f92 15       		.uleb128 0x15
 4426 0f93 01       		.uleb128 0x1
 4427 0f94 51       		.byte	0x51
 4428 0f95 03       		.uleb128 0x3
 4429 0f96 91       		.byte	0x91
 4430 0f97 AF7F     		.sleb128 -81
 4431 0f99 00       		.byte	0
 4432 0f9a 1B       		.uleb128 0x1b
 4433 0f9b 5A050000 		.4byte	.LVL208
 4434 0f9f 1A150000 		.4byte	0x151a
 4435 0fa3 1B       		.uleb128 0x1b
 4436 0fa4 6C050000 		.4byte	.LVL209
 4437 0fa8 2B150000 		.4byte	0x152b
 4438 0fac 1B       		.uleb128 0x1b
 4439 0fad 70050000 		.4byte	.LVL210
 4440 0fb1 9F070000 		.4byte	0x79f
 4441 0fb5 1B       		.uleb128 0x1b
 4442 0fb6 74050000 		.4byte	.LVL211
 4443 0fba E1070000 		.4byte	0x7e1
 4444 0fbe 1B       		.uleb128 0x1b
 4445 0fbf 90050000 		.4byte	.LVL212
 4446 0fc3 9F070000 		.4byte	0x79f
 4447 0fc7 14       		.uleb128 0x14
 4448 0fc8 98050000 		.4byte	.LVL213
 4449 0fcc 48130000 		.4byte	0x1348
 4450 0fd0 DF0F0000 		.4byte	0xfdf
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 193


 4451 0fd4 15       		.uleb128 0x15
 4452 0fd5 01       		.uleb128 0x1
 4453 0fd6 51       		.byte	0x51
 4454 0fd7 01       		.uleb128 0x1
 4455 0fd8 3C       		.byte	0x3c
 4456 0fd9 15       		.uleb128 0x15
 4457 0fda 01       		.uleb128 0x1
 4458 0fdb 50       		.byte	0x50
 4459 0fdc 01       		.uleb128 0x1
 4460 0fdd 31       		.byte	0x31
 4461 0fde 00       		.byte	0
 4462 0fdf 14       		.uleb128 0x14
 4463 0fe0 B4050000 		.4byte	.LVL214
 4464 0fe4 7A130000 		.4byte	0x137a
 4465 0fe8 FC0F0000 		.4byte	0xffc
 4466 0fec 15       		.uleb128 0x15
 4467 0fed 01       		.uleb128 0x1
 4468 0fee 51       		.byte	0x51
 4469 0fef 05       		.uleb128 0x5
 4470 0ff0 03       		.byte	0x3
 4471 0ff1 D4010000 		.4byte	.LC24
 4472 0ff5 15       		.uleb128 0x15
 4473 0ff6 01       		.uleb128 0x1
 4474 0ff7 50       		.byte	0x50
 4475 0ff8 02       		.uleb128 0x2
 4476 0ff9 91       		.byte	0x91
 4477 0ffa 44       		.sleb128 -60
 4478 0ffb 00       		.byte	0
 4479 0ffc 14       		.uleb128 0x14
 4480 0ffd BA050000 		.4byte	.LVL215
 4481 1001 5E130000 		.4byte	0x135e
 4482 1005 10100000 		.4byte	0x1010
 4483 1009 15       		.uleb128 0x15
 4484 100a 01       		.uleb128 0x1
 4485 100b 50       		.byte	0x50
 4486 100c 02       		.uleb128 0x2
 4487 100d 91       		.byte	0x91
 4488 100e 44       		.sleb128 -60
 4489 100f 00       		.byte	0
 4490 1010 14       		.uleb128 0x14
 4491 1011 C2050000 		.4byte	.LVL216
 4492 1015 48130000 		.4byte	0x1348
 4493 1019 28100000 		.4byte	0x1028
 4494 101d 15       		.uleb128 0x15
 4495 101e 01       		.uleb128 0x1
 4496 101f 51       		.byte	0x51
 4497 1020 01       		.uleb128 0x1
 4498 1021 3C       		.byte	0x3c
 4499 1022 15       		.uleb128 0x15
 4500 1023 01       		.uleb128 0x1
 4501 1024 50       		.byte	0x50
 4502 1025 01       		.uleb128 0x1
 4503 1026 32       		.byte	0x32
 4504 1027 00       		.byte	0
 4505 1028 14       		.uleb128 0x14
 4506 1029 CE050000 		.4byte	.LVL217
 4507 102d 7A130000 		.4byte	0x137a
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 194


 4508 1031 45100000 		.4byte	0x1045
 4509 1035 15       		.uleb128 0x15
 4510 1036 01       		.uleb128 0x1
 4511 1037 51       		.byte	0x51
 4512 1038 05       		.uleb128 0x5
 4513 1039 03       		.byte	0x3
 4514 103a D4010000 		.4byte	.LC24
 4515 103e 15       		.uleb128 0x15
 4516 103f 01       		.uleb128 0x1
 4517 1040 50       		.byte	0x50
 4518 1041 02       		.uleb128 0x2
 4519 1042 91       		.byte	0x91
 4520 1043 44       		.sleb128 -60
 4521 1044 00       		.byte	0
 4522 1045 14       		.uleb128 0x14
 4523 1046 D4050000 		.4byte	.LVL218
 4524 104a 5E130000 		.4byte	0x135e
 4525 104e 59100000 		.4byte	0x1059
 4526 1052 15       		.uleb128 0x15
 4527 1053 01       		.uleb128 0x1
 4528 1054 50       		.byte	0x50
 4529 1055 02       		.uleb128 0x2
 4530 1056 91       		.byte	0x91
 4531 1057 44       		.sleb128 -60
 4532 1058 00       		.byte	0
 4533 1059 14       		.uleb128 0x14
 4534 105a DC050000 		.4byte	.LVL219
 4535 105e 48130000 		.4byte	0x1348
 4536 1062 71100000 		.4byte	0x1071
 4537 1066 15       		.uleb128 0x15
 4538 1067 01       		.uleb128 0x1
 4539 1068 51       		.byte	0x51
 4540 1069 01       		.uleb128 0x1
 4541 106a 3C       		.byte	0x3c
 4542 106b 15       		.uleb128 0x15
 4543 106c 01       		.uleb128 0x1
 4544 106d 50       		.byte	0x50
 4545 106e 01       		.uleb128 0x1
 4546 106f 33       		.byte	0x33
 4547 1070 00       		.byte	0
 4548 1071 14       		.uleb128 0x14
 4549 1072 E8050000 		.4byte	.LVL220
 4550 1076 7A130000 		.4byte	0x137a
 4551 107a 8E100000 		.4byte	0x108e
 4552 107e 15       		.uleb128 0x15
 4553 107f 01       		.uleb128 0x1
 4554 1080 51       		.byte	0x51
 4555 1081 05       		.uleb128 0x5
 4556 1082 03       		.byte	0x3
 4557 1083 D4010000 		.4byte	.LC24
 4558 1087 15       		.uleb128 0x15
 4559 1088 01       		.uleb128 0x1
 4560 1089 50       		.byte	0x50
 4561 108a 02       		.uleb128 0x2
 4562 108b 91       		.byte	0x91
 4563 108c 44       		.sleb128 -60
 4564 108d 00       		.byte	0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 195


 4565 108e 14       		.uleb128 0x14
 4566 108f EE050000 		.4byte	.LVL221
 4567 1093 5E130000 		.4byte	0x135e
 4568 1097 A2100000 		.4byte	0x10a2
 4569 109b 15       		.uleb128 0x15
 4570 109c 01       		.uleb128 0x1
 4571 109d 50       		.byte	0x50
 4572 109e 02       		.uleb128 0x2
 4573 109f 91       		.byte	0x91
 4574 10a0 44       		.sleb128 -60
 4575 10a1 00       		.byte	0
 4576 10a2 1B       		.uleb128 0x1b
 4577 10a3 3C060000 		.4byte	.LVL222
 4578 10a7 9F070000 		.4byte	0x79f
 4579 10ab 14       		.uleb128 0x14
 4580 10ac 44060000 		.4byte	.LVL223
 4581 10b0 48130000 		.4byte	0x1348
 4582 10b4 C3100000 		.4byte	0x10c3
 4583 10b8 15       		.uleb128 0x15
 4584 10b9 01       		.uleb128 0x1
 4585 10ba 51       		.byte	0x51
 4586 10bb 01       		.uleb128 0x1
 4587 10bc 3B       		.byte	0x3b
 4588 10bd 15       		.uleb128 0x15
 4589 10be 01       		.uleb128 0x1
 4590 10bf 50       		.byte	0x50
 4591 10c0 01       		.uleb128 0x1
 4592 10c1 31       		.byte	0x31
 4593 10c2 00       		.byte	0
 4594 10c3 14       		.uleb128 0x14
 4595 10c4 60060000 		.4byte	.LVL224
 4596 10c8 7A130000 		.4byte	0x137a
 4597 10cc E0100000 		.4byte	0x10e0
 4598 10d0 15       		.uleb128 0x15
 4599 10d1 01       		.uleb128 0x1
 4600 10d2 51       		.byte	0x51
 4601 10d3 05       		.uleb128 0x5
 4602 10d4 03       		.byte	0x3
 4603 10d5 D8010000 		.4byte	.LC25
 4604 10d9 15       		.uleb128 0x15
 4605 10da 01       		.uleb128 0x1
 4606 10db 50       		.byte	0x50
 4607 10dc 02       		.uleb128 0x2
 4608 10dd 91       		.byte	0x91
 4609 10de 44       		.sleb128 -60
 4610 10df 00       		.byte	0
 4611 10e0 14       		.uleb128 0x14
 4612 10e1 66060000 		.4byte	.LVL225
 4613 10e5 5E130000 		.4byte	0x135e
 4614 10e9 F4100000 		.4byte	0x10f4
 4615 10ed 15       		.uleb128 0x15
 4616 10ee 01       		.uleb128 0x1
 4617 10ef 50       		.byte	0x50
 4618 10f0 02       		.uleb128 0x2
 4619 10f1 91       		.byte	0x91
 4620 10f2 44       		.sleb128 -60
 4621 10f3 00       		.byte	0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 196


 4622 10f4 14       		.uleb128 0x14
 4623 10f5 6E060000 		.4byte	.LVL226
 4624 10f9 48130000 		.4byte	0x1348
 4625 10fd 0C110000 		.4byte	0x110c
 4626 1101 15       		.uleb128 0x15
 4627 1102 01       		.uleb128 0x1
 4628 1103 51       		.byte	0x51
 4629 1104 01       		.uleb128 0x1
 4630 1105 3B       		.byte	0x3b
 4631 1106 15       		.uleb128 0x15
 4632 1107 01       		.uleb128 0x1
 4633 1108 50       		.byte	0x50
 4634 1109 01       		.uleb128 0x1
 4635 110a 32       		.byte	0x32
 4636 110b 00       		.byte	0
 4637 110c 14       		.uleb128 0x14
 4638 110d 7A060000 		.4byte	.LVL227
 4639 1111 7A130000 		.4byte	0x137a
 4640 1115 29110000 		.4byte	0x1129
 4641 1119 15       		.uleb128 0x15
 4642 111a 01       		.uleb128 0x1
 4643 111b 51       		.byte	0x51
 4644 111c 05       		.uleb128 0x5
 4645 111d 03       		.byte	0x3
 4646 111e D8010000 		.4byte	.LC25
 4647 1122 15       		.uleb128 0x15
 4648 1123 01       		.uleb128 0x1
 4649 1124 50       		.byte	0x50
 4650 1125 02       		.uleb128 0x2
 4651 1126 91       		.byte	0x91
 4652 1127 44       		.sleb128 -60
 4653 1128 00       		.byte	0
 4654 1129 14       		.uleb128 0x14
 4655 112a 80060000 		.4byte	.LVL228
 4656 112e 5E130000 		.4byte	0x135e
 4657 1132 3D110000 		.4byte	0x113d
 4658 1136 15       		.uleb128 0x15
 4659 1137 01       		.uleb128 0x1
 4660 1138 50       		.byte	0x50
 4661 1139 02       		.uleb128 0x2
 4662 113a 91       		.byte	0x91
 4663 113b 44       		.sleb128 -60
 4664 113c 00       		.byte	0
 4665 113d 14       		.uleb128 0x14
 4666 113e 88060000 		.4byte	.LVL229
 4667 1142 48130000 		.4byte	0x1348
 4668 1146 55110000 		.4byte	0x1155
 4669 114a 15       		.uleb128 0x15
 4670 114b 01       		.uleb128 0x1
 4671 114c 51       		.byte	0x51
 4672 114d 01       		.uleb128 0x1
 4673 114e 3B       		.byte	0x3b
 4674 114f 15       		.uleb128 0x15
 4675 1150 01       		.uleb128 0x1
 4676 1151 50       		.byte	0x50
 4677 1152 01       		.uleb128 0x1
 4678 1153 33       		.byte	0x33
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 197


 4679 1154 00       		.byte	0
 4680 1155 14       		.uleb128 0x14
 4681 1156 94060000 		.4byte	.LVL230
 4682 115a 7A130000 		.4byte	0x137a
 4683 115e 72110000 		.4byte	0x1172
 4684 1162 15       		.uleb128 0x15
 4685 1163 01       		.uleb128 0x1
 4686 1164 51       		.byte	0x51
 4687 1165 05       		.uleb128 0x5
 4688 1166 03       		.byte	0x3
 4689 1167 D8010000 		.4byte	.LC25
 4690 116b 15       		.uleb128 0x15
 4691 116c 01       		.uleb128 0x1
 4692 116d 50       		.byte	0x50
 4693 116e 02       		.uleb128 0x2
 4694 116f 91       		.byte	0x91
 4695 1170 44       		.sleb128 -60
 4696 1171 00       		.byte	0
 4697 1172 14       		.uleb128 0x14
 4698 1173 9A060000 		.4byte	.LVL231
 4699 1177 5E130000 		.4byte	0x135e
 4700 117b 86110000 		.4byte	0x1186
 4701 117f 15       		.uleb128 0x15
 4702 1180 01       		.uleb128 0x1
 4703 1181 50       		.byte	0x50
 4704 1182 02       		.uleb128 0x2
 4705 1183 91       		.byte	0x91
 4706 1184 44       		.sleb128 -60
 4707 1185 00       		.byte	0
 4708 1186 1B       		.uleb128 0x1b
 4709 1187 18070000 		.4byte	.LVL239
 4710 118b 1A150000 		.4byte	0x151a
 4711 118f 1B       		.uleb128 0x1b
 4712 1190 28070000 		.4byte	.LVL240
 4713 1194 2B150000 		.4byte	0x152b
 4714 1198 1B       		.uleb128 0x1b
 4715 1199 2C070000 		.4byte	.LVL241
 4716 119d 9F070000 		.4byte	0x79f
 4717 11a1 16       		.uleb128 0x16
 4718 11a2 34070000 		.4byte	.LVL243
 4719 11a6 D8130000 		.4byte	0x13d8
 4720 11aa 15       		.uleb128 0x15
 4721 11ab 01       		.uleb128 0x1
 4722 11ac 50       		.byte	0x50
 4723 11ad 01       		.uleb128 0x1
 4724 11ae 35       		.byte	0x35
 4725 11af 00       		.byte	0
 4726 11b0 00       		.byte	0
 4727 11b1 18       		.uleb128 0x18
 4728 11b2 67010000 		.4byte	0x167
 4729 11b6 C1110000 		.4byte	0x11c1
 4730 11ba 19       		.uleb128 0x19
 4731 11bb F4000000 		.4byte	0xf4
 4732 11bf 01       		.byte	0x1
 4733 11c0 00       		.byte	0
 4734 11c1 08       		.uleb128 0x8
 4735 11c2 8F010000 		.4byte	0x18f
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 198


 4736 11c6 25       		.uleb128 0x25
 4737 11c7 A1000000 		.4byte	.LASF83
 4738 11cb 0A       		.byte	0xa
 4739 11cc 9606     		.2byte	0x696
 4740 11ce D2110000 		.4byte	0x11d2
 4741 11d2 26       		.uleb128 0x26
 4742 11d3 8F000000 		.4byte	0x8f
 4743 11d7 18       		.uleb128 0x18
 4744 11d8 67010000 		.4byte	0x167
 4745 11dc E7110000 		.4byte	0x11e7
 4746 11e0 19       		.uleb128 0x19
 4747 11e1 F4000000 		.4byte	0xf4
 4748 11e5 9F       		.byte	0x9f
 4749 11e6 00       		.byte	0
 4750 11e7 27       		.uleb128 0x27
 4751 11e8 A8040000 		.4byte	.LASF84
 4752 11ec 01       		.byte	0x1
 4753 11ed 20       		.byte	0x20
 4754 11ee D7110000 		.4byte	0x11d7
 4755 11f2 27       		.uleb128 0x27
 4756 11f3 18060000 		.4byte	.LASF85
 4757 11f7 01       		.byte	0x1
 4758 11f8 21       		.byte	0x21
 4759 11f9 D7110000 		.4byte	0x11d7
 4760 11fd 27       		.uleb128 0x27
 4761 11fe B2020000 		.4byte	.LASF86
 4762 1202 01       		.byte	0x1
 4763 1203 22       		.byte	0x22
 4764 1204 D7110000 		.4byte	0x11d7
 4765 1208 18       		.uleb128 0x18
 4766 1209 9A010000 		.4byte	0x19a
 4767 120d 18120000 		.4byte	0x1218
 4768 1211 19       		.uleb128 0x19
 4769 1212 F4000000 		.4byte	0xf4
 4770 1216 01       		.byte	0x1
 4771 1217 00       		.byte	0
 4772 1218 27       		.uleb128 0x27
 4773 1219 CF040000 		.4byte	.LASF87
 4774 121d 01       		.byte	0x1
 4775 121e 24       		.byte	0x24
 4776 121f 08120000 		.4byte	0x1208
 4777 1223 27       		.uleb128 0x27
 4778 1224 06050000 		.4byte	.LASF88
 4779 1228 01       		.byte	0x1
 4780 1229 25       		.byte	0x25
 4781 122a 9A010000 		.4byte	0x19a
 4782 122e 27       		.uleb128 0x27
 4783 122f 0E000000 		.4byte	.LASF89
 4784 1233 01       		.byte	0x1
 4785 1234 26       		.byte	0x26
 4786 1235 9A010000 		.4byte	0x19a
 4787 1239 27       		.uleb128 0x27
 4788 123a 3E020000 		.4byte	.LASF90
 4789 123e 01       		.byte	0x1
 4790 123f 29       		.byte	0x29
 4791 1240 A5010000 		.4byte	0x1a5
 4792 1244 28       		.uleb128 0x28
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 199


 4793 1245 33040000 		.4byte	.LASF91
 4794 1249 01       		.byte	0x1
 4795 124a 2C       		.byte	0x2c
 4796 124b B0010000 		.4byte	0x1b0
 4797 124f 05       		.uleb128 0x5
 4798 1250 03       		.byte	0x3
 4799 1251 00000000 		.4byte	mode
 4800 1255 28       		.uleb128 0x28
 4801 1256 52030000 		.4byte	.LASF92
 4802 125a 01       		.byte	0x1
 4803 125b 2F       		.byte	0x2f
 4804 125c D5000000 		.4byte	0xd5
 4805 1260 05       		.uleb128 0x5
 4806 1261 03       		.byte	0x3
 4807 1262 00000000 		.4byte	gain
 4808 1266 29       		.uleb128 0x29
 4809 1267 56746800 		.ascii	"Vth\000"
 4810 126b 01       		.byte	0x1
 4811 126c 32       		.byte	0x32
 4812 126d B1000000 		.4byte	0xb1
 4813 1271 05       		.uleb128 0x5
 4814 1272 03       		.byte	0x3
 4815 1273 00000000 		.4byte	Vth
 4816 1277 28       		.uleb128 0x28
 4817 1278 D4030000 		.4byte	.LASF93
 4818 127c 01       		.byte	0x1
 4819 127d 33       		.byte	0x33
 4820 127e B1000000 		.4byte	0xb1
 4821 1282 05       		.uleb128 0x5
 4822 1283 03       		.byte	0x3
 4823 1284 00000000 		.4byte	Vbias
 4824 1288 28       		.uleb128 0x28
 4825 1289 AE000000 		.4byte	.LASF94
 4826 128d 01       		.byte	0x1
 4827 128e 34       		.byte	0x34
 4828 128f D5000000 		.4byte	0xd5
 4829 1293 05       		.uleb128 0x5
 4830 1294 03       		.byte	0x3
 4831 1295 00000000 		.4byte	Adj_Vth
 4832 1299 28       		.uleb128 0x28
 4833 129a F4020000 		.4byte	.LASF95
 4834 129e 01       		.byte	0x1
 4835 129f 35       		.byte	0x35
 4836 12a0 D5000000 		.4byte	0xd5
 4837 12a4 05       		.uleb128 0x5
 4838 12a5 03       		.byte	0x3
 4839 12a6 00000000 		.4byte	Adj_Vbias
 4840 12aa 18       		.uleb128 0x18
 4841 12ab 2C020000 		.4byte	0x22c
 4842 12af BA120000 		.4byte	0x12ba
 4843 12b3 19       		.uleb128 0x19
 4844 12b4 F4000000 		.4byte	0xf4
 4845 12b8 0C       		.byte	0xc
 4846 12b9 00       		.byte	0
 4847 12ba 28       		.uleb128 0x28
 4848 12bb 05000000 		.4byte	.LASF46
 4849 12bf 01       		.byte	0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 200


 4850 12c0 46       		.byte	0x46
 4851 12c1 CB120000 		.4byte	0x12cb
 4852 12c5 05       		.uleb128 0x5
 4853 12c6 03       		.byte	0x3
 4854 12c7 00000000 		.4byte	pga_gain
 4855 12cb 08       		.uleb128 0x8
 4856 12cc AA120000 		.4byte	0x12aa
 4857 12d0 18       		.uleb128 0x18
 4858 12d1 64020000 		.4byte	0x264
 4859 12d5 E0120000 		.4byte	0x12e0
 4860 12d9 19       		.uleb128 0x19
 4861 12da F4000000 		.4byte	0xf4
 4862 12de 08       		.byte	0x8
 4863 12df 00       		.byte	0
 4864 12e0 28       		.uleb128 0x28
 4865 12e1 C7020000 		.4byte	.LASF96
 4866 12e5 01       		.byte	0x1
 4867 12e6 5F       		.byte	0x5f
 4868 12e7 F1120000 		.4byte	0x12f1
 4869 12eb 05       		.uleb128 0x5
 4870 12ec 03       		.byte	0x3
 4871 12ed 00000000 		.4byte	pga_agc
 4872 12f1 08       		.uleb128 0x8
 4873 12f2 D0120000 		.4byte	0x12d0
 4874 12f6 18       		.uleb128 0x18
 4875 12f7 A8020000 		.4byte	0x2a8
 4876 12fb 06130000 		.4byte	0x1306
 4877 12ff 19       		.uleb128 0x19
 4878 1300 F4000000 		.4byte	0xf4
 4879 1304 0C       		.byte	0xc
 4880 1305 00       		.byte	0
 4881 1306 28       		.uleb128 0x28
 4882 1307 50000000 		.4byte	.LASF97
 4883 130b 01       		.byte	0x1
 4884 130c 74       		.byte	0x74
 4885 130d 17130000 		.4byte	0x1317
 4886 1311 05       		.uleb128 0x5
 4887 1312 03       		.byte	0x3
 4888 1313 00000000 		.4byte	dir_tab
 4889 1317 08       		.uleb128 0x8
 4890 1318 F6120000 		.4byte	0x12f6
 4891 131c 18       		.uleb128 0x18
 4892 131d E1000000 		.4byte	0xe1
 4893 1321 32130000 		.4byte	0x1332
 4894 1325 19       		.uleb128 0x19
 4895 1326 F4000000 		.4byte	0xf4
 4896 132a 0C       		.byte	0xc
 4897 132b 19       		.uleb128 0x19
 4898 132c F4000000 		.4byte	0xf4
 4899 1330 0F       		.byte	0xf
 4900 1331 00       		.byte	0
 4901 1332 29       		.uleb128 0x29
 4902 1333 62617200 		.ascii	"bar\000"
 4903 1337 01       		.byte	0x1
 4904 1338 85       		.byte	0x85
 4905 1339 43130000 		.4byte	0x1343
 4906 133d 05       		.uleb128 0x5
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 201


 4907 133e 03       		.byte	0x3
 4908 133f 00000000 		.4byte	bar
 4909 1343 08       		.uleb128 0x8
 4910 1344 1C130000 		.4byte	0x131c
 4911 1348 2A       		.uleb128 0x2a
 4912 1349 6D010000 		.4byte	.LASF98
 4913 134d 0B       		.byte	0xb
 4914 134e 44       		.byte	0x44
 4915 134f 5E130000 		.4byte	0x135e
 4916 1353 2B       		.uleb128 0x2b
 4917 1354 A5000000 		.4byte	0xa5
 4918 1358 2B       		.uleb128 0x2b
 4919 1359 A5000000 		.4byte	0xa5
 4920 135d 00       		.byte	0
 4921 135e 2A       		.uleb128 0x2a
 4922 135f 4C020000 		.4byte	.LASF99
 4923 1363 0B       		.byte	0xb
 4924 1364 43       		.byte	0x43
 4925 1365 6F130000 		.4byte	0x136f
 4926 1369 2B       		.uleb128 0x2b
 4927 136a 6F130000 		.4byte	0x136f
 4928 136e 00       		.byte	0
 4929 136f 07       		.uleb128 0x7
 4930 1370 04       		.byte	0x4
 4931 1371 75130000 		.4byte	0x1375
 4932 1375 08       		.uleb128 0x8
 4933 1376 E1000000 		.4byte	0xe1
 4934 137a 2C       		.uleb128 0x2c
 4935 137b 42000000 		.4byte	.LASF102
 4936 137f 0E       		.byte	0xe
 4937 1380 DE       		.byte	0xde
 4938 1381 81000000 		.4byte	0x81
 4939 1385 95130000 		.4byte	0x1395
 4940 1389 2B       		.uleb128 0x2b
 4941 138a FD000000 		.4byte	0xfd
 4942 138e 2B       		.uleb128 0x2b
 4943 138f 03010000 		.4byte	0x103
 4944 1393 2D       		.uleb128 0x2d
 4945 1394 00       		.byte	0
 4946 1395 2A       		.uleb128 0x2a
 4947 1396 C1030000 		.4byte	.LASF100
 4948 139a 0C       		.byte	0xc
 4949 139b 27       		.byte	0x27
 4950 139c A6130000 		.4byte	0x13a6
 4951 13a0 2B       		.uleb128 0x2b
 4952 13a1 A5000000 		.4byte	0xa5
 4953 13a5 00       		.byte	0
 4954 13a6 2A       		.uleb128 0x2a
 4955 13a7 FF030000 		.4byte	.LASF101
 4956 13ab 0D       		.byte	0xd
 4957 13ac 4A       		.byte	0x4a
 4958 13ad B7130000 		.4byte	0x13b7
 4959 13b1 2B       		.uleb128 0x2b
 4960 13b2 B1000000 		.4byte	0xb1
 4961 13b6 00       		.byte	0
 4962 13b7 2E       		.uleb128 0x2e
 4963 13b8 88020000 		.4byte	.LASF103
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 202


 4964 13bc 06       		.byte	0x6
 4965 13bd 5401     		.2byte	0x154
 4966 13bf 2C000000 		.4byte	0x2c
 4967 13c3 CD130000 		.4byte	0x13cd
 4968 13c7 2B       		.uleb128 0x2b
 4969 13c8 2C000000 		.4byte	0x2c
 4970 13cc 00       		.byte	0
 4971 13cd 2F       		.uleb128 0x2f
 4972 13ce 49060000 		.4byte	.LASF119
 4973 13d2 13       		.byte	0x13
 4974 13d3 28       		.byte	0x28
 4975 13d4 A5000000 		.4byte	0xa5
 4976 13d8 30       		.uleb128 0x30
 4977 13d9 F3000000 		.4byte	.LASF104
 4978 13dd 0F       		.byte	0xf
 4979 13de 2B02     		.2byte	0x22b
 4980 13e0 EA130000 		.4byte	0x13ea
 4981 13e4 2B       		.uleb128 0x2b
 4982 13e5 C1110000 		.4byte	0x11c1
 4983 13e9 00       		.byte	0
 4984 13ea 2E       		.uleb128 0x2e
 4985 13eb B6000000 		.4byte	.LASF105
 4986 13ef 08       		.byte	0x8
 4987 13f0 9103     		.2byte	0x391
 4988 13f2 79010000 		.4byte	0x179
 4989 13f6 0F140000 		.4byte	0x140f
 4990 13fa 2B       		.uleb128 0x2b
 4991 13fb 9A010000 		.4byte	0x19a
 4992 13ff 2B       		.uleb128 0x2b
 4993 1400 0F140000 		.4byte	0x140f
 4994 1404 2B       		.uleb128 0x2b
 4995 1405 8F010000 		.4byte	0x18f
 4996 1409 2B       		.uleb128 0x2b
 4997 140a 14140000 		.4byte	0x1414
 4998 140e 00       		.byte	0
 4999 140f 08       		.uleb128 0x8
 5000 1410 FB000000 		.4byte	0xfb
 5001 1414 08       		.uleb128 0x8
 5002 1415 79010000 		.4byte	0x179
 5003 1419 2E       		.uleb128 0x2e
 5004 141a 22000000 		.4byte	.LASF106
 5005 141e 08       		.byte	0x8
 5006 141f A003     		.2byte	0x3a0
 5007 1421 84010000 		.4byte	0x184
 5008 1425 2F140000 		.4byte	0x142f
 5009 1429 2B       		.uleb128 0x2b
 5010 142a 2F140000 		.4byte	0x142f
 5011 142e 00       		.byte	0
 5012 142f 08       		.uleb128 0x8
 5013 1430 9A010000 		.4byte	0x19a
 5014 1434 2A       		.uleb128 0x2a
 5015 1435 63010000 		.4byte	.LASF107
 5016 1439 10       		.byte	0x10
 5017 143a 26       		.byte	0x26
 5018 143b 45140000 		.4byte	0x1445
 5019 143f 2B       		.uleb128 0x2b
 5020 1440 A5000000 		.4byte	0xa5
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 203


 5021 1444 00       		.byte	0
 5022 1445 30       		.uleb128 0x30
 5023 1446 E1030000 		.4byte	.LASF108
 5024 144a 02       		.byte	0x2
 5025 144b 9407     		.2byte	0x794
 5026 144d 66140000 		.4byte	0x1466
 5027 1451 2B       		.uleb128 0x2b
 5028 1452 73010000 		.4byte	0x173
 5029 1456 2B       		.uleb128 0x2b
 5030 1457 73010000 		.4byte	0x173
 5031 145b 2B       		.uleb128 0x2b
 5032 145c 73010000 		.4byte	0x173
 5033 1460 2B       		.uleb128 0x2b
 5034 1461 9A000000 		.4byte	0x9a
 5035 1465 00       		.byte	0
 5036 1466 30       		.uleb128 0x30
 5037 1467 11050000 		.4byte	.LASF109
 5038 146b 02       		.byte	0x2
 5039 146c 3218     		.2byte	0x1832
 5040 146e 82140000 		.4byte	0x1482
 5041 1472 2B       		.uleb128 0x2b
 5042 1473 73010000 		.4byte	0x173
 5043 1477 2B       		.uleb128 0x2b
 5044 1478 9A000000 		.4byte	0x9a
 5045 147c 2B       		.uleb128 0x2b
 5046 147d 73010000 		.4byte	0x173
 5047 1481 00       		.byte	0
 5048 1482 2C       		.uleb128 0x2c
 5049 1483 AC030000 		.4byte	.LASF110
 5050 1487 06       		.byte	0x6
 5051 1488 7E       		.byte	0x7e
 5052 1489 25000000 		.4byte	0x25
 5053 148d 9C140000 		.4byte	0x149c
 5054 1491 2B       		.uleb128 0x2b
 5055 1492 25000000 		.4byte	0x25
 5056 1496 2B       		.uleb128 0x2b
 5057 1497 25000000 		.4byte	0x25
 5058 149b 00       		.byte	0
 5059 149c 30       		.uleb128 0x30
 5060 149d FC050000 		.4byte	.LASF111
 5061 14a1 02       		.byte	0x2
 5062 14a2 6218     		.2byte	0x1862
 5063 14a4 B8140000 		.4byte	0x14b8
 5064 14a8 2B       		.uleb128 0x2b
 5065 14a9 73010000 		.4byte	0x173
 5066 14ad 2B       		.uleb128 0x2b
 5067 14ae 9A000000 		.4byte	0x9a
 5068 14b2 2B       		.uleb128 0x2b
 5069 14b3 73010000 		.4byte	0x173
 5070 14b7 00       		.byte	0
 5071 14b8 2E       		.uleb128 0x2e
 5072 14b9 01020000 		.4byte	.LASF112
 5073 14bd 08       		.byte	0x8
 5074 14be 5002     		.2byte	0x250
 5075 14c0 79010000 		.4byte	0x179
 5076 14c4 DD140000 		.4byte	0x14dd
 5077 14c8 2B       		.uleb128 0x2b
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 204


 5078 14c9 9A010000 		.4byte	0x19a
 5079 14cd 2B       		.uleb128 0x2b
 5080 14ce DD140000 		.4byte	0x14dd
 5081 14d2 2B       		.uleb128 0x2b
 5082 14d3 8F010000 		.4byte	0x18f
 5083 14d7 2B       		.uleb128 0x2b
 5084 14d8 14140000 		.4byte	0x1414
 5085 14dc 00       		.byte	0
 5086 14dd 08       		.uleb128 0x8
 5087 14de 0E010000 		.4byte	0x10e
 5088 14e2 31       		.uleb128 0x31
 5089 14e3 7E030000 		.4byte	.LASF120
 5090 14e7 14       		.byte	0x14
 5091 14e8 00       		.byte	0
 5092 14e9 77020000 		.4byte	.LASF121
 5093 14ed FD000000 		.4byte	0xfd
 5094 14f1 00150000 		.4byte	0x1500
 5095 14f5 2B       		.uleb128 0x2b
 5096 14f6 FD000000 		.4byte	0xfd
 5097 14fa 2B       		.uleb128 0x2b
 5098 14fb 03010000 		.4byte	0x103
 5099 14ff 00       		.byte	0
 5100 1500 32       		.uleb128 0x32
 5101 1501 706F7700 		.ascii	"pow\000"
 5102 1505 06       		.byte	0x6
 5103 1506 85       		.byte	0x85
 5104 1507 25000000 		.4byte	0x25
 5105 150b 1A150000 		.4byte	0x151a
 5106 150f 2B       		.uleb128 0x2b
 5107 1510 25000000 		.4byte	0x25
 5108 1514 2B       		.uleb128 0x2b
 5109 1515 25000000 		.4byte	0x25
 5110 1519 00       		.byte	0
 5111 151a 2A       		.uleb128 0x2a
 5112 151b 9E030000 		.4byte	.LASF113
 5113 151f 11       		.byte	0x11
 5114 1520 41       		.byte	0x41
 5115 1521 2B150000 		.4byte	0x152b
 5116 1525 2B       		.uleb128 0x2b
 5117 1526 A5000000 		.4byte	0xa5
 5118 152a 00       		.byte	0
 5119 152b 33       		.uleb128 0x33
 5120 152c DA040000 		.4byte	.LASF122
 5121 1530 15       		.byte	0x15
 5122 1531 41       		.byte	0x41
 5123 1532 2B       		.uleb128 0x2b
 5124 1533 A5000000 		.4byte	0xa5
 5125 1537 00       		.byte	0
 5126 1538 00       		.byte	0
 5127              		.section	.debug_abbrev,"",%progbits
 5128              	.Ldebug_abbrev0:
 5129 0000 01       		.uleb128 0x1
 5130 0001 11       		.uleb128 0x11
 5131 0002 01       		.byte	0x1
 5132 0003 25       		.uleb128 0x25
 5133 0004 0E       		.uleb128 0xe
 5134 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 205


 5135 0006 0B       		.uleb128 0xb
 5136 0007 03       		.uleb128 0x3
 5137 0008 0E       		.uleb128 0xe
 5138 0009 1B       		.uleb128 0x1b
 5139 000a 0E       		.uleb128 0xe
 5140 000b 55       		.uleb128 0x55
 5141 000c 17       		.uleb128 0x17
 5142 000d 11       		.uleb128 0x11
 5143 000e 01       		.uleb128 0x1
 5144 000f 10       		.uleb128 0x10
 5145 0010 17       		.uleb128 0x17
 5146 0011 00       		.byte	0
 5147 0012 00       		.byte	0
 5148 0013 02       		.uleb128 0x2
 5149 0014 24       		.uleb128 0x24
 5150 0015 00       		.byte	0
 5151 0016 0B       		.uleb128 0xb
 5152 0017 0B       		.uleb128 0xb
 5153 0018 3E       		.uleb128 0x3e
 5154 0019 0B       		.uleb128 0xb
 5155 001a 03       		.uleb128 0x3
 5156 001b 0E       		.uleb128 0xe
 5157 001c 00       		.byte	0
 5158 001d 00       		.byte	0
 5159 001e 03       		.uleb128 0x3
 5160 001f 16       		.uleb128 0x16
 5161 0020 00       		.byte	0
 5162 0021 03       		.uleb128 0x3
 5163 0022 0E       		.uleb128 0xe
 5164 0023 3A       		.uleb128 0x3a
 5165 0024 0B       		.uleb128 0xb
 5166 0025 3B       		.uleb128 0x3b
 5167 0026 0B       		.uleb128 0xb
 5168 0027 49       		.uleb128 0x49
 5169 0028 13       		.uleb128 0x13
 5170 0029 00       		.byte	0
 5171 002a 00       		.byte	0
 5172 002b 04       		.uleb128 0x4
 5173 002c 24       		.uleb128 0x24
 5174 002d 00       		.byte	0
 5175 002e 0B       		.uleb128 0xb
 5176 002f 0B       		.uleb128 0xb
 5177 0030 3E       		.uleb128 0x3e
 5178 0031 0B       		.uleb128 0xb
 5179 0032 03       		.uleb128 0x3
 5180 0033 08       		.uleb128 0x8
 5181 0034 00       		.byte	0
 5182 0035 00       		.byte	0
 5183 0036 05       		.uleb128 0x5
 5184 0037 16       		.uleb128 0x16
 5185 0038 00       		.byte	0
 5186 0039 03       		.uleb128 0x3
 5187 003a 0E       		.uleb128 0xe
 5188 003b 3A       		.uleb128 0x3a
 5189 003c 0B       		.uleb128 0xb
 5190 003d 3B       		.uleb128 0x3b
 5191 003e 05       		.uleb128 0x5
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 206


 5192 003f 49       		.uleb128 0x49
 5193 0040 13       		.uleb128 0x13
 5194 0041 00       		.byte	0
 5195 0042 00       		.byte	0
 5196 0043 06       		.uleb128 0x6
 5197 0044 0F       		.uleb128 0xf
 5198 0045 00       		.byte	0
 5199 0046 0B       		.uleb128 0xb
 5200 0047 0B       		.uleb128 0xb
 5201 0048 00       		.byte	0
 5202 0049 00       		.byte	0
 5203 004a 07       		.uleb128 0x7
 5204 004b 0F       		.uleb128 0xf
 5205 004c 00       		.byte	0
 5206 004d 0B       		.uleb128 0xb
 5207 004e 0B       		.uleb128 0xb
 5208 004f 49       		.uleb128 0x49
 5209 0050 13       		.uleb128 0x13
 5210 0051 00       		.byte	0
 5211 0052 00       		.byte	0
 5212 0053 08       		.uleb128 0x8
 5213 0054 26       		.uleb128 0x26
 5214 0055 00       		.byte	0
 5215 0056 49       		.uleb128 0x49
 5216 0057 13       		.uleb128 0x13
 5217 0058 00       		.byte	0
 5218 0059 00       		.byte	0
 5219 005a 09       		.uleb128 0x9
 5220 005b 26       		.uleb128 0x26
 5221 005c 00       		.byte	0
 5222 005d 00       		.byte	0
 5223 005e 00       		.byte	0
 5224 005f 0A       		.uleb128 0xa
 5225 0060 04       		.uleb128 0x4
 5226 0061 01       		.byte	0x1
 5227 0062 0B       		.uleb128 0xb
 5228 0063 0B       		.uleb128 0xb
 5229 0064 3A       		.uleb128 0x3a
 5230 0065 0B       		.uleb128 0xb
 5231 0066 3B       		.uleb128 0x3b
 5232 0067 05       		.uleb128 0x5
 5233 0068 01       		.uleb128 0x1
 5234 0069 13       		.uleb128 0x13
 5235 006a 00       		.byte	0
 5236 006b 00       		.byte	0
 5237 006c 0B       		.uleb128 0xb
 5238 006d 28       		.uleb128 0x28
 5239 006e 00       		.byte	0
 5240 006f 03       		.uleb128 0x3
 5241 0070 0E       		.uleb128 0xe
 5242 0071 1C       		.uleb128 0x1c
 5243 0072 0D       		.uleb128 0xd
 5244 0073 00       		.byte	0
 5245 0074 00       		.byte	0
 5246 0075 0C       		.uleb128 0xc
 5247 0076 04       		.uleb128 0x4
 5248 0077 01       		.byte	0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 207


 5249 0078 03       		.uleb128 0x3
 5250 0079 0E       		.uleb128 0xe
 5251 007a 0B       		.uleb128 0xb
 5252 007b 0B       		.uleb128 0xb
 5253 007c 3A       		.uleb128 0x3a
 5254 007d 0B       		.uleb128 0xb
 5255 007e 3B       		.uleb128 0x3b
 5256 007f 0B       		.uleb128 0xb
 5257 0080 01       		.uleb128 0x1
 5258 0081 13       		.uleb128 0x13
 5259 0082 00       		.byte	0
 5260 0083 00       		.byte	0
 5261 0084 0D       		.uleb128 0xd
 5262 0085 13       		.uleb128 0x13
 5263 0086 01       		.byte	0x1
 5264 0087 0B       		.uleb128 0xb
 5265 0088 0B       		.uleb128 0xb
 5266 0089 3A       		.uleb128 0x3a
 5267 008a 0B       		.uleb128 0xb
 5268 008b 3B       		.uleb128 0x3b
 5269 008c 0B       		.uleb128 0xb
 5270 008d 01       		.uleb128 0x1
 5271 008e 13       		.uleb128 0x13
 5272 008f 00       		.byte	0
 5273 0090 00       		.byte	0
 5274 0091 0E       		.uleb128 0xe
 5275 0092 0D       		.uleb128 0xd
 5276 0093 00       		.byte	0
 5277 0094 03       		.uleb128 0x3
 5278 0095 0E       		.uleb128 0xe
 5279 0096 3A       		.uleb128 0x3a
 5280 0097 0B       		.uleb128 0xb
 5281 0098 3B       		.uleb128 0x3b
 5282 0099 0B       		.uleb128 0xb
 5283 009a 49       		.uleb128 0x49
 5284 009b 13       		.uleb128 0x13
 5285 009c 38       		.uleb128 0x38
 5286 009d 0B       		.uleb128 0xb
 5287 009e 00       		.byte	0
 5288 009f 00       		.byte	0
 5289 00a0 0F       		.uleb128 0xf
 5290 00a1 2E       		.uleb128 0x2e
 5291 00a2 01       		.byte	0x1
 5292 00a3 03       		.uleb128 0x3
 5293 00a4 0E       		.uleb128 0xe
 5294 00a5 3A       		.uleb128 0x3a
 5295 00a6 0B       		.uleb128 0xb
 5296 00a7 3B       		.uleb128 0x3b
 5297 00a8 05       		.uleb128 0x5
 5298 00a9 27       		.uleb128 0x27
 5299 00aa 19       		.uleb128 0x19
 5300 00ab 49       		.uleb128 0x49
 5301 00ac 13       		.uleb128 0x13
 5302 00ad 20       		.uleb128 0x20
 5303 00ae 0B       		.uleb128 0xb
 5304 00af 01       		.uleb128 0x1
 5305 00b0 13       		.uleb128 0x13
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 208


 5306 00b1 00       		.byte	0
 5307 00b2 00       		.byte	0
 5308 00b3 10       		.uleb128 0x10
 5309 00b4 05       		.uleb128 0x5
 5310 00b5 00       		.byte	0
 5311 00b6 03       		.uleb128 0x3
 5312 00b7 08       		.uleb128 0x8
 5313 00b8 3A       		.uleb128 0x3a
 5314 00b9 0B       		.uleb128 0xb
 5315 00ba 3B       		.uleb128 0x3b
 5316 00bb 05       		.uleb128 0x5
 5317 00bc 49       		.uleb128 0x49
 5318 00bd 13       		.uleb128 0x13
 5319 00be 00       		.byte	0
 5320 00bf 00       		.byte	0
 5321 00c0 11       		.uleb128 0x11
 5322 00c1 05       		.uleb128 0x5
 5323 00c2 00       		.byte	0
 5324 00c3 03       		.uleb128 0x3
 5325 00c4 0E       		.uleb128 0xe
 5326 00c5 3A       		.uleb128 0x3a
 5327 00c6 0B       		.uleb128 0xb
 5328 00c7 3B       		.uleb128 0x3b
 5329 00c8 05       		.uleb128 0x5
 5330 00c9 49       		.uleb128 0x49
 5331 00ca 13       		.uleb128 0x13
 5332 00cb 00       		.byte	0
 5333 00cc 00       		.byte	0
 5334 00cd 12       		.uleb128 0x12
 5335 00ce 2E       		.uleb128 0x2e
 5336 00cf 01       		.byte	0x1
 5337 00d0 3F       		.uleb128 0x3f
 5338 00d1 19       		.uleb128 0x19
 5339 00d2 03       		.uleb128 0x3
 5340 00d3 0E       		.uleb128 0xe
 5341 00d4 3A       		.uleb128 0x3a
 5342 00d5 0B       		.uleb128 0xb
 5343 00d6 3B       		.uleb128 0x3b
 5344 00d7 0B       		.uleb128 0xb
 5345 00d8 27       		.uleb128 0x27
 5346 00d9 19       		.uleb128 0x19
 5347 00da 11       		.uleb128 0x11
 5348 00db 01       		.uleb128 0x1
 5349 00dc 12       		.uleb128 0x12
 5350 00dd 06       		.uleb128 0x6
 5351 00de 40       		.uleb128 0x40
 5352 00df 18       		.uleb128 0x18
 5353 00e0 9742     		.uleb128 0x2117
 5354 00e2 19       		.uleb128 0x19
 5355 00e3 01       		.uleb128 0x1
 5356 00e4 13       		.uleb128 0x13
 5357 00e5 00       		.byte	0
 5358 00e6 00       		.byte	0
 5359 00e7 13       		.uleb128 0x13
 5360 00e8 05       		.uleb128 0x5
 5361 00e9 00       		.byte	0
 5362 00ea 03       		.uleb128 0x3
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 209


 5363 00eb 08       		.uleb128 0x8
 5364 00ec 3A       		.uleb128 0x3a
 5365 00ed 0B       		.uleb128 0xb
 5366 00ee 3B       		.uleb128 0x3b
 5367 00ef 0B       		.uleb128 0xb
 5368 00f0 49       		.uleb128 0x49
 5369 00f1 13       		.uleb128 0x13
 5370 00f2 02       		.uleb128 0x2
 5371 00f3 17       		.uleb128 0x17
 5372 00f4 00       		.byte	0
 5373 00f5 00       		.byte	0
 5374 00f6 14       		.uleb128 0x14
 5375 00f7 898201   		.uleb128 0x4109
 5376 00fa 01       		.byte	0x1
 5377 00fb 11       		.uleb128 0x11
 5378 00fc 01       		.uleb128 0x1
 5379 00fd 31       		.uleb128 0x31
 5380 00fe 13       		.uleb128 0x13
 5381 00ff 01       		.uleb128 0x1
 5382 0100 13       		.uleb128 0x13
 5383 0101 00       		.byte	0
 5384 0102 00       		.byte	0
 5385 0103 15       		.uleb128 0x15
 5386 0104 8A8201   		.uleb128 0x410a
 5387 0107 00       		.byte	0
 5388 0108 02       		.uleb128 0x2
 5389 0109 18       		.uleb128 0x18
 5390 010a 9142     		.uleb128 0x2111
 5391 010c 18       		.uleb128 0x18
 5392 010d 00       		.byte	0
 5393 010e 00       		.byte	0
 5394 010f 16       		.uleb128 0x16
 5395 0110 898201   		.uleb128 0x4109
 5396 0113 01       		.byte	0x1
 5397 0114 11       		.uleb128 0x11
 5398 0115 01       		.uleb128 0x1
 5399 0116 31       		.uleb128 0x31
 5400 0117 13       		.uleb128 0x13
 5401 0118 00       		.byte	0
 5402 0119 00       		.byte	0
 5403 011a 17       		.uleb128 0x17
 5404 011b 34       		.uleb128 0x34
 5405 011c 00       		.byte	0
 5406 011d 03       		.uleb128 0x3
 5407 011e 08       		.uleb128 0x8
 5408 011f 3A       		.uleb128 0x3a
 5409 0120 0B       		.uleb128 0xb
 5410 0121 3B       		.uleb128 0x3b
 5411 0122 0B       		.uleb128 0xb
 5412 0123 49       		.uleb128 0x49
 5413 0124 13       		.uleb128 0x13
 5414 0125 02       		.uleb128 0x2
 5415 0126 18       		.uleb128 0x18
 5416 0127 00       		.byte	0
 5417 0128 00       		.byte	0
 5418 0129 18       		.uleb128 0x18
 5419 012a 01       		.uleb128 0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 210


 5420 012b 01       		.byte	0x1
 5421 012c 49       		.uleb128 0x49
 5422 012d 13       		.uleb128 0x13
 5423 012e 01       		.uleb128 0x1
 5424 012f 13       		.uleb128 0x13
 5425 0130 00       		.byte	0
 5426 0131 00       		.byte	0
 5427 0132 19       		.uleb128 0x19
 5428 0133 21       		.uleb128 0x21
 5429 0134 00       		.byte	0
 5430 0135 49       		.uleb128 0x49
 5431 0136 13       		.uleb128 0x13
 5432 0137 2F       		.uleb128 0x2f
 5433 0138 0B       		.uleb128 0xb
 5434 0139 00       		.byte	0
 5435 013a 00       		.byte	0
 5436 013b 1A       		.uleb128 0x1a
 5437 013c 34       		.uleb128 0x34
 5438 013d 00       		.byte	0
 5439 013e 03       		.uleb128 0x3
 5440 013f 08       		.uleb128 0x8
 5441 0140 3A       		.uleb128 0x3a
 5442 0141 0B       		.uleb128 0xb
 5443 0142 3B       		.uleb128 0x3b
 5444 0143 0B       		.uleb128 0xb
 5445 0144 49       		.uleb128 0x49
 5446 0145 13       		.uleb128 0x13
 5447 0146 02       		.uleb128 0x2
 5448 0147 17       		.uleb128 0x17
 5449 0148 00       		.byte	0
 5450 0149 00       		.byte	0
 5451 014a 1B       		.uleb128 0x1b
 5452 014b 898201   		.uleb128 0x4109
 5453 014e 00       		.byte	0
 5454 014f 11       		.uleb128 0x11
 5455 0150 01       		.uleb128 0x1
 5456 0151 31       		.uleb128 0x31
 5457 0152 13       		.uleb128 0x13
 5458 0153 00       		.byte	0
 5459 0154 00       		.byte	0
 5460 0155 1C       		.uleb128 0x1c
 5461 0156 2E       		.uleb128 0x2e
 5462 0157 01       		.byte	0x1
 5463 0158 3F       		.uleb128 0x3f
 5464 0159 19       		.uleb128 0x19
 5465 015a 03       		.uleb128 0x3
 5466 015b 0E       		.uleb128 0xe
 5467 015c 3A       		.uleb128 0x3a
 5468 015d 0B       		.uleb128 0xb
 5469 015e 3B       		.uleb128 0x3b
 5470 015f 05       		.uleb128 0x5
 5471 0160 27       		.uleb128 0x27
 5472 0161 19       		.uleb128 0x19
 5473 0162 11       		.uleb128 0x11
 5474 0163 01       		.uleb128 0x1
 5475 0164 12       		.uleb128 0x12
 5476 0165 06       		.uleb128 0x6
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 211


 5477 0166 40       		.uleb128 0x40
 5478 0167 18       		.uleb128 0x18
 5479 0168 9642     		.uleb128 0x2116
 5480 016a 19       		.uleb128 0x19
 5481 016b 01       		.uleb128 0x1
 5482 016c 13       		.uleb128 0x13
 5483 016d 00       		.byte	0
 5484 016e 00       		.byte	0
 5485 016f 1D       		.uleb128 0x1d
 5486 0170 34       		.uleb128 0x34
 5487 0171 00       		.byte	0
 5488 0172 03       		.uleb128 0x3
 5489 0173 08       		.uleb128 0x8
 5490 0174 3A       		.uleb128 0x3a
 5491 0175 0B       		.uleb128 0xb
 5492 0176 3B       		.uleb128 0x3b
 5493 0177 05       		.uleb128 0x5
 5494 0178 49       		.uleb128 0x49
 5495 0179 13       		.uleb128 0x13
 5496 017a 02       		.uleb128 0x2
 5497 017b 18       		.uleb128 0x18
 5498 017c 00       		.byte	0
 5499 017d 00       		.byte	0
 5500 017e 1E       		.uleb128 0x1e
 5501 017f 05       		.uleb128 0x5
 5502 0180 00       		.byte	0
 5503 0181 03       		.uleb128 0x3
 5504 0182 0E       		.uleb128 0xe
 5505 0183 3A       		.uleb128 0x3a
 5506 0184 0B       		.uleb128 0xb
 5507 0185 3B       		.uleb128 0x3b
 5508 0186 05       		.uleb128 0x5
 5509 0187 49       		.uleb128 0x49
 5510 0188 13       		.uleb128 0x13
 5511 0189 02       		.uleb128 0x2
 5512 018a 17       		.uleb128 0x17
 5513 018b 00       		.byte	0
 5514 018c 00       		.byte	0
 5515 018d 1F       		.uleb128 0x1f
 5516 018e 34       		.uleb128 0x34
 5517 018f 00       		.byte	0
 5518 0190 03       		.uleb128 0x3
 5519 0191 0E       		.uleb128 0xe
 5520 0192 3A       		.uleb128 0x3a
 5521 0193 0B       		.uleb128 0xb
 5522 0194 3B       		.uleb128 0x3b
 5523 0195 05       		.uleb128 0x5
 5524 0196 49       		.uleb128 0x49
 5525 0197 13       		.uleb128 0x13
 5526 0198 02       		.uleb128 0x2
 5527 0199 18       		.uleb128 0x18
 5528 019a 00       		.byte	0
 5529 019b 00       		.byte	0
 5530 019c 20       		.uleb128 0x20
 5531 019d 34       		.uleb128 0x34
 5532 019e 00       		.byte	0
 5533 019f 03       		.uleb128 0x3
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 212


 5534 01a0 0E       		.uleb128 0xe
 5535 01a1 3A       		.uleb128 0x3a
 5536 01a2 0B       		.uleb128 0xb
 5537 01a3 3B       		.uleb128 0x3b
 5538 01a4 05       		.uleb128 0x5
 5539 01a5 49       		.uleb128 0x49
 5540 01a6 13       		.uleb128 0x13
 5541 01a7 02       		.uleb128 0x2
 5542 01a8 17       		.uleb128 0x17
 5543 01a9 00       		.byte	0
 5544 01aa 00       		.byte	0
 5545 01ab 21       		.uleb128 0x21
 5546 01ac 34       		.uleb128 0x34
 5547 01ad 00       		.byte	0
 5548 01ae 03       		.uleb128 0x3
 5549 01af 08       		.uleb128 0x8
 5550 01b0 3A       		.uleb128 0x3a
 5551 01b1 0B       		.uleb128 0xb
 5552 01b2 3B       		.uleb128 0x3b
 5553 01b3 05       		.uleb128 0x5
 5554 01b4 49       		.uleb128 0x49
 5555 01b5 13       		.uleb128 0x13
 5556 01b6 02       		.uleb128 0x2
 5557 01b7 17       		.uleb128 0x17
 5558 01b8 00       		.byte	0
 5559 01b9 00       		.byte	0
 5560 01ba 22       		.uleb128 0x22
 5561 01bb 34       		.uleb128 0x34
 5562 01bc 00       		.byte	0
 5563 01bd 03       		.uleb128 0x3
 5564 01be 0E       		.uleb128 0xe
 5565 01bf 3A       		.uleb128 0x3a
 5566 01c0 0B       		.uleb128 0xb
 5567 01c1 3B       		.uleb128 0x3b
 5568 01c2 05       		.uleb128 0x5
 5569 01c3 49       		.uleb128 0x49
 5570 01c4 13       		.uleb128 0x13
 5571 01c5 1C       		.uleb128 0x1c
 5572 01c6 0B       		.uleb128 0xb
 5573 01c7 00       		.byte	0
 5574 01c8 00       		.byte	0
 5575 01c9 23       		.uleb128 0x23
 5576 01ca 1D       		.uleb128 0x1d
 5577 01cb 01       		.byte	0x1
 5578 01cc 31       		.uleb128 0x31
 5579 01cd 13       		.uleb128 0x13
 5580 01ce 11       		.uleb128 0x11
 5581 01cf 01       		.uleb128 0x1
 5582 01d0 12       		.uleb128 0x12
 5583 01d1 06       		.uleb128 0x6
 5584 01d2 58       		.uleb128 0x58
 5585 01d3 0B       		.uleb128 0xb
 5586 01d4 59       		.uleb128 0x59
 5587 01d5 05       		.uleb128 0x5
 5588 01d6 01       		.uleb128 0x1
 5589 01d7 13       		.uleb128 0x13
 5590 01d8 00       		.byte	0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 213


 5591 01d9 00       		.byte	0
 5592 01da 24       		.uleb128 0x24
 5593 01db 05       		.uleb128 0x5
 5594 01dc 00       		.byte	0
 5595 01dd 31       		.uleb128 0x31
 5596 01de 13       		.uleb128 0x13
 5597 01df 02       		.uleb128 0x2
 5598 01e0 17       		.uleb128 0x17
 5599 01e1 00       		.byte	0
 5600 01e2 00       		.byte	0
 5601 01e3 25       		.uleb128 0x25
 5602 01e4 34       		.uleb128 0x34
 5603 01e5 00       		.byte	0
 5604 01e6 03       		.uleb128 0x3
 5605 01e7 0E       		.uleb128 0xe
 5606 01e8 3A       		.uleb128 0x3a
 5607 01e9 0B       		.uleb128 0xb
 5608 01ea 3B       		.uleb128 0x3b
 5609 01eb 05       		.uleb128 0x5
 5610 01ec 49       		.uleb128 0x49
 5611 01ed 13       		.uleb128 0x13
 5612 01ee 3F       		.uleb128 0x3f
 5613 01ef 19       		.uleb128 0x19
 5614 01f0 3C       		.uleb128 0x3c
 5615 01f1 19       		.uleb128 0x19
 5616 01f2 00       		.byte	0
 5617 01f3 00       		.byte	0
 5618 01f4 26       		.uleb128 0x26
 5619 01f5 35       		.uleb128 0x35
 5620 01f6 00       		.byte	0
 5621 01f7 49       		.uleb128 0x49
 5622 01f8 13       		.uleb128 0x13
 5623 01f9 00       		.byte	0
 5624 01fa 00       		.byte	0
 5625 01fb 27       		.uleb128 0x27
 5626 01fc 34       		.uleb128 0x34
 5627 01fd 00       		.byte	0
 5628 01fe 03       		.uleb128 0x3
 5629 01ff 0E       		.uleb128 0xe
 5630 0200 3A       		.uleb128 0x3a
 5631 0201 0B       		.uleb128 0xb
 5632 0202 3B       		.uleb128 0x3b
 5633 0203 0B       		.uleb128 0xb
 5634 0204 49       		.uleb128 0x49
 5635 0205 13       		.uleb128 0x13
 5636 0206 3F       		.uleb128 0x3f
 5637 0207 19       		.uleb128 0x19
 5638 0208 3C       		.uleb128 0x3c
 5639 0209 19       		.uleb128 0x19
 5640 020a 00       		.byte	0
 5641 020b 00       		.byte	0
 5642 020c 28       		.uleb128 0x28
 5643 020d 34       		.uleb128 0x34
 5644 020e 00       		.byte	0
 5645 020f 03       		.uleb128 0x3
 5646 0210 0E       		.uleb128 0xe
 5647 0211 3A       		.uleb128 0x3a
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 214


 5648 0212 0B       		.uleb128 0xb
 5649 0213 3B       		.uleb128 0x3b
 5650 0214 0B       		.uleb128 0xb
 5651 0215 49       		.uleb128 0x49
 5652 0216 13       		.uleb128 0x13
 5653 0217 3F       		.uleb128 0x3f
 5654 0218 19       		.uleb128 0x19
 5655 0219 02       		.uleb128 0x2
 5656 021a 18       		.uleb128 0x18
 5657 021b 00       		.byte	0
 5658 021c 00       		.byte	0
 5659 021d 29       		.uleb128 0x29
 5660 021e 34       		.uleb128 0x34
 5661 021f 00       		.byte	0
 5662 0220 03       		.uleb128 0x3
 5663 0221 08       		.uleb128 0x8
 5664 0222 3A       		.uleb128 0x3a
 5665 0223 0B       		.uleb128 0xb
 5666 0224 3B       		.uleb128 0x3b
 5667 0225 0B       		.uleb128 0xb
 5668 0226 49       		.uleb128 0x49
 5669 0227 13       		.uleb128 0x13
 5670 0228 3F       		.uleb128 0x3f
 5671 0229 19       		.uleb128 0x19
 5672 022a 02       		.uleb128 0x2
 5673 022b 18       		.uleb128 0x18
 5674 022c 00       		.byte	0
 5675 022d 00       		.byte	0
 5676 022e 2A       		.uleb128 0x2a
 5677 022f 2E       		.uleb128 0x2e
 5678 0230 01       		.byte	0x1
 5679 0231 3F       		.uleb128 0x3f
 5680 0232 19       		.uleb128 0x19
 5681 0233 03       		.uleb128 0x3
 5682 0234 0E       		.uleb128 0xe
 5683 0235 3A       		.uleb128 0x3a
 5684 0236 0B       		.uleb128 0xb
 5685 0237 3B       		.uleb128 0x3b
 5686 0238 0B       		.uleb128 0xb
 5687 0239 27       		.uleb128 0x27
 5688 023a 19       		.uleb128 0x19
 5689 023b 3C       		.uleb128 0x3c
 5690 023c 19       		.uleb128 0x19
 5691 023d 01       		.uleb128 0x1
 5692 023e 13       		.uleb128 0x13
 5693 023f 00       		.byte	0
 5694 0240 00       		.byte	0
 5695 0241 2B       		.uleb128 0x2b
 5696 0242 05       		.uleb128 0x5
 5697 0243 00       		.byte	0
 5698 0244 49       		.uleb128 0x49
 5699 0245 13       		.uleb128 0x13
 5700 0246 00       		.byte	0
 5701 0247 00       		.byte	0
 5702 0248 2C       		.uleb128 0x2c
 5703 0249 2E       		.uleb128 0x2e
 5704 024a 01       		.byte	0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 215


 5705 024b 3F       		.uleb128 0x3f
 5706 024c 19       		.uleb128 0x19
 5707 024d 03       		.uleb128 0x3
 5708 024e 0E       		.uleb128 0xe
 5709 024f 3A       		.uleb128 0x3a
 5710 0250 0B       		.uleb128 0xb
 5711 0251 3B       		.uleb128 0x3b
 5712 0252 0B       		.uleb128 0xb
 5713 0253 27       		.uleb128 0x27
 5714 0254 19       		.uleb128 0x19
 5715 0255 49       		.uleb128 0x49
 5716 0256 13       		.uleb128 0x13
 5717 0257 3C       		.uleb128 0x3c
 5718 0258 19       		.uleb128 0x19
 5719 0259 01       		.uleb128 0x1
 5720 025a 13       		.uleb128 0x13
 5721 025b 00       		.byte	0
 5722 025c 00       		.byte	0
 5723 025d 2D       		.uleb128 0x2d
 5724 025e 18       		.uleb128 0x18
 5725 025f 00       		.byte	0
 5726 0260 00       		.byte	0
 5727 0261 00       		.byte	0
 5728 0262 2E       		.uleb128 0x2e
 5729 0263 2E       		.uleb128 0x2e
 5730 0264 01       		.byte	0x1
 5731 0265 3F       		.uleb128 0x3f
 5732 0266 19       		.uleb128 0x19
 5733 0267 03       		.uleb128 0x3
 5734 0268 0E       		.uleb128 0xe
 5735 0269 3A       		.uleb128 0x3a
 5736 026a 0B       		.uleb128 0xb
 5737 026b 3B       		.uleb128 0x3b
 5738 026c 05       		.uleb128 0x5
 5739 026d 27       		.uleb128 0x27
 5740 026e 19       		.uleb128 0x19
 5741 026f 49       		.uleb128 0x49
 5742 0270 13       		.uleb128 0x13
 5743 0271 3C       		.uleb128 0x3c
 5744 0272 19       		.uleb128 0x19
 5745 0273 01       		.uleb128 0x1
 5746 0274 13       		.uleb128 0x13
 5747 0275 00       		.byte	0
 5748 0276 00       		.byte	0
 5749 0277 2F       		.uleb128 0x2f
 5750 0278 2E       		.uleb128 0x2e
 5751 0279 00       		.byte	0
 5752 027a 3F       		.uleb128 0x3f
 5753 027b 19       		.uleb128 0x19
 5754 027c 03       		.uleb128 0x3
 5755 027d 0E       		.uleb128 0xe
 5756 027e 3A       		.uleb128 0x3a
 5757 027f 0B       		.uleb128 0xb
 5758 0280 3B       		.uleb128 0x3b
 5759 0281 0B       		.uleb128 0xb
 5760 0282 27       		.uleb128 0x27
 5761 0283 19       		.uleb128 0x19
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 216


 5762 0284 49       		.uleb128 0x49
 5763 0285 13       		.uleb128 0x13
 5764 0286 3C       		.uleb128 0x3c
 5765 0287 19       		.uleb128 0x19
 5766 0288 00       		.byte	0
 5767 0289 00       		.byte	0
 5768 028a 30       		.uleb128 0x30
 5769 028b 2E       		.uleb128 0x2e
 5770 028c 01       		.byte	0x1
 5771 028d 3F       		.uleb128 0x3f
 5772 028e 19       		.uleb128 0x19
 5773 028f 03       		.uleb128 0x3
 5774 0290 0E       		.uleb128 0xe
 5775 0291 3A       		.uleb128 0x3a
 5776 0292 0B       		.uleb128 0xb
 5777 0293 3B       		.uleb128 0x3b
 5778 0294 05       		.uleb128 0x5
 5779 0295 27       		.uleb128 0x27
 5780 0296 19       		.uleb128 0x19
 5781 0297 3C       		.uleb128 0x3c
 5782 0298 19       		.uleb128 0x19
 5783 0299 01       		.uleb128 0x1
 5784 029a 13       		.uleb128 0x13
 5785 029b 00       		.byte	0
 5786 029c 00       		.byte	0
 5787 029d 31       		.uleb128 0x31
 5788 029e 2E       		.uleb128 0x2e
 5789 029f 01       		.byte	0x1
 5790 02a0 3F       		.uleb128 0x3f
 5791 02a1 19       		.uleb128 0x19
 5792 02a2 03       		.uleb128 0x3
 5793 02a3 0E       		.uleb128 0xe
 5794 02a4 3A       		.uleb128 0x3a
 5795 02a5 0B       		.uleb128 0xb
 5796 02a6 3B       		.uleb128 0x3b
 5797 02a7 0B       		.uleb128 0xb
 5798 02a8 6E       		.uleb128 0x6e
 5799 02a9 0E       		.uleb128 0xe
 5800 02aa 27       		.uleb128 0x27
 5801 02ab 19       		.uleb128 0x19
 5802 02ac 49       		.uleb128 0x49
 5803 02ad 13       		.uleb128 0x13
 5804 02ae 3C       		.uleb128 0x3c
 5805 02af 19       		.uleb128 0x19
 5806 02b0 01       		.uleb128 0x1
 5807 02b1 13       		.uleb128 0x13
 5808 02b2 00       		.byte	0
 5809 02b3 00       		.byte	0
 5810 02b4 32       		.uleb128 0x32
 5811 02b5 2E       		.uleb128 0x2e
 5812 02b6 01       		.byte	0x1
 5813 02b7 3F       		.uleb128 0x3f
 5814 02b8 19       		.uleb128 0x19
 5815 02b9 03       		.uleb128 0x3
 5816 02ba 08       		.uleb128 0x8
 5817 02bb 3A       		.uleb128 0x3a
 5818 02bc 0B       		.uleb128 0xb
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 217


 5819 02bd 3B       		.uleb128 0x3b
 5820 02be 0B       		.uleb128 0xb
 5821 02bf 27       		.uleb128 0x27
 5822 02c0 19       		.uleb128 0x19
 5823 02c1 49       		.uleb128 0x49
 5824 02c2 13       		.uleb128 0x13
 5825 02c3 3C       		.uleb128 0x3c
 5826 02c4 19       		.uleb128 0x19
 5827 02c5 01       		.uleb128 0x1
 5828 02c6 13       		.uleb128 0x13
 5829 02c7 00       		.byte	0
 5830 02c8 00       		.byte	0
 5831 02c9 33       		.uleb128 0x33
 5832 02ca 2E       		.uleb128 0x2e
 5833 02cb 01       		.byte	0x1
 5834 02cc 3F       		.uleb128 0x3f
 5835 02cd 19       		.uleb128 0x19
 5836 02ce 03       		.uleb128 0x3
 5837 02cf 0E       		.uleb128 0xe
 5838 02d0 3A       		.uleb128 0x3a
 5839 02d1 0B       		.uleb128 0xb
 5840 02d2 3B       		.uleb128 0x3b
 5841 02d3 0B       		.uleb128 0xb
 5842 02d4 27       		.uleb128 0x27
 5843 02d5 19       		.uleb128 0x19
 5844 02d6 3C       		.uleb128 0x3c
 5845 02d7 19       		.uleb128 0x19
 5846 02d8 00       		.byte	0
 5847 02d9 00       		.byte	0
 5848 02da 00       		.byte	0
 5849              		.section	.debug_loc,"",%progbits
 5850              	.Ldebug_loc0:
 5851              	.LLST0:
 5852 0000 00000000 		.4byte	.LVL0
 5853 0004 07000000 		.4byte	.LVL1-1
 5854 0008 0100     		.2byte	0x1
 5855 000a 50       		.byte	0x50
 5856 000b 07000000 		.4byte	.LVL1-1
 5857 000f 14000000 		.4byte	.LFE119
 5858 0013 0400     		.2byte	0x4
 5859 0015 F3       		.byte	0xf3
 5860 0016 01       		.uleb128 0x1
 5861 0017 50       		.byte	0x50
 5862 0018 9F       		.byte	0x9f
 5863 0019 00000000 		.4byte	0
 5864 001d 00000000 		.4byte	0
 5865              	.LLST1:
 5866 0021 1C000000 		.4byte	.LVL49
 5867 0025 2E000000 		.4byte	.LVL50
 5868 0029 0100     		.2byte	0x1
 5869 002b 53       		.byte	0x53
 5870 002c 2E000000 		.4byte	.LVL50
 5871 0030 3D000000 		.4byte	.LVL51-1
 5872 0034 0100     		.2byte	0x1
 5873 0036 51       		.byte	0x51
 5874 0037 00000000 		.4byte	0
 5875 003b 00000000 		.4byte	0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 218


 5876              	.LLST2:
 5877 003f 58000000 		.4byte	.LVL52
 5878 0043 8E000000 		.4byte	.LVL53
 5879 0047 0100     		.2byte	0x1
 5880 0049 50       		.byte	0x50
 5881 004a 8E000000 		.4byte	.LVL53
 5882 004e 95000000 		.4byte	.LVL54-1
 5883 0052 2800     		.2byte	0x28
 5884 0054 03       		.byte	0x3
 5885 0055 00000000 		.4byte	Adj_Vbias
 5886 0059 94       		.byte	0x94
 5887 005a 02       		.byte	0x2
 5888 005b 0A       		.byte	0xa
 5889 005c FFFF     		.2byte	0xffff
 5890 005e 1A       		.byte	0x1a
 5891 005f 03       		.byte	0x3
 5892 0060 00000000 		.4byte	gain
 5893 0064 94       		.byte	0x94
 5894 0065 02       		.byte	0x2
 5895 0066 40       		.byte	0x40
 5896 0067 24       		.byte	0x24
 5897 0068 40       		.byte	0x40
 5898 0069 26       		.byte	0x26
 5899 006a 33       		.byte	0x33
 5900 006b 1E       		.byte	0x1e
 5901 006c 31       		.byte	0x31
 5902 006d 24       		.byte	0x24
 5903 006e 03       		.byte	0x3
 5904 006f 04000000 		.4byte	.LANCHOR1+4
 5905 0073 22       		.byte	0x22
 5906 0074 94       		.byte	0x94
 5907 0075 02       		.byte	0x2
 5908 0076 0A       		.byte	0xa
 5909 0077 FFFF     		.2byte	0xffff
 5910 0079 1A       		.byte	0x1a
 5911 007a 22       		.byte	0x22
 5912 007b 9F       		.byte	0x9f
 5913 007c 00000000 		.4byte	0
 5914 0080 00000000 		.4byte	0
 5915              	.LLST3:
 5916 0084 00000000 		.4byte	.LVL71
 5917 0088 0F000000 		.4byte	.LVL74-1
 5918 008c 0100     		.2byte	0x1
 5919 008e 50       		.byte	0x50
 5920 008f 0F000000 		.4byte	.LVL74-1
 5921 0093 4C070000 		.4byte	.LFE123
 5922 0097 0400     		.2byte	0x4
 5923 0099 F3       		.byte	0xf3
 5924 009a 01       		.uleb128 0x1
 5925 009b 50       		.byte	0x50
 5926 009c 9F       		.byte	0x9f
 5927 009d 00000000 		.4byte	0
 5928 00a1 00000000 		.4byte	0
 5929              	.LLST4:
 5930 00a5 06000000 		.4byte	.LVL72
 5931 00a9 3A000000 		.4byte	.LVL77
 5932 00ad 0200     		.2byte	0x2
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 219


 5933 00af 30       		.byte	0x30
 5934 00b0 9F       		.byte	0x9f
 5935 00b1 3A000000 		.4byte	.LVL77
 5936 00b5 94010000 		.4byte	.LVL115
 5937 00b9 0100     		.2byte	0x1
 5938 00bb 57       		.byte	0x57
 5939 00bc CE010000 		.4byte	.LVL123
 5940 00c0 E6010000 		.4byte	.LVL126
 5941 00c4 0200     		.2byte	0x2
 5942 00c6 31       		.byte	0x31
 5943 00c7 9F       		.byte	0x9f
 5944 00c8 E6010000 		.4byte	.LVL126
 5945 00cc F8010000 		.4byte	.LVL127
 5946 00d0 0100     		.2byte	0x1
 5947 00d2 57       		.byte	0x57
 5948 00d3 48020000 		.4byte	.LVL136
 5949 00d7 4A020000 		.4byte	.LVL137
 5950 00db 0100     		.2byte	0x1
 5951 00dd 57       		.byte	0x57
 5952 00de 86030000 		.4byte	.LVL164
 5953 00e2 94030000 		.4byte	.LVL166
 5954 00e6 0100     		.2byte	0x1
 5955 00e8 57       		.byte	0x57
 5956 00e9 02040000 		.4byte	.LVL178
 5957 00ed 08040000 		.4byte	.LVL179
 5958 00f1 0100     		.2byte	0x1
 5959 00f3 57       		.byte	0x57
 5960 00f4 5A040000 		.4byte	.LVL189
 5961 00f8 5C040000 		.4byte	.LVL190
 5962 00fc 0100     		.2byte	0x1
 5963 00fe 57       		.byte	0x57
 5964 00ff EE040000 		.4byte	.LVL205
 5965 0103 4C070000 		.4byte	.LFE123
 5966 0107 0100     		.2byte	0x1
 5967 0109 57       		.byte	0x57
 5968 010a 00000000 		.4byte	0
 5969 010e 00000000 		.4byte	0
 5970              	.LLST5:
 5971 0112 06000000 		.4byte	.LVL72
 5972 0116 3A000000 		.4byte	.LVL77
 5973 011a 0200     		.2byte	0x2
 5974 011c 30       		.byte	0x30
 5975 011d 9F       		.byte	0x9f
 5976 011e 3A000000 		.4byte	.LVL77
 5977 0122 D8000000 		.4byte	.LVL88
 5978 0126 0100     		.2byte	0x1
 5979 0128 56       		.byte	0x56
 5980 0129 3E010000 		.4byte	.LVL101
 5981 012d 46010000 		.4byte	.LVL102
 5982 0131 0100     		.2byte	0x1
 5983 0133 56       		.byte	0x56
 5984 0134 CE010000 		.4byte	.LVL123
 5985 0138 E6010000 		.4byte	.LVL126
 5986 013c 0200     		.2byte	0x2
 5987 013e 31       		.byte	0x31
 5988 013f 9F       		.byte	0x9f
 5989 0140 E6010000 		.4byte	.LVL126
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 220


 5990 0144 9E060000 		.4byte	.LVL232
 5991 0148 0100     		.2byte	0x1
 5992 014a 56       		.byte	0x56
 5993 014b DE060000 		.4byte	.LVL236
 5994 014f E0060000 		.4byte	.LVL237
 5995 0153 0100     		.2byte	0x1
 5996 0155 56       		.byte	0x56
 5997 0156 2C070000 		.4byte	.LVL241
 5998 015a 2E070000 		.4byte	.LVL242
 5999 015e 0200     		.2byte	0x2
 6000 0160 30       		.byte	0x30
 6001 0161 9F       		.byte	0x9f
 6002 0162 2E070000 		.4byte	.LVL242
 6003 0166 4C070000 		.4byte	.LFE123
 6004 016a 0100     		.2byte	0x1
 6005 016c 56       		.byte	0x56
 6006 016d 00000000 		.4byte	0
 6007 0171 00000000 		.4byte	0
 6008              	.LLST6:
 6009 0175 0C000000 		.4byte	.LVL73
 6010 0179 3A000000 		.4byte	.LVL77
 6011 017d 0A00     		.2byte	0xa
 6012 017f 9E       		.byte	0x9e
 6013 0180 08       		.uleb128 0x8
 6014 0181 00000000 		.4byte	0
 6015 0185 00000000 		.4byte	0
 6016 0189 26010000 		.4byte	.LVL97
 6017 018d 2F010000 		.4byte	.LVL98-1
 6018 0191 0600     		.2byte	0x6
 6019 0193 50       		.byte	0x50
 6020 0194 93       		.byte	0x93
 6021 0195 04       		.uleb128 0x4
 6022 0196 51       		.byte	0x51
 6023 0197 93       		.byte	0x93
 6024 0198 04       		.uleb128 0x4
 6025 0199 00000000 		.4byte	0
 6026 019d 00000000 		.4byte	0
 6027              	.LLST7:
 6028 01a1 0C000000 		.4byte	.LVL73
 6029 01a5 3A000000 		.4byte	.LVL77
 6030 01a9 0A00     		.2byte	0xa
 6031 01ab 9E       		.byte	0x9e
 6032 01ac 08       		.uleb128 0x8
 6033 01ad 00000000 		.4byte	0
 6034 01b1 00000000 		.4byte	0
 6035 01b5 3A000000 		.4byte	.LVL77
 6036 01b9 3C010000 		.4byte	.LVL100
 6037 01bd 0200     		.2byte	0x2
 6038 01bf 7D       		.byte	0x7d
 6039 01c0 00       		.sleb128 0
 6040 01c1 3C010000 		.4byte	.LVL100
 6041 01c5 3E010000 		.4byte	.LVL101
 6042 01c9 0600     		.2byte	0x6
 6043 01cb 50       		.byte	0x50
 6044 01cc 93       		.byte	0x93
 6045 01cd 04       		.uleb128 0x4
 6046 01ce 51       		.byte	0x51
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 221


 6047 01cf 93       		.byte	0x93
 6048 01d0 04       		.uleb128 0x4
 6049 01d1 3E010000 		.4byte	.LVL101
 6050 01d5 4C070000 		.4byte	.LFE123
 6051 01d9 0200     		.2byte	0x2
 6052 01db 7D       		.byte	0x7d
 6053 01dc 00       		.sleb128 0
 6054 01dd 00000000 		.4byte	0
 6055 01e1 00000000 		.4byte	0
 6056              	.LLST8:
 6057 01e5 3A000000 		.4byte	.LVL77
 6058 01e9 DA000000 		.4byte	.LVL89
 6059 01ed 0100     		.2byte	0x1
 6060 01ef 55       		.byte	0x55
 6061 01f0 3E010000 		.4byte	.LVL101
 6062 01f4 46010000 		.4byte	.LVL102
 6063 01f8 0100     		.2byte	0x1
 6064 01fa 55       		.byte	0x55
 6065 01fb 86010000 		.4byte	.LVL111
 6066 01ff 88010000 		.4byte	.LVL112
 6067 0203 0100     		.2byte	0x1
 6068 0205 50       		.byte	0x50
 6069 0206 8A010000 		.4byte	.LVL113
 6070 020a 4C070000 		.4byte	.LFE123
 6071 020e 0100     		.2byte	0x1
 6072 0210 55       		.byte	0x55
 6073 0211 00000000 		.4byte	0
 6074 0215 00000000 		.4byte	0
 6075              	.LLST9:
 6076 0219 0C000000 		.4byte	.LVL73
 6077 021d 3A000000 		.4byte	.LVL77
 6078 0221 0A00     		.2byte	0xa
 6079 0223 9E       		.byte	0x9e
 6080 0224 08       		.uleb128 0x8
 6081 0225 00000000 		.4byte	0
 6082 0229 00000000 		.4byte	0
 6083 022d A6010000 		.4byte	.LVL117
 6084 0231 AF010000 		.4byte	.LVL118-1
 6085 0235 0600     		.2byte	0x6
 6086 0237 50       		.byte	0x50
 6087 0238 93       		.byte	0x93
 6088 0239 04       		.uleb128 0x4
 6089 023a 51       		.byte	0x51
 6090 023b 93       		.byte	0x93
 6091 023c 04       		.uleb128 0x4
 6092 023d 00000000 		.4byte	0
 6093 0241 00000000 		.4byte	0
 6094              	.LLST10:
 6095 0245 0C000000 		.4byte	.LVL73
 6096 0249 3A000000 		.4byte	.LVL77
 6097 024d 0A00     		.2byte	0xa
 6098 024f 9E       		.byte	0x9e
 6099 0250 08       		.uleb128 0x8
 6100 0251 00000000 		.4byte	0
 6101 0255 00000000 		.4byte	0
 6102 0259 3A000000 		.4byte	.LVL77
 6103 025d DC000000 		.4byte	.LVL90
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 222


 6104 0261 0600     		.2byte	0x6
 6105 0263 5B       		.byte	0x5b
 6106 0264 93       		.byte	0x93
 6107 0265 04       		.uleb128 0x4
 6108 0266 54       		.byte	0x54
 6109 0267 93       		.byte	0x93
 6110 0268 04       		.uleb128 0x4
 6111 0269 3E010000 		.4byte	.LVL101
 6112 026d 46010000 		.4byte	.LVL102
 6113 0271 0600     		.2byte	0x6
 6114 0273 5B       		.byte	0x5b
 6115 0274 93       		.byte	0x93
 6116 0275 04       		.uleb128 0x4
 6117 0276 54       		.byte	0x54
 6118 0277 93       		.byte	0x93
 6119 0278 04       		.uleb128 0x4
 6120 0279 BC010000 		.4byte	.LVL120
 6121 027d C0010000 		.4byte	.LVL121
 6122 0281 0600     		.2byte	0x6
 6123 0283 50       		.byte	0x50
 6124 0284 93       		.byte	0x93
 6125 0285 04       		.uleb128 0x4
 6126 0286 51       		.byte	0x51
 6127 0287 93       		.byte	0x93
 6128 0288 04       		.uleb128 0x4
 6129 0289 C0010000 		.4byte	.LVL121
 6130 028d C3010000 		.4byte	.LVL122-1
 6131 0291 0600     		.2byte	0x6
 6132 0293 5B       		.byte	0x5b
 6133 0294 93       		.byte	0x93
 6134 0295 04       		.uleb128 0x4
 6135 0296 51       		.byte	0x51
 6136 0297 93       		.byte	0x93
 6137 0298 04       		.uleb128 0x4
 6138 0299 C3010000 		.4byte	.LVL122-1
 6139 029d 4C070000 		.4byte	.LFE123
 6140 02a1 0600     		.2byte	0x6
 6141 02a3 5B       		.byte	0x5b
 6142 02a4 93       		.byte	0x93
 6143 02a5 04       		.uleb128 0x4
 6144 02a6 54       		.byte	0x54
 6145 02a7 93       		.byte	0x93
 6146 02a8 04       		.uleb128 0x4
 6147 02a9 00000000 		.4byte	0
 6148 02ad 00000000 		.4byte	0
 6149              	.LLST11:
 6150 02b1 F8010000 		.4byte	.LVL127
 6151 02b5 48020000 		.4byte	.LVL136
 6152 02b9 0100     		.2byte	0x1
 6153 02bb 59       		.byte	0x59
 6154 02bc 4E020000 		.4byte	.LVL138
 6155 02c0 A6020000 		.4byte	.LVL146
 6156 02c4 0100     		.2byte	0x1
 6157 02c6 59       		.byte	0x59
 6158 02c7 4C030000 		.4byte	.LVL156
 6159 02cb 58030000 		.4byte	.LVL157
 6160 02cf 0100     		.2byte	0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 223


 6161 02d1 59       		.byte	0x59
 6162 02d2 0A040000 		.4byte	.LVL180
 6163 02d6 5A040000 		.4byte	.LVL189
 6164 02da 0100     		.2byte	0x1
 6165 02dc 59       		.byte	0x59
 6166 02dd 60040000 		.4byte	.LVL191
 6167 02e1 EE040000 		.4byte	.LVL205
 6168 02e5 0100     		.2byte	0x1
 6169 02e7 59       		.byte	0x59
 6170 02e8 00000000 		.4byte	0
 6171 02ec 00000000 		.4byte	0
 6172              	.LLST12:
 6173 02f0 0C000000 		.4byte	.LVL73
 6174 02f4 3A000000 		.4byte	.LVL77
 6175 02f8 0A00     		.2byte	0xa
 6176 02fa 9E       		.byte	0x9e
 6177 02fb 08       		.uleb128 0x8
 6178 02fc 00000000 		.4byte	0
 6179 0300 00000000 		.4byte	0
 6180 0304 D4020000 		.4byte	.LVL151
 6181 0308 DD020000 		.4byte	.LVL152-1
 6182 030c 0600     		.2byte	0x6
 6183 030e 50       		.byte	0x50
 6184 030f 93       		.byte	0x93
 6185 0310 04       		.uleb128 0x4
 6186 0311 51       		.byte	0x51
 6187 0312 93       		.byte	0x93
 6188 0313 04       		.uleb128 0x4
 6189 0314 00000000 		.4byte	0
 6190 0318 00000000 		.4byte	0
 6191              	.LLST13:
 6192 031c 0C000000 		.4byte	.LVL73
 6193 0320 3A000000 		.4byte	.LVL77
 6194 0324 0A00     		.2byte	0xa
 6195 0326 9E       		.byte	0x9e
 6196 0327 08       		.uleb128 0x8
 6197 0328 00000000 		.4byte	0
 6198 032c 00000000 		.4byte	0
 6199 0330 F0020000 		.4byte	.LVL154
 6200 0334 F7020000 		.4byte	.LVL155-1
 6201 0338 0600     		.2byte	0x6
 6202 033a 52       		.byte	0x52
 6203 033b 93       		.byte	0x93
 6204 033c 04       		.uleb128 0x4
 6205 033d 53       		.byte	0x53
 6206 033e 93       		.byte	0x93
 6207 033f 04       		.uleb128 0x4
 6208 0340 00000000 		.4byte	0
 6209 0344 00000000 		.4byte	0
 6210              	.LLST14:
 6211 0348 F8010000 		.4byte	.LVL127
 6212 034c 44020000 		.4byte	.LVL134
 6213 0350 0100     		.2byte	0x1
 6214 0352 57       		.byte	0x57
 6215 0353 46020000 		.4byte	.LVL135
 6216 0357 48020000 		.4byte	.LVL136
 6217 035b 0100     		.2byte	0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 224


 6218 035d 57       		.byte	0x57
 6219 035e 4E020000 		.4byte	.LVL138
 6220 0362 9E020000 		.4byte	.LVL145
 6221 0366 0100     		.2byte	0x1
 6222 0368 57       		.byte	0x57
 6223 0369 4C030000 		.4byte	.LVL156
 6224 036d 58030000 		.4byte	.LVL157
 6225 0371 0100     		.2byte	0x1
 6226 0373 57       		.byte	0x57
 6227 0374 0A040000 		.4byte	.LVL180
 6228 0378 56040000 		.4byte	.LVL187
 6229 037c 0100     		.2byte	0x1
 6230 037e 57       		.byte	0x57
 6231 037f 58040000 		.4byte	.LVL188
 6232 0383 5A040000 		.4byte	.LVL189
 6233 0387 0100     		.2byte	0x1
 6234 0389 57       		.byte	0x57
 6235 038a 60040000 		.4byte	.LVL191
 6236 038e EE040000 		.4byte	.LVL205
 6237 0392 0100     		.2byte	0x1
 6238 0394 57       		.byte	0x57
 6239 0395 9E060000 		.4byte	.LVL232
 6240 0399 DA060000 		.4byte	.LVL234
 6241 039d 0100     		.2byte	0x1
 6242 039f 56       		.byte	0x56
 6243 03a0 DC060000 		.4byte	.LVL235
 6244 03a4 DE060000 		.4byte	.LVL236
 6245 03a8 0100     		.2byte	0x1
 6246 03aa 56       		.byte	0x56
 6247 03ab E0060000 		.4byte	.LVL237
 6248 03af 04070000 		.4byte	.LVL238
 6249 03b3 0100     		.2byte	0x1
 6250 03b5 56       		.byte	0x56
 6251 03b6 00000000 		.4byte	0
 6252 03ba 00000000 		.4byte	0
 6253              	.LLST15:
 6254 03be 76010000 		.4byte	.LVL108
 6255 03c2 E6010000 		.4byte	.LVL126
 6256 03c6 0600     		.2byte	0x6
 6257 03c8 F2       		.byte	0xf2
 6258 03c9 7E090000 		.4byte	.Ldebug_info0+2430
 6259 03cd 00       		.sleb128 0
 6260 03ce 00000000 		.4byte	0
 6261 03d2 00000000 		.4byte	0
 6262              	.LLST16:
 6263 03d6 76010000 		.4byte	.LVL108
 6264 03da 7B010000 		.4byte	.LVL109-1
 6265 03de 0100     		.2byte	0x1
 6266 03e0 50       		.byte	0x50
 6267 03e1 7B010000 		.4byte	.LVL109-1
 6268 03e5 BC010000 		.4byte	.LVL120
 6269 03e9 0100     		.2byte	0x1
 6270 03eb 54       		.byte	0x54
 6271 03ec 00000000 		.4byte	0
 6272 03f0 00000000 		.4byte	0
 6273              		.section	.debug_aranges,"",%progbits
 6274 0000 3C000000 		.4byte	0x3c
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 225


 6275 0004 0200     		.2byte	0x2
 6276 0006 00000000 		.4byte	.Ldebug_info0
 6277 000a 04       		.byte	0x4
 6278 000b 00       		.byte	0
 6279 000c 0000     		.2byte	0
 6280 000e 0000     		.2byte	0
 6281 0010 00000000 		.4byte	.LFB119
 6282 0014 14000000 		.4byte	.LFE119-.LFB119
 6283 0018 00000000 		.4byte	.LFB120
 6284 001c F0010000 		.4byte	.LFE120-.LFB120
 6285 0020 00000000 		.4byte	.LFB121
 6286 0024 A4000000 		.4byte	.LFE121-.LFB121
 6287 0028 00000000 		.4byte	.LFB122
 6288 002c E0000000 		.4byte	.LFE122-.LFB122
 6289 0030 00000000 		.4byte	.LFB123
 6290 0034 4C070000 		.4byte	.LFE123-.LFB123
 6291 0038 00000000 		.4byte	0
 6292 003c 00000000 		.4byte	0
 6293              		.section	.debug_ranges,"",%progbits
 6294              	.Ldebug_ranges0:
 6295 0000 00000000 		.4byte	.LFB119
 6296 0004 14000000 		.4byte	.LFE119
 6297 0008 00000000 		.4byte	.LFB120
 6298 000c F0010000 		.4byte	.LFE120
 6299 0010 00000000 		.4byte	.LFB121
 6300 0014 A4000000 		.4byte	.LFE121
 6301 0018 00000000 		.4byte	.LFB122
 6302 001c E0000000 		.4byte	.LFE122
 6303 0020 00000000 		.4byte	.LFB123
 6304 0024 4C070000 		.4byte	.LFE123
 6305 0028 00000000 		.4byte	0
 6306 002c 00000000 		.4byte	0
 6307              		.section	.debug_line,"",%progbits
 6308              	.Ldebug_line0:
 6309 0000 E5030000 		.section	.debug_str,"MS",%progbits,1
 6309      02004402 
 6309      00000201 
 6309      FB0E0D00 
 6309      01010101 
 6310              	.LASF45:
 6311 0000 4E4F4E45 		.ascii	"NONE\000"
 6311      00
 6312              	.LASF46:
 6313 0005 7067615F 		.ascii	"pga_gain\000"
 6313      6761696E 
 6313      00
 6314              	.LASF89:
 6315 000e 78517565 		.ascii	"xQueue_RXD\000"
 6315      75655F52 
 6315      584400
 6316              	.LASF24:
 6317 0019 646F7562 		.ascii	"double_t\000"
 6317      6C655F74 
 6317      00
 6318              	.LASF106:
 6319 0022 75785175 		.ascii	"uxQueueMessagesWaiting\000"
 6319      6575654D 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 226


 6319      65737361 
 6319      67657357 
 6319      61697469 
 6320              	.LASF40:
 6321 0039 44495354 		.ascii	"DISTANCE\000"
 6321      414E4345 
 6321      00
 6322              	.LASF102:
 6323 0042 73707269 		.ascii	"sprintf\000"
 6323      6E746600 
 6324              	.LASF81:
 6325 004a 636C6963 		.ascii	"click\000"
 6325      6B00
 6326              	.LASF97:
 6327 0050 6469725F 		.ascii	"dir_tab\000"
 6327      74616200 
 6328              	.LASF6:
 6329 0058 6C6F6E67 		.ascii	"long int\000"
 6329      20696E74 
 6329      00
 6330              	.LASF11:
 6331 0061 6C6F6E67 		.ascii	"long long unsigned int\000"
 6331      206C6F6E 
 6331      6720756E 
 6331      7369676E 
 6331      65642069 
 6332              	.LASF25:
 6333 0078 41524D5F 		.ascii	"ARM_MATH_SUCCESS\000"
 6333      4D415448 
 6333      5F535543 
 6333      43455353 
 6333      00
 6334              	.LASF60:
 6335 0089 4449525F 		.ascii	"DIR_TABLE\000"
 6335      5441424C 
 6335      4500
 6336              	.LASF37:
 6337 0093 51756575 		.ascii	"QueueHandle_t\000"
 6337      6548616E 
 6337      646C655F 
 6337      7400
 6338              	.LASF83:
 6339 00a1 49544D5F 		.ascii	"ITM_RxBuffer\000"
 6339      52784275 
 6339      66666572 
 6339      00
 6340              	.LASF94:
 6341 00ae 41646A5F 		.ascii	"Adj_Vth\000"
 6341      56746800 
 6342              	.LASF105:
 6343 00b6 78517565 		.ascii	"xQueueGenericReceive\000"
 6343      75654765 
 6343      6E657269 
 6343      63526563 
 6343      65697665 
 6344              	.LASF58:
 6345 00cb 6D61726B 		.ascii	"mark_position\000"
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 227


 6345      5F706F73 
 6345      6974696F 
 6345      6E00
 6346              	.LASF10:
 6347 00d9 6C6F6E67 		.ascii	"long long int\000"
 6347      206C6F6E 
 6347      6720696E 
 6347      7400
 6348              	.LASF2:
 6349 00e7 7369676E 		.ascii	"signed char\000"
 6349      65642063 
 6349      68617200 
 6350              	.LASF104:
 6351 00f3 76546173 		.ascii	"vTaskDelay\000"
 6351      6B44656C 
 6351      617900
 6352              	.LASF59:
 6353 00fe 6E5F6D61 		.ascii	"n_mark\000"
 6353      726B00
 6354              	.LASF74:
 6355 0105 7068695F 		.ascii	"phi_deg\000"
 6355      64656700 
 6356              	.LASF55:
 6357 010d 4741494E 		.ascii	"GAIN_AGC_TABLE\000"
 6357      5F414743 
 6357      5F544142 
 6357      4C4500
 6358              	.LASF70:
 6359 011c 75706461 		.ascii	"update_gain_flag\000"
 6359      74655F67 
 6359      61696E5F 
 6359      666C6167 
 6359      00
 6360              	.LASF118:
 6361 012d 61726D5F 		.ascii	"arm_sqrt_f32\000"
 6361      73717274 
 6361      5F663332 
 6361      00
 6362              	.LASF15:
 6363 013a 75696E74 		.ascii	"uint8\000"
 6363      3800
 6364              	.LASF0:
 6365 0140 646F7562 		.ascii	"double\000"
 6365      6C6500
 6366              	.LASF34:
 6367 0147 42617365 		.ascii	"BaseType_t\000"
 6367      54797065 
 6367      5F7400
 6368              	.LASF117:
 6369 0152 434C4344 		.ascii	"CLCD_mode\000"
 6369      5F6D6F64 
 6369      6500
 6370              	.LASF17:
 6371 015c 75696E74 		.ascii	"uint32\000"
 6371      333200
 6372              	.LASF107:
 6373 0163 4D4F4E5F 		.ascii	"MON_Write\000"
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 228


 6373      57726974 
 6373      6500
 6374              	.LASF98:
 6375 016d 4932435F 		.ascii	"I2C_CLCD_Position\000"
 6375      434C4344 
 6375      5F506F73 
 6375      6974696F 
 6375      6E00
 6376              	.LASF8:
 6377 017f 5F5F7569 		.ascii	"__uint32_t\000"
 6377      6E743332 
 6377      5F7400
 6378              	.LASF54:
 6379 018a 6761696E 		.ascii	"gain_ctl\000"
 6379      5F63746C 
 6379      00
 6380              	.LASF12:
 6381 0193 756E7369 		.ascii	"unsigned int\000"
 6381      676E6564 
 6381      20696E74 
 6381      00
 6382              	.LASF64:
 6383 01a0 7365745F 		.ascii	"set_Vth_Vbias\000"
 6383      5674685F 
 6383      56626961 
 6383      7300
 6384              	.LASF62:
 6385 01ae 434C4344 		.ascii	"CLCD_clear\000"
 6385      5F636C65 
 6385      617200
 6386              	.LASF47:
 6387 01b9 6D61676E 		.ascii	"magnification\000"
 6387      69666963 
 6387      6174696F 
 6387      6E00
 6388              	.LASF9:
 6389 01c7 6C6F6E67 		.ascii	"long unsigned int\000"
 6389      20756E73 
 6389      69676E65 
 6389      6420696E 
 6389      7400
 6390              	.LASF63:
 6391 01d9 434C4344 		.ascii	"CLCD_mode_switch\000"
 6391      5F6D6F64 
 6391      655F7377 
 6391      69746368 
 6391      00
 6392              	.LASF67:
 6393 01ea 70765061 		.ascii	"pvParameters\000"
 6393      72616D65 
 6393      74657273 
 6393      00
 6394              	.LASF43:
 6395 01f7 54485245 		.ascii	"THRESHOLD\000"
 6395      53484F4C 
 6395      4400
 6396              	.LASF112:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 229


 6397 0201 78517565 		.ascii	"xQueueGenericSend\000"
 6397      75654765 
 6397      6E657269 
 6397      6353656E 
 6397      6400
 6398              	.LASF5:
 6399 0213 73686F72 		.ascii	"short unsigned int\000"
 6399      7420756E 
 6399      7369676E 
 6399      65642069 
 6399      6E7400
 6400              	.LASF77:
 6401 0226 6261725F 		.ascii	"bar_position\000"
 6401      706F7369 
 6401      74696F6E 
 6401      00
 6402              	.LASF78:
 6403 0233 6E5F6261 		.ascii	"n_bar\000"
 6403      7200
 6404              	.LASF18:
 6405 0239 696E7438 		.ascii	"int8\000"
 6405      00
 6406              	.LASF90:
 6407 023e 784D7574 		.ascii	"xMutex_RX_BUF\000"
 6407      65785F52 
 6407      585F4255 
 6407      4600
 6408              	.LASF99:
 6409 024c 4932435F 		.ascii	"I2C_CLCD_PrintString\000"
 6409      434C4344 
 6409      5F507269 
 6409      6E745374 
 6409      72696E67 
 6410              	.LASF31:
 6411 0261 41524D5F 		.ascii	"ARM_MATH_TEST_FAILURE\000"
 6411      4D415448 
 6411      5F544553 
 6411      545F4641 
 6411      494C5552 
 6412              	.LASF121:
 6413 0277 73747263 		.ascii	"strcpy\000"
 6413      707900
 6414              	.LASF4:
 6415 027e 73686F72 		.ascii	"short int\000"
 6415      7420696E 
 6415      7400
 6416              	.LASF103:
 6417 0288 73717274 		.ascii	"sqrtf\000"
 6417      6600
 6418              	.LASF115:
 6419 028e 434C4344 		.ascii	"CLCD_control.c\000"
 6419      5F636F6E 
 6419      74726F6C 
 6419      2E6300
 6420              	.LASF76:
 6421 029d 6469725F 		.ascii	"dir_deg\000"
 6421      64656700 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 230


 6422              	.LASF61:
 6423 02a5 704F7574 		.ascii	"pOut\000"
 6423      00
 6424              	.LASF79:
 6425 02aa 726D735F 		.ascii	"rms_pga\000"
 6425      70676100 
 6426              	.LASF86:
 6427 02b2 6473745F 		.ascii	"dst_buf_f32\000"
 6427      6275665F 
 6427      66333200 
 6428              	.LASF22:
 6429 02be 73697A65 		.ascii	"sizetype\000"
 6429      74797065 
 6429      00
 6430              	.LASF96:
 6431 02c7 7067615F 		.ascii	"pga_agc\000"
 6431      61676300 
 6432              	.LASF36:
 6433 02cf 5469636B 		.ascii	"TickType_t\000"
 6433      54797065 
 6433      5F7400
 6434              	.LASF65:
 6435 02da 434C4344 		.ascii	"CLCD_set_PGA_gain\000"
 6435      5F736574 
 6435      5F504741 
 6435      5F676169 
 6435      6E00
 6436              	.LASF39:
 6437 02ec 494E5641 		.ascii	"INVALID\000"
 6437      4C494400 
 6438              	.LASF95:
 6439 02f4 41646A5F 		.ascii	"Adj_Vbias\000"
 6439      56626961 
 6439      7300
 6440              	.LASF75:
 6441 02fe 726D735F 		.ascii	"rms_mixed\000"
 6441      6D697865 
 6441      6400
 6442              	.LASF27:
 6443 0308 41524D5F 		.ascii	"ARM_MATH_LENGTH_ERROR\000"
 6443      4D415448 
 6443      5F4C454E 
 6443      4754485F 
 6443      4552524F 
 6444              	.LASF1:
 6445 031e 666C6F61 		.ascii	"float\000"
 6445      7400
 6446              	.LASF30:
 6447 0324 41524D5F 		.ascii	"ARM_MATH_SINGULAR\000"
 6447      4D415448 
 6447      5F53494E 
 6447      47554C41 
 6447      5200
 6448              	.LASF72:
 6449 0336 6D65616E 		.ascii	"meanval_cos\000"
 6449      76616C5F 
 6449      636F7300 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 231


 6450              	.LASF29:
 6451 0342 41524D5F 		.ascii	"ARM_MATH_NANINF\000"
 6451      4D415448 
 6451      5F4E414E 
 6451      494E4600 
 6452              	.LASF92:
 6453 0352 6761696E 		.ascii	"gain\000"
 6453      00
 6454              	.LASF49:
 6455 0357 74687265 		.ascii	"threshold\000"
 6455      73686F6C 
 6455      6400
 6456              	.LASF13:
 6457 0361 696E7433 		.ascii	"int32_t\000"
 6457      325F7400 
 6458              	.LASF3:
 6459 0369 756E7369 		.ascii	"unsigned char\000"
 6459      676E6564 
 6459      20636861 
 6459      7200
 6460              	.LASF16:
 6461 0377 75696E74 		.ascii	"uint16\000"
 6461      313600
 6462              	.LASF120:
 6463 037e 5F5F6275 		.ascii	"__builtin_strcpy\000"
 6463      696C7469 
 6463      6E5F7374 
 6463      72637079 
 6463      00
 6464              	.LASF68:
 6465 038f 716D7367 		.ascii	"qmsg\000"
 6465      00
 6466              	.LASF42:
 6467 0394 44495245 		.ascii	"DIRECTION\000"
 6467      4354494F 
 6467      4E00
 6468              	.LASF113:
 6469 039e 5047415F 		.ascii	"PGA_1_SetGain\000"
 6469      315F5365 
 6469      74476169 
 6469      6E00
 6470              	.LASF110:
 6471 03ac 6174616E 		.ascii	"atan2\000"
 6471      3200
 6472              	.LASF50:
 6473 03b2 62696173 		.ascii	"bias\000"
 6473      00
 6474              	.LASF56:
 6475 03b7 616E676C 		.ascii	"angle_min\000"
 6475      655F6D69 
 6475      6E00
 6476              	.LASF100:
 6477 03c1 436F6E74 		.ascii	"Control_GAIN_Write\000"
 6477      726F6C5F 
 6477      4741494E 
 6477      5F577269 
 6477      746500
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 232


 6478              	.LASF93:
 6479 03d4 56626961 		.ascii	"Vbias\000"
 6479      7300
 6480              	.LASF41:
 6481 03da 5349474E 		.ascii	"SIGNAL\000"
 6481      414C00
 6482              	.LASF108:
 6483 03e1 61726D5F 		.ascii	"arm_mult_f32\000"
 6483      6D756C74 
 6483      5F663332 
 6483      00
 6484              	.LASF14:
 6485 03ee 75696E74 		.ascii	"uint32_t\000"
 6485      33325F74 
 6485      00
 6486              	.LASF44:
 6487 03f7 49465F42 		.ascii	"IF_BIAS\000"
 6487      49415300 
 6488              	.LASF101:
 6489 03ff 44564441 		.ascii	"DVDAC_2_SetValue\000"
 6489      435F325F 
 6489      53657456 
 6489      616C7565 
 6489      00
 6490              	.LASF23:
 6491 0410 6C6F6E67 		.ascii	"long double\000"
 6491      20646F75 
 6491      626C6500 
 6492              	.LASF38:
 6493 041c 53656D61 		.ascii	"SemaphoreHandle_t\000"
 6493      70686F72 
 6493      6548616E 
 6493      646C655F 
 6493      7400
 6494              	.LASF21:
 6495 042e 63686172 		.ascii	"char\000"
 6495      00
 6496              	.LASF91:
 6497 0433 6D6F6465 		.ascii	"mode\000"
 6497      00
 6498              	.LASF116:
 6499 0438 453A5C50 		.ascii	"E:\\PSoC_Creator\\CY8CKIT-059\\CY8CKIT-059_SDR_Beac"
 6499      536F435F 
 6499      43726561 
 6499      746F725C 
 6499      43593843 
 6500 0468 6F6E5C43 		.ascii	"on\\CY8CKIT-059_SDR_Beacon.cydsn\000"
 6500      5938434B 
 6500      49542D30 
 6500      35395F53 
 6500      44525F42 
 6501              	.LASF80:
 6502 0488 64697374 		.ascii	"distance\000"
 6502      616E6365 
 6502      00
 6503              	.LASF28:
 6504 0491 41524D5F 		.ascii	"ARM_MATH_SIZE_MISMATCH\000"
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 233


 6504      4D415448 
 6504      5F53495A 
 6504      455F4D49 
 6504      534D4154 
 6505              	.LASF84:
 6506 04a8 414E5431 		.ascii	"ANT1_buf_f32\000"
 6506      5F627566 
 6506      5F663332 
 6506      00
 6507              	.LASF7:
 6508 04b5 5F5F696E 		.ascii	"__int32_t\000"
 6508      7433325F 
 6508      7400
 6509              	.LASF20:
 6510 04bf 63686172 		.ascii	"char8\000"
 6510      3800
 6511              	.LASF33:
 6512 04c5 666C6F61 		.ascii	"float32_t\000"
 6512      7433325F 
 6512      7400
 6513              	.LASF87:
 6514 04cf 78517565 		.ascii	"xQueue_KEY\000"
 6514      75655F4B 
 6514      455900
 6515              	.LASF122:
 6516 04da 5047415F 		.ascii	"PGA_2_SetGain\000"
 6516      325F5365 
 6516      74476169 
 6516      6E00
 6517              	.LASF69:
 6518 04e8 75706461 		.ascii	"update_level_flag\000"
 6518      74655F6C 
 6518      6576656C 
 6518      5F666C61 
 6518      6700
 6519              	.LASF48:
 6520 04fa 7265635F 		.ascii	"rec_rf_gain\000"
 6520      72665F67 
 6520      61696E00 
 6521              	.LASF88:
 6522 0506 78517565 		.ascii	"xQueue_ROT\000"
 6522      75655F52 
 6522      4F5400
 6523              	.LASF109:
 6524 0511 61726D5F 		.ascii	"arm_mean_f32\000"
 6524      6D65616E 
 6524      5F663332 
 6524      00
 6525              	.LASF114:
 6526 051e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 6526      4320342E 
 6526      392E3320 
 6526      32303135 
 6526      30333033 
 6527 0551 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 6527      20726576 
 6527      6973696F 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 234


 6527      6E203232 
 6527      31323230 
 6528 0584 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 6528      66756E63 
 6528      74696F6E 
 6528      2D736563 
 6528      74696F6E 
 6529              	.LASF71:
 6530 05ac 6361725F 		.ascii	"car_flag\000"
 6530      666C6167 
 6530      00
 6531              	.LASF66:
 6532 05b5 5461736B 		.ascii	"Task_CLCD\000"
 6532      5F434C43 
 6532      4400
 6533              	.LASF53:
 6534 05bf 726D735F 		.ascii	"rms_mv_max\000"
 6534      6D765F6D 
 6534      617800
 6535              	.LASF73:
 6536 05ca 6D65616E 		.ascii	"meanval_sin\000"
 6536      76616C5F 
 6536      73696E00 
 6537              	.LASF32:
 6538 05d6 61726D5F 		.ascii	"arm_status\000"
 6538      73746174 
 6538      757300
 6539              	.LASF19:
 6540 05e1 696E7431 		.ascii	"int16\000"
 6540      3600
 6541              	.LASF57:
 6542 05e7 616E676C 		.ascii	"angle_max\000"
 6542      655F6D61 
 6542      7800
 6543              	.LASF52:
 6544 05f1 726D735F 		.ascii	"rms_mv_min\000"
 6544      6D765F6D 
 6544      696E00
 6545              	.LASF111:
 6546 05fc 61726D5F 		.ascii	"arm_rms_f32\000"
 6546      726D735F 
 6546      66333200 
 6547              	.LASF51:
 6548 0608 4741494E 		.ascii	"GAIN_CTL_STRUCT\000"
 6548      5F43544C 
 6548      5F535452 
 6548      55435400 
 6549              	.LASF85:
 6550 0618 414E5432 		.ascii	"ANT2_buf_f32\000"
 6550      5F627566 
 6550      5F663332 
 6550      00
 6551              	.LASF26:
 6552 0625 41524D5F 		.ascii	"ARM_MATH_ARGUMENT_ERROR\000"
 6552      4D415448 
 6552      5F415247 
 6552      554D454E 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccPCtr5f.s 			page 235


 6552      545F4552 
 6553              	.LASF35:
 6554 063d 55426173 		.ascii	"UBaseType_t\000"
 6554      65547970 
 6554      655F7400 
 6555              	.LASF119:
 6556 0649 53746174 		.ascii	"Status_Reg_1_Read\000"
 6556      75735F52 
 6556      65675F31 
 6556      5F526561 
 6556      6400
 6557              	.LASF82:
 6558 065b 7844656C 		.ascii	"xDelay\000"
 6558      617900
 6559              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
