ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CLCD_2x16_control.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.CLCD_clear,"ax",%progbits
  19              		.align	2
  20              		.global	CLCD_clear
  21              		.thumb
  22              		.thumb_func
  23              		.type	CLCD_clear, %function
  24              	CLCD_clear:
  25              	.LFB119:
  26              		.file 1 "CLCD_2x16_control.c"
   1:CLCD_2x16_control.c **** /* ========================================
   2:CLCD_2x16_control.c ****  *
   3:CLCD_2x16_control.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:CLCD_2x16_control.c ****  * All Rights Reserved
   5:CLCD_2x16_control.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:CLCD_2x16_control.c ****  *
   7:CLCD_2x16_control.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:CLCD_2x16_control.c ****  * WHICH IS THE PROPERTY OF your company.
   9:CLCD_2x16_control.c ****  *
  10:CLCD_2x16_control.c ****  * ========================================
  11:CLCD_2x16_control.c **** */
  12:CLCD_2x16_control.c **** 
  13:CLCD_2x16_control.c **** //=====================================================
  14:CLCD_2x16_control.c **** //
  15:CLCD_2x16_control.c **** //     C L C D _ 2 x 1 6 _ c o n t r o l
  16:CLCD_2x16_control.c **** //
  17:CLCD_2x16_control.c **** //=====================================================
  18:CLCD_2x16_control.c **** 
  19:CLCD_2x16_control.c **** /* PSoC5 */
  20:CLCD_2x16_control.c **** #include <device.h>
  21:CLCD_2x16_control.c **** #include <stdio.h>
  22:CLCD_2x16_control.c **** #include <stdlib.h>
  23:CLCD_2x16_control.c **** #include <math.h>
  24:CLCD_2x16_control.c **** #include "arm_math.h"   /* (2016.7.26) */
  25:CLCD_2x16_control.c **** /* FreeRTOS */
  26:CLCD_2x16_control.c **** #include "FreeRTOS.h"
  27:CLCD_2x16_control.c **** #include "task.h"
  28:CLCD_2x16_control.c **** #include "queue.h"
  29:CLCD_2x16_control.c **** #include "semphr.h"
  30:CLCD_2x16_control.c **** /* API */
  31:CLCD_2x16_control.c **** #include "I2C_CLCD.h"
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 2


  32:CLCD_2x16_control.c **** #include "rot.h"
  33:CLCD_2x16_control.c **** #include "key.h"
  34:CLCD_2x16_control.c **** /* parameters */
  35:CLCD_2x16_control.c **** #include "main.h"
  36:CLCD_2x16_control.c **** 
  37:CLCD_2x16_control.c **** /* the followings are defined externaly */
  38:CLCD_2x16_control.c **** extern float32_t ANT1_buf_f32[MAX_BUF_SIZE];   /* A * sin (theta) */
  39:CLCD_2x16_control.c **** extern float32_t ANT2_buf_f32[MAX_BUF_SIZE];   /* B * sin (theta + phi) */
  40:CLCD_2x16_control.c **** extern float32_t dst_buf_f32[MAX_BUF_SIZE];
  41:CLCD_2x16_control.c **** 
  42:CLCD_2x16_control.c **** extern xQueueHandle xQueue_KEY[2];
  43:CLCD_2x16_control.c **** extern xQueueHandle xQueue_ROT;        /* Queue Data from Task_ROT(ROT_ENC_Handler) */
  44:CLCD_2x16_control.c **** extern xQueueHandle xQueue_RXD;        /* Queue Data from Task_RADIO */
  45:CLCD_2x16_control.c **** extern xQueueHandle xQueue_RSSI;       /* Queue Data from CY_ISR(ADC_SigDel_Handler) */
  46:CLCD_2x16_control.c **** 
  47:CLCD_2x16_control.c **** extern xSemaphoreHandle xMutex_RX_BUF;     /* Mutex for RX Data Buffer */
  48:CLCD_2x16_control.c **** 
  49:CLCD_2x16_control.c **** // Global Variables for CLCD
  50:CLCD_2x16_control.c **** enum CLCD_mode mode = DISTANCE;    /* CLCD display mode */
  51:CLCD_2x16_control.c **** 
  52:CLCD_2x16_control.c **** #define GAIN_x1    3
  53:CLCD_2x16_control.c **** int16 gain = GAIN_x1;     /* start with gain x1 */
  54:CLCD_2x16_control.c **** 
  55:CLCD_2x16_control.c **** // Adjustment of current parameter
  56:CLCD_2x16_control.c **** uint16 Vth = GAIN_01_TH;
  57:CLCD_2x16_control.c **** uint16 Vbias = IF_BIAS_01;
  58:CLCD_2x16_control.c **** int16 Adj_Vth = 0;
  59:CLCD_2x16_control.c **** int16 Adj_Vbias = 0;
  60:CLCD_2x16_control.c **** 
  61:CLCD_2x16_control.c **** 
  62:CLCD_2x16_control.c **** /***************************************************************************
  63:CLCD_2x16_control.c **** *	Task_CLCD
  64:CLCD_2x16_control.c **** ****************************************************************************/
  65:CLCD_2x16_control.c **** /* Constants for SetGain function */
  66:CLCD_2x16_control.c **** // total gain G is calculated as  G = magnification / rec_rf_gain
  67:CLCD_2x16_control.c **** typedef struct
  68:CLCD_2x16_control.c **** {
  69:CLCD_2x16_control.c ****     uint8   pga_gain;               // defined parameter in PGA module.
  70:CLCD_2x16_control.c ****     uint8   magnification;          // PGA gain.
  71:CLCD_2x16_control.c ****     uint8   rec_rf_gain;            // reciprocal RF gain. 4 means x(1/4)
  72:CLCD_2x16_control.c ****     uint8   threshold;
  73:CLCD_2x16_control.c ****     uint16  bias;
  74:CLCD_2x16_control.c **** }   GAIN_CTL_STRUCT;
  75:CLCD_2x16_control.c **** 
  76:CLCD_2x16_control.c **** //const GAIN_CTL_STRUCT pga_gain[13] = {
  77:CLCD_2x16_control.c **** const GAIN_CTL_STRUCT pga_gain[] = {
  78:CLCD_2x16_control.c **** //    {PGA_1_GAIN_01,  1u, 8u, GAIN_01_TH, IF_BIAS_R8},
  79:CLCD_2x16_control.c **** //    {PGA_1_GAIN_01,  1u, 4u, GAIN_01_TH, IF_BIAS_R4},
  80:CLCD_2x16_control.c **** //    {PGA_1_GAIN_01,  1u, 2u, GAIN_01_TH, IF_BIAS_R2},
  81:CLCD_2x16_control.c ****     {PGA_1_GAIN_01,  1u, 1u, GAIN_01_TH, IF_BIAS_01},       // default
  82:CLCD_2x16_control.c ****     {PGA_1_GAIN_02,  2u, 1u, GAIN_02_TH, IF_BIAS_01},
  83:CLCD_2x16_control.c ****     {PGA_1_GAIN_04,  4u, 1u, GAIN_04_TH, IF_BIAS_01},
  84:CLCD_2x16_control.c ****     {PGA_1_GAIN_08,  8u, 1u, GAIN_08_TH, IF_BIAS_01},
  85:CLCD_2x16_control.c ****     {PGA_1_GAIN_16, 16u, 1u, GAIN_16_TH, IF_BIAS_01},
  86:CLCD_2x16_control.c ****     {PGA_1_GAIN_24, 24u, 1u, GAIN_24_TH, IF_BIAS_01},
  87:CLCD_2x16_control.c ****     {PGA_1_GAIN_32, 32u, 1u, GAIN_32_TH, IF_BIAS_01},
  88:CLCD_2x16_control.c ****     {PGA_1_GAIN_48, 48u, 1u, GAIN_48_TH, IF_BIAS_01},
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 3


  89:CLCD_2x16_control.c ****     {PGA_1_GAIN_50, 50u, 1u, GAIN_50_TH, IF_BIAS_01},
  90:CLCD_2x16_control.c ****     {PGA_1_GAIN_MAX, 50u, 1u, GAIN_50_TH, IF_BIAS_01}
  91:CLCD_2x16_control.c **** };
  92:CLCD_2x16_control.c **** 
  93:CLCD_2x16_control.c **** #define GAIN_MAX    sizeof pga_gain / sizeof pga_gain[0]
  94:CLCD_2x16_control.c **** 
  95:CLCD_2x16_control.c **** typedef struct
  96:CLCD_2x16_control.c **** {
  97:CLCD_2x16_control.c ****     uint16  rms_mv_min;
  98:CLCD_2x16_control.c ****     uint16  rms_mv_max;
  99:CLCD_2x16_control.c ****     int8   gain_ctl;
 100:CLCD_2x16_control.c **** }   GAIN_AGC_TABLE;
 101:CLCD_2x16_control.c **** 
 102:CLCD_2x16_control.c **** const GAIN_AGC_TABLE pga_agc[9]= {
 103:CLCD_2x16_control.c ****     {0, 10, 4},
 104:CLCD_2x16_control.c ****     {10, 20, 3},
 105:CLCD_2x16_control.c ****     {20, 50, 2},
 106:CLCD_2x16_control.c ****     {50, 100, 1},
 107:CLCD_2x16_control.c ****     {200, 300, 0},
 108:CLCD_2x16_control.c ****     {300, 500, 0},
 109:CLCD_2x16_control.c ****     {500, 800, -1},
 110:CLCD_2x16_control.c ****     {800, 1000, -2},
 111:CLCD_2x16_control.c ****     {1000, 2000, -4},
 112:CLCD_2x16_control.c **** };
 113:CLCD_2x16_control.c **** #define AGC_MAX     sizeof pga_agc / sizeof pga_agc[0]
 114:CLCD_2x16_control.c **** 
 115:CLCD_2x16_control.c **** typedef struct
 116:CLCD_2x16_control.c **** {
 117:CLCD_2x16_control.c ****     int16  angle_min;
 118:CLCD_2x16_control.c ****     int16  angle_max;
 119:CLCD_2x16_control.c ****     uint8  mark_position;   /* start column position */
 120:CLCD_2x16_control.c ****     uint8  n_mark;          /* number of bar array */
 121:CLCD_2x16_control.c **** }   DIR_TABLE;
 122:CLCD_2x16_control.c **** 
 123:CLCD_2x16_control.c **** const DIR_TABLE dir_tab[]= {
 124:CLCD_2x16_control.c ****     {-91, -77, 0, 0},
 125:CLCD_2x16_control.c ****     {-77, -63, 0, 1},
 126:CLCD_2x16_control.c ****     {-63, -49, 0, 2},
 127:CLCD_2x16_control.c ****     {-49, -35, 0, 3},
 128:CLCD_2x16_control.c ****     {-35, -21, 0, 4},
 129:CLCD_2x16_control.c ****     {-21,  -7, 0, 5},
 130:CLCD_2x16_control.c ****     { -7,   7, 0, 6},
 131:CLCD_2x16_control.c ****     {  7,  21, 0, 7},
 132:CLCD_2x16_control.c ****     { 21,  35, 0, 8},
 133:CLCD_2x16_control.c ****     { 35,  49, 0, 9},
 134:CLCD_2x16_control.c ****     { 49,  63, 0, 10},
 135:CLCD_2x16_control.c ****     { 63,  77, 0, 11},
 136:CLCD_2x16_control.c ****     { 77,  91, 0, 12}
 137:CLCD_2x16_control.c **** };
 138:CLCD_2x16_control.c **** #define DIR_MAX     sizeof dir_tab / sizeof dir_tab[0]
 139:CLCD_2x16_control.c **** 
 140:CLCD_2x16_control.c **** const char8 bar[][16] = {
 141:CLCD_2x16_control.c ****     {'|',255,255,255,255,255,255,'|',' ',' ',' ',' ',' ',' ','|', 0},
 142:CLCD_2x16_control.c ****     {'|',' ',255,255,255,255,255,'|',' ',' ',' ',' ',' ',' ','|', 0},
 143:CLCD_2x16_control.c ****     {'|',' ',' ',255,255,255,255,'|',' ',' ',' ',' ',' ',' ','|', 0},
 144:CLCD_2x16_control.c ****     {'|',' ',' ',' ',255,255,255,'|',' ',' ',' ',' ',' ',' ','|', 0},
 145:CLCD_2x16_control.c ****     {'|',' ',' ',' ',' ',255,255,'|',' ',' ',' ',' ',' ',' ','|', 0},
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 4


 146:CLCD_2x16_control.c ****     {'|',' ',' ',' ',' ',' ',255,'|',' ',' ',' ',' ',' ',' ','|', 0},
 147:CLCD_2x16_control.c ****     {'|',' ',' ',' ',' ',' ',' ',255,' ',' ',' ',' ',' ',' ','|', 0},
 148:CLCD_2x16_control.c ****     {'|',' ',' ',' ',' ',' ',' ','|',255,' ',' ',' ',' ',' ','|', 0},
 149:CLCD_2x16_control.c ****     {'|',' ',' ',' ',' ',' ',' ','|',255,255,' ',' ',' ',' ','|', 0},
 150:CLCD_2x16_control.c ****     {'|',' ',' ',' ',' ',' ',' ','|',255,255,255,' ',' ',' ','|', 0},
 151:CLCD_2x16_control.c ****     {'|',' ',' ',' ',' ',' ',' ','|',255,255,255,255,' ',' ','|', 0},
 152:CLCD_2x16_control.c ****     {'|',' ',' ',' ',' ',' ',' ','|',255,255,255,255,255,' ','|', 0},
 153:CLCD_2x16_control.c ****     {'|',' ',' ',' ',' ',' ',' ','|',255,255,255,255,255,255,'|', 0},
 154:CLCD_2x16_control.c **** };
 155:CLCD_2x16_control.c **** #define BAR_MAX     sizeof bar / sizeof bar[0]
 156:CLCD_2x16_control.c **** 
 157:CLCD_2x16_control.c **** void CLCD_clear(uint8 raw)
 158:CLCD_2x16_control.c **** {
  27              		.loc 1 158 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 159:CLCD_2x16_control.c ****     I2C_CLCD_Position(raw, 0u);
  36              		.loc 1 159 0
  37 0002 0021     		movs	r1, #0
  38 0004 FFF7FEFF 		bl	I2C_CLCD_Position
  39              	.LVL1:
 160:CLCD_2x16_control.c ****     I2C_CLCD_PrintString("                    ");
  40              		.loc 1 160 0
  41 0008 0148     		ldr	r0, .L3
  42 000a FFF7FEFF 		bl	I2C_CLCD_PrintString
  43              	.LVL2:
  44 000e 08BD     		pop	{r3, pc}
  45              	.L4:
  46              		.align	2
  47              	.L3:
  48 0010 00000000 		.word	.LC0
  49              		.cfi_endproc
  50              	.LFE119:
  51              		.size	CLCD_clear, .-CLCD_clear
  52              		.section	.text.CLCD_mode_switch,"ax",%progbits
  53              		.align	2
  54              		.global	CLCD_mode_switch
  55              		.thumb
  56              		.thumb_func
  57              		.type	CLCD_mode_switch, %function
  58              	CLCD_mode_switch:
  59              	.LFB120:
 161:CLCD_2x16_control.c **** }
 162:CLCD_2x16_control.c **** 
 163:CLCD_2x16_control.c **** void CLCD_mode_switch (void)
 164:CLCD_2x16_control.c **** {
  60              		.loc 1 164 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 5


  65              		.cfi_def_cfa_offset 8
  66              		.cfi_offset 3, -8
  67              		.cfi_offset 14, -4
 165:CLCD_2x16_control.c ****     //char   str[BUFSIZE];
 166:CLCD_2x16_control.c **** 
 167:CLCD_2x16_control.c ****     switch(mode)
  68              		.loc 1 167 0
  69 0002 1C4B     		ldr	r3, .L11
  70 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  71 0006 022B     		cmp	r3, #2
  72 0008 12D0     		beq	.L7
  73 000a 032B     		cmp	r3, #3
  74 000c 23D0     		beq	.L8
  75 000e 012B     		cmp	r3, #1
  76 0010 2FD1     		bne	.L5
 168:CLCD_2x16_control.c ****     {
 169:CLCD_2x16_control.c ****         case DISTANCE:
 170:CLCD_2x16_control.c ****         /*                       "0123456789012345" */
 171:CLCD_2x16_control.c ****             I2C_CLCD_Position(0u, 0u);
  77              		.loc 1 171 0
  78 0012 0020     		movs	r0, #0
  79 0014 0146     		mov	r1, r0
  80 0016 FFF7FEFF 		bl	I2C_CLCD_Position
  81              	.LVL3:
 172:CLCD_2x16_control.c ****             I2C_CLCD_PrintString("|      |      | ");
  82              		.loc 1 172 0
  83 001a 1748     		ldr	r0, .L11+4
  84 001c FFF7FEFF 		bl	I2C_CLCD_PrintString
  85              	.LVL4:
 173:CLCD_2x16_control.c ****             I2C_CLCD_Position(1u, 0u);
  86              		.loc 1 173 0
  87 0020 0120     		movs	r0, #1
  88 0022 0021     		movs	r1, #0
  89 0024 FFF7FEFF 		bl	I2C_CLCD_Position
  90              	.LVL5:
 174:CLCD_2x16_control.c ****             I2C_CLCD_PrintString("Distance:      m");
  91              		.loc 1 174 0
  92 0028 1448     		ldr	r0, .L11+8
  93 002a FFF7FEFF 		bl	I2C_CLCD_PrintString
  94              	.LVL6:
 175:CLCD_2x16_control.c ****             break;
  95              		.loc 1 175 0
  96 002e 08BD     		pop	{r3, pc}
  97              	.L7:
 176:CLCD_2x16_control.c ****         case SIGNAL:
 177:CLCD_2x16_control.c ****         /*                       "0123456789012345" */
 178:CLCD_2x16_control.c ****             I2C_CLCD_Position(0u, 0u);
  98              		.loc 1 178 0
  99 0030 0020     		movs	r0, #0
 100 0032 0146     		mov	r1, r0
 101 0034 FFF7FEFF 		bl	I2C_CLCD_Position
 102              	.LVL7:
 179:CLCD_2x16_control.c ****             I2C_CLCD_PrintString("ANT1:         mV");
 103              		.loc 1 179 0
 104 0038 1148     		ldr	r0, .L11+12
 105 003a FFF7FEFF 		bl	I2C_CLCD_PrintString
 106              	.LVL8:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 6


 180:CLCD_2x16_control.c ****             I2C_CLCD_Position(1u, 0u);
 107              		.loc 1 180 0
 108 003e 0120     		movs	r0, #1
 109 0040 0021     		movs	r1, #0
 110 0042 FFF7FEFF 		bl	I2C_CLCD_Position
 111              	.LVL9:
 181:CLCD_2x16_control.c ****             I2C_CLCD_PrintString("ANT2:         mV");
 112              		.loc 1 181 0
 113 0046 0F48     		ldr	r0, .L11+16
 114 0048 FFF7FEFF 		bl	I2C_CLCD_PrintString
 115              	.LVL10:
 182:CLCD_2x16_control.c ****             I2C_CLCD_Position(2u, 0u);
 116              		.loc 1 182 0
 117 004c 0220     		movs	r0, #2
 118 004e 0021     		movs	r1, #0
 119 0050 FFF7FEFF 		bl	I2C_CLCD_Position
 120              	.LVL11:
 183:CLCD_2x16_control.c ****             break;
 121              		.loc 1 183 0
 122 0054 08BD     		pop	{r3, pc}
 123              	.L8:
 184:CLCD_2x16_control.c ****         case DIRECTION:
 185:CLCD_2x16_control.c ****         /*                       "0123456789012345" */
 186:CLCD_2x16_control.c ****             I2C_CLCD_Position(0u, 0u);
 124              		.loc 1 186 0
 125 0056 0020     		movs	r0, #0
 126 0058 0146     		mov	r1, r0
 127 005a FFF7FEFF 		bl	I2C_CLCD_Position
 128              	.LVL12:
 187:CLCD_2x16_control.c ****             I2C_CLCD_PrintString("Angle:       deg");
 129              		.loc 1 187 0
 130 005e 0A48     		ldr	r0, .L11+20
 131 0060 FFF7FEFF 		bl	I2C_CLCD_PrintString
 132              	.LVL13:
 188:CLCD_2x16_control.c ****             I2C_CLCD_Position(1u, 0u);
 133              		.loc 1 188 0
 134 0064 0120     		movs	r0, #1
 135 0066 0021     		movs	r1, #0
 136 0068 FFF7FEFF 		bl	I2C_CLCD_Position
 137              	.LVL14:
 189:CLCD_2x16_control.c ****             I2C_CLCD_PrintString("Gain: x         ");
 138              		.loc 1 189 0
 139 006c 0748     		ldr	r0, .L11+24
 140 006e FFF7FEFF 		bl	I2C_CLCD_PrintString
 141              	.LVL15:
 142              	.L5:
 143 0072 08BD     		pop	{r3, pc}
 144              	.L12:
 145              		.align	2
 146              	.L11:
 147 0074 00000000 		.word	.LANCHOR0
 148 0078 18000000 		.word	.LC1
 149 007c 2C000000 		.word	.LC2
 150 0080 40000000 		.word	.LC3
 151 0084 54000000 		.word	.LC4
 152 0088 68000000 		.word	.LC5
 153 008c 7C000000 		.word	.LC6
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 7


 154              		.cfi_endproc
 155              	.LFE120:
 156              		.size	CLCD_mode_switch, .-CLCD_mode_switch
 157              		.section	.text.set_Vth_Vbias,"ax",%progbits
 158              		.align	2
 159              		.global	set_Vth_Vbias
 160              		.thumb
 161              		.thumb_func
 162              		.type	set_Vth_Vbias, %function
 163              	set_Vth_Vbias:
 164              	.LFB121:
 190:CLCD_2x16_control.c ****             break;
 191:CLCD_2x16_control.c **** #if 0
 192:CLCD_2x16_control.c ****         case THRESHOLD:
 193:CLCD_2x16_control.c ****         /*                       "01234567890123456789" */
 194:CLCD_2x16_control.c ****             I2C_CLCD_Position(0u, 0u);
 195:CLCD_2x16_control.c ****             I2C_CLCD_PrintString("Threshold           ");
 196:CLCD_2x16_control.c ****             I2C_CLCD_Position(1u, 0u);
 197:CLCD_2x16_control.c ****             sprintf(str, "Default:    %3d [mV]", pga_gain[gain].threshold);
 198:CLCD_2x16_control.c ****             I2C_CLCD_PrintString(str);
 199:CLCD_2x16_control.c ****             I2C_CLCD_Position(2u, 0u);
 200:CLCD_2x16_control.c ****             sprintf(str, "Adj:        %3d [mV]", Adj_Vth);
 201:CLCD_2x16_control.c ****             I2C_CLCD_PrintString(str);
 202:CLCD_2x16_control.c ****             I2C_CLCD_Position(3u, 0u);
 203:CLCD_2x16_control.c ****             sprintf(str, "Current Vth:%3d [mV]", Vth);
 204:CLCD_2x16_control.c ****             I2C_CLCD_PrintString(str);
 205:CLCD_2x16_control.c ****             break;
 206:CLCD_2x16_control.c ****         case IF_BIAS:
 207:CLCD_2x16_control.c ****         /*                       "01234567890123456789" */
 208:CLCD_2x16_control.c ****             I2C_CLCD_Position(0u, 0u);
 209:CLCD_2x16_control.c ****             I2C_CLCD_PrintString("IF Amp BIAS         ");
 210:CLCD_2x16_control.c ****             I2C_CLCD_Position(1u, 0u);
 211:CLCD_2x16_control.c ****             sprintf(str, "Default:   %4d [mV]", pga_gain[gain].bias);
 212:CLCD_2x16_control.c ****             I2C_CLCD_PrintString(str);
 213:CLCD_2x16_control.c ****             I2C_CLCD_Position(2u, 0u);
 214:CLCD_2x16_control.c ****             sprintf(str, "Adj:       %4d [mV]", Adj_Vbias);
 215:CLCD_2x16_control.c ****             I2C_CLCD_PrintString(str);
 216:CLCD_2x16_control.c ****             I2C_CLCD_Position(3u, 0u);
 217:CLCD_2x16_control.c ****             sprintf(str, "Current Vb:%4d [mV]", Vbias);
 218:CLCD_2x16_control.c ****             I2C_CLCD_PrintString(str);
 219:CLCD_2x16_control.c ****             break;
 220:CLCD_2x16_control.c **** #endif
 221:CLCD_2x16_control.c ****         default:
 222:CLCD_2x16_control.c ****             /* nothing to do */
 223:CLCD_2x16_control.c ****             break;
 224:CLCD_2x16_control.c ****     }
 225:CLCD_2x16_control.c **** }
 226:CLCD_2x16_control.c **** 
 227:CLCD_2x16_control.c **** void set_Vth_Vbias(void)
 228:CLCD_2x16_control.c **** {
 165              		.loc 1 228 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169 0000 10B5     		push	{r4, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 4, -8
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 8


 172              		.cfi_offset 14, -4
 229:CLCD_2x16_control.c ****     int16 a, b;
 230:CLCD_2x16_control.c **** 
 231:CLCD_2x16_control.c ****     // set Threshold value
 232:CLCD_2x16_control.c ****     a = pga_gain[gain].threshold + Adj_Vth;
 173              		.loc 1 232 0
 174 0002 254B     		ldr	r3, .L20
 175 0004 B3F90230 		ldrsh	r3, [r3, #2]
 176 0008 03EB4303 		add	r3, r3, r3, lsl #1
 177 000c 5B00     		lsls	r3, r3, #1
 178 000e 234A     		ldr	r2, .L20+4
 179 0010 1344     		add	r3, r3, r2
 180 0012 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 181 0014 224B     		ldr	r3, .L20+8
 182 0016 1B88     		ldrh	r3, [r3]
 183 0018 1344     		add	r3, r3, r2
 184 001a 9BB2     		uxth	r3, r3
 185              	.LVL16:
 233:CLCD_2x16_control.c ****     if (a > 10)
 186              		.loc 1 233 0
 187 001c 19B2     		sxth	r1, r3
 188 001e 0A29     		cmp	r1, #10
 189 0020 02DD     		ble	.L14
 234:CLCD_2x16_control.c ****     	Vth = a;
 190              		.loc 1 234 0
 191 0022 1D4A     		ldr	r2, .L20
 192 0024 9380     		strh	r3, [r2, #4]	@ movhi
 193 0026 06E0     		b	.L15
 194              	.L14:
 235:CLCD_2x16_control.c ****     else
 236:CLCD_2x16_control.c ****     {
 237:CLCD_2x16_control.c ****     	Adj_Vth = 10 - pga_gain[gain].threshold;
 195              		.loc 1 237 0
 196 0028 C2F10A02 		rsb	r2, r2, #10
 197 002c 1C4B     		ldr	r3, .L20+8
 198              	.LVL17:
 199 002e 1A80     		strh	r2, [r3]	@ movhi
 238:CLCD_2x16_control.c ****     	Vth = 10;
 200              		.loc 1 238 0
 201 0030 0A22     		movs	r2, #10
 202 0032 194B     		ldr	r3, .L20
 203 0034 9A80     		strh	r2, [r3, #4]	@ movhi
 204              	.L15:
 239:CLCD_2x16_control.c ****     }
 240:CLCD_2x16_control.c ****     Control_GAIN_Write(Vth);
 205              		.loc 1 240 0
 206 0036 184C     		ldr	r4, .L20
 207 0038 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 208 003a FFF7FEFF 		bl	Control_GAIN_Write
 209              	.LVL18:
 241:CLCD_2x16_control.c **** 
 242:CLCD_2x16_control.c ****     // set IF BIAS value
 243:CLCD_2x16_control.c ****     b = pga_gain[gain].bias + Adj_Vbias;
 210              		.loc 1 243 0
 211 003e B4F90230 		ldrsh	r3, [r4, #2]
 212 0042 03EB4303 		add	r3, r3, r3, lsl #1
 213 0046 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 9


 214 0048 144A     		ldr	r2, .L20+4
 215 004a 1344     		add	r3, r3, r2
 216 004c 9988     		ldrh	r1, [r3, #4]
 217 004e 144B     		ldr	r3, .L20+8
 218 0050 5B88     		ldrh	r3, [r3, #2]
 219 0052 0B44     		add	r3, r3, r1
 220 0054 9BB2     		uxth	r3, r3
 221 0056 98B2     		uxth	r0, r3
 222              	.LVL19:
 244:CLCD_2x16_control.c ****     if (b < 2000 && b > 0)
 223              		.loc 1 244 0
 224 0058 5A1E     		subs	r2, r3, #1
 225 005a 92B2     		uxth	r2, r2
 226 005c 40F2CE74 		movw	r4, #1998
 227 0060 A242     		cmp	r2, r4
 228 0062 02D8     		bhi	.L16
 245:CLCD_2x16_control.c ****     	Vbias = b;
 229              		.loc 1 245 0
 230 0064 0C4A     		ldr	r2, .L20
 231 0066 D380     		strh	r3, [r2, #6]	@ movhi
 232 0068 11E0     		b	.L17
 233              	.L16:
 246:CLCD_2x16_control.c ****     else if (b <= 0)
 234              		.loc 1 246 0
 235 006a 00B2     		sxth	r0, r0
 236 006c 0028     		cmp	r0, #0
 237 006e 06DC     		bgt	.L18
 247:CLCD_2x16_control.c ****     {
 248:CLCD_2x16_control.c ****     	Adj_Vbias = 0 - pga_gain[gain].bias;
 238              		.loc 1 248 0
 239 0070 4942     		negs	r1, r1
 240 0072 0B4B     		ldr	r3, .L20+8
 241 0074 5980     		strh	r1, [r3, #2]	@ movhi
 249:CLCD_2x16_control.c ****     	Vbias = 0;
 242              		.loc 1 249 0
 243 0076 0022     		movs	r2, #0
 244 0078 074B     		ldr	r3, .L20
 245 007a DA80     		strh	r2, [r3, #6]	@ movhi
 246 007c 07E0     		b	.L17
 247              	.L18:
 250:CLCD_2x16_control.c ****     }
 251:CLCD_2x16_control.c ****     else // b >= 2000
 252:CLCD_2x16_control.c ****     {
 253:CLCD_2x16_control.c **** 	    Adj_Vbias = 2000 - pga_gain[gain].bias;
 248              		.loc 1 253 0
 249 007e C1F5FA61 		rsb	r1, r1, #2000
 250 0082 074B     		ldr	r3, .L20+8
 251 0084 5980     		strh	r1, [r3, #2]	@ movhi
 254:CLCD_2x16_control.c **** 	    Vbias = 2000;
 252              		.loc 1 254 0
 253 0086 4FF4FA62 		mov	r2, #2000
 254 008a 034B     		ldr	r3, .L20
 255 008c DA80     		strh	r2, [r3, #6]	@ movhi
 256              	.LVL20:
 257              	.L17:
 255:CLCD_2x16_control.c ****     }
 256:CLCD_2x16_control.c ****     DVDAC_2_SetValue(Vbias);
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 10


 258              		.loc 1 256 0
 259 008e 024B     		ldr	r3, .L20
 260 0090 D888     		ldrh	r0, [r3, #6]
 261 0092 FFF7FEFF 		bl	DVDAC_2_SetValue
 262              	.LVL21:
 263 0096 10BD     		pop	{r4, pc}
 264              	.L21:
 265              		.align	2
 266              	.L20:
 267 0098 00000000 		.word	.LANCHOR0
 268 009c 00000000 		.word	.LANCHOR1
 269 00a0 00000000 		.word	.LANCHOR2
 270              		.cfi_endproc
 271              	.LFE121:
 272              		.size	set_Vth_Vbias, .-set_Vth_Vbias
 273              		.global	__aeabi_ui2f
 274              		.global	__aeabi_fdiv
 275              		.global	__aeabi_f2d
 276              		.section	.text.CLCD_set_PGA_gain,"ax",%progbits
 277              		.align	2
 278              		.global	CLCD_set_PGA_gain
 279              		.thumb
 280              		.thumb_func
 281              		.type	CLCD_set_PGA_gain, %function
 282              	CLCD_set_PGA_gain:
 283              	.LFB122:
 257:CLCD_2x16_control.c **** }
 258:CLCD_2x16_control.c **** 
 259:CLCD_2x16_control.c **** void CLCD_set_PGA_gain (void)
 260:CLCD_2x16_control.c **** {
 284              		.loc 1 260 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 24
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 261:CLCD_2x16_control.c ****     char str[20];
 262:CLCD_2x16_control.c ****     
 263:CLCD_2x16_control.c ****     //if (mode == DISTANCE || mode == SIGNAL || mode == DIRECTION)
 264:CLCD_2x16_control.c ****     if (mode == DIRECTION)
 288              		.loc 1 264 0
 289 0000 2D4B     		ldr	r3, .L30
 290 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 291 0004 032B     		cmp	r3, #3
 292 0006 55D1     		bne	.L29
 260:CLCD_2x16_control.c ****     char str[20];
 293              		.loc 1 260 0
 294 0008 00B5     		push	{lr}
 295              		.cfi_def_cfa_offset 4
 296              		.cfi_offset 14, -4
 297 000a 87B0     		sub	sp, sp, #28
 298              		.cfi_def_cfa_offset 32
 265:CLCD_2x16_control.c ****     {
 266:CLCD_2x16_control.c ****         //if (mode == SIGNAL)
 267:CLCD_2x16_control.c ****         //    I2C_CLCD_Position(2u, 11u);
 268:CLCD_2x16_control.c ****         //else
 269:CLCD_2x16_control.c ****             I2C_CLCD_Position(1u, 8u);
 299              		.loc 1 269 0
 300 000c 0120     		movs	r0, #1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 11


 301 000e 0821     		movs	r1, #8
 302 0010 FFF7FEFF 		bl	I2C_CLCD_Position
 303              	.LVL22:
 270:CLCD_2x16_control.c **** 
 271:CLCD_2x16_control.c ****         //sprintf(str, "%2d", pga_gain[gain].magnification);
 272:CLCD_2x16_control.c ****         if (pga_gain[gain].rec_rf_gain == 1)
 304              		.loc 1 272 0
 305 0014 284B     		ldr	r3, .L30
 306 0016 B3F90220 		ldrsh	r2, [r3, #2]
 307 001a 02EB4203 		add	r3, r2, r2, lsl #1
 308 001e 5B00     		lsls	r3, r3, #1
 309 0020 2649     		ldr	r1, .L30+4
 310 0022 0B44     		add	r3, r3, r1
 311 0024 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 312 0026 0128     		cmp	r0, #1
 313 0028 09D1     		bne	.L24
 273:CLCD_2x16_control.c ****             sprintf(str, "%2d      ", pga_gain[gain].magnification);
 314              		.loc 1 273 0
 315 002a 02EB4202 		add	r2, r2, r2, lsl #1
 316 002e 5200     		lsls	r2, r2, #1
 317 0030 0A44     		add	r2, r2, r1
 318 0032 01A8     		add	r0, sp, #4
 319 0034 2249     		ldr	r1, .L30+8
 320 0036 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 321 0038 FFF7FEFF 		bl	sprintf
 322              	.LVL23:
 323 003c 34E0     		b	.L25
 324              	.L24:
 274:CLCD_2x16_control.c ****         else if (pga_gain[gain].rec_rf_gain == 2)
 325              		.loc 1 274 0
 326 003e 0228     		cmp	r0, #2
 327 0040 0FD1     		bne	.L26
 275:CLCD_2x16_control.c ****             sprintf(str, "% 1.1f    ", (1 / (float)pga_gain[gain].rec_rf_gain));
 328              		.loc 1 275 0
 329 0042 FFF7FEFF 		bl	__aeabi_ui2f
 330              	.LVL24:
 331 0046 0146     		mov	r1, r0
 332 0048 4FF07E50 		mov	r0, #1065353216
 333 004c FFF7FEFF 		bl	__aeabi_fdiv
 334              	.LVL25:
 335 0050 FFF7FEFF 		bl	__aeabi_f2d
 336              	.LVL26:
 337 0054 0246     		mov	r2, r0
 338 0056 0B46     		mov	r3, r1
 339 0058 01A8     		add	r0, sp, #4
 340 005a 1A49     		ldr	r1, .L30+12
 341 005c FFF7FEFF 		bl	sprintf
 342              	.LVL27:
 343 0060 22E0     		b	.L25
 344              	.L26:
 276:CLCD_2x16_control.c ****         else if (pga_gain[gain].rec_rf_gain == 4)
 345              		.loc 1 276 0
 346 0062 0428     		cmp	r0, #4
 347 0064 0FD1     		bne	.L27
 277:CLCD_2x16_control.c ****             sprintf(str, "% 2.2f   ", (1 / (float)pga_gain[gain].rec_rf_gain));
 348              		.loc 1 277 0
 349 0066 FFF7FEFF 		bl	__aeabi_ui2f
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 12


 350              	.LVL28:
 351 006a 0146     		mov	r1, r0
 352 006c 4FF07E50 		mov	r0, #1065353216
 353 0070 FFF7FEFF 		bl	__aeabi_fdiv
 354              	.LVL29:
 355 0074 FFF7FEFF 		bl	__aeabi_f2d
 356              	.LVL30:
 357 0078 0246     		mov	r2, r0
 358 007a 0B46     		mov	r3, r1
 359 007c 01A8     		add	r0, sp, #4
 360 007e 1249     		ldr	r1, .L30+16
 361 0080 FFF7FEFF 		bl	sprintf
 362              	.LVL31:
 363 0084 10E0     		b	.L25
 364              	.L27:
 278:CLCD_2x16_control.c ****         else if (pga_gain[gain].rec_rf_gain == 8)
 365              		.loc 1 278 0
 366 0086 0828     		cmp	r0, #8
 367 0088 0ED1     		bne	.L25
 279:CLCD_2x16_control.c ****             sprintf(str, "% 3.3f  ", (1 / (float)pga_gain[gain].rec_rf_gain));
 368              		.loc 1 279 0
 369 008a FFF7FEFF 		bl	__aeabi_ui2f
 370              	.LVL32:
 371 008e 0146     		mov	r1, r0
 372 0090 4FF07E50 		mov	r0, #1065353216
 373 0094 FFF7FEFF 		bl	__aeabi_fdiv
 374              	.LVL33:
 375 0098 FFF7FEFF 		bl	__aeabi_f2d
 376              	.LVL34:
 377 009c 0246     		mov	r2, r0
 378 009e 0B46     		mov	r3, r1
 379 00a0 01A8     		add	r0, sp, #4
 380 00a2 0A49     		ldr	r1, .L30+20
 381 00a4 FFF7FEFF 		bl	sprintf
 382              	.LVL35:
 383              	.L25:
 280:CLCD_2x16_control.c ****         I2C_CLCD_PrintString(str);
 384              		.loc 1 280 0
 385 00a8 01A8     		add	r0, sp, #4
 386 00aa FFF7FEFF 		bl	I2C_CLCD_PrintString
 387              	.LVL36:
 281:CLCD_2x16_control.c ****     }
 282:CLCD_2x16_control.c **** }
 388              		.loc 1 282 0
 389 00ae 07B0     		add	sp, sp, #28
 390              		.cfi_def_cfa_offset 4
 391              		@ sp needed
 392 00b0 5DF804FB 		ldr	pc, [sp], #4
 393              	.L29:
 394              		.cfi_def_cfa_offset 0
 395              		.cfi_restore 14
 396 00b4 7047     		bx	lr
 397              	.L31:
 398 00b6 00BF     		.align	2
 399              	.L30:
 400 00b8 00000000 		.word	.LANCHOR0
 401 00bc 00000000 		.word	.LANCHOR1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 13


 402 00c0 90000000 		.word	.LC7
 403 00c4 9C000000 		.word	.LC8
 404 00c8 A8000000 		.word	.LC9
 405 00cc B4000000 		.word	.LC10
 406              		.cfi_endproc
 407              	.LFE122:
 408              		.size	CLCD_set_PGA_gain, .-CLCD_set_PGA_gain
 409              		.global	__aeabi_ddiv
 410              		.global	__aeabi_dmul
 411              		.global	__aeabi_fmul
 412              		.global	__aeabi_fadd
 413              		.global	__aeabi_fcmpge
 414              		.global	__aeabi_d2iz
 415              		.global	__aeabi_i2d
 416              		.global	__aeabi_dcmple
 417              		.global	__aeabi_dcmpgt
 418              		.global	__aeabi_i2f
 419              		.global	__aeabi_f2uiz
 420              		.section	.text.Task_CLCD,"ax",%progbits
 421              		.align	2
 422              		.global	Task_CLCD
 423              		.thumb
 424              		.thumb_func
 425              		.type	Task_CLCD, %function
 426              	Task_CLCD:
 427              	.LFB123:
 283:CLCD_2x16_control.c **** 
 284:CLCD_2x16_control.c **** void Task_CLCD(void *pvParameters)
 285:CLCD_2x16_control.c **** {
 428              		.loc 1 285 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 64
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              	.LVL37:
 433 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 434              		.cfi_def_cfa_offset 36
 435              		.cfi_offset 4, -36
 436              		.cfi_offset 5, -32
 437              		.cfi_offset 6, -28
 438              		.cfi_offset 7, -24
 439              		.cfi_offset 8, -20
 440              		.cfi_offset 9, -16
 441              		.cfi_offset 10, -12
 442              		.cfi_offset 11, -8
 443              		.cfi_offset 14, -4
 444 0004 91B0     		sub	sp, sp, #68
 445              		.cfi_def_cfa_offset 104
 446              	.LVL38:
 286:CLCD_2x16_control.c ****     char   str[BUFSIZE];
 287:CLCD_2x16_control.c ****     uint8  qmsg;
 288:CLCD_2x16_control.c ****     //enum CLCD_mode mode = SIGNAL;    /* CLCD display mode */
 289:CLCD_2x16_control.c ****     
 290:CLCD_2x16_control.c ****     /* DSP mode */
 291:CLCD_2x16_control.c ****     uint8  update_level_flag = 0;   /* update the level on CLCD */
 292:CLCD_2x16_control.c ****     uint8  update_gain_flag = 0;   /* update the GAIN of PGA */
 293:CLCD_2x16_control.c ****     uint8  car_flag = 0;        /* captured data is carier(1) or null(0) */
 447              		.loc 1 293 0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 14


 448 0006 4FF00008 		mov	r8, #0
 449 000a 8DF82A80 		strb	r8, [sp, #42]
 450              	.LVL39:
 294:CLCD_2x16_control.c ****     float32_t meanval_cos, meanval_sin;
 295:CLCD_2x16_control.c ****     double_t  phi = 0;      /* phase */
 296:CLCD_2x16_control.c ****     double_t  phi_deg = 0;
 297:CLCD_2x16_control.c ****     float32_t rms[NUM_ANT], rms_mixed;
 298:CLCD_2x16_control.c ****     
 299:CLCD_2x16_control.c ****     double_t  dir = 0;      /* direction */
 300:CLCD_2x16_control.c ****     double_t  dir_deg = 0;
 301:CLCD_2x16_control.c ****     uint8  bar_position;      /* bar position on the CLCD line 1  */
 302:CLCD_2x16_control.c ****     uint8  n_bar;             /* bar pattern number */
 303:CLCD_2x16_control.c **** 
 304:CLCD_2x16_control.c ****     double_t  rms_pga = 0;    /* rms_mixed / pga_gain  */
 305:CLCD_2x16_control.c ****     double_t  distance = 0;
 306:CLCD_2x16_control.c **** 
 307:CLCD_2x16_control.c ****     /* Gain Control */
 308:CLCD_2x16_control.c ****     //int16 gain = 0;     /* init value is Min. Gain */
 309:CLCD_2x16_control.c ****     int8 click;
 310:CLCD_2x16_control.c ****     uint8 i;
 311:CLCD_2x16_control.c ****     
 312:CLCD_2x16_control.c ****     const portTickType xDelay = 5 / portTICK_RATE_MS;
 313:CLCD_2x16_control.c **** 
 314:CLCD_2x16_control.c ****     CLCD_mode_switch();
 451              		.loc 1 314 0
 452 000e FFF7FEFF 		bl	CLCD_mode_switch
 453              	.LVL40:
 315:CLCD_2x16_control.c ****     
 316:CLCD_2x16_control.c ****     /* set initial VTH for Task_Radio */
 317:CLCD_2x16_control.c ****     Control_GAIN_Write(pga_gain[gain].threshold);
 454              		.loc 1 317 0
 455 0012 A14D     		ldr	r5, .L81+8
 456 0014 B5F90230 		ldrsh	r3, [r5, #2]
 457 0018 03EB4303 		add	r3, r3, r3, lsl #1
 458 001c 5B00     		lsls	r3, r3, #1
 459 001e 9F4A     		ldr	r2, .L81+12
 460 0020 1344     		add	r3, r3, r2
 461 0022 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 462 0024 FFF7FEFF 		bl	Control_GAIN_Write
 463              	.LVL41:
 318:CLCD_2x16_control.c ****     /* set IF Amp BIAS */
 319:CLCD_2x16_control.c ****     DVDAC_2_SetValue((uint16)(Vbias));
 464              		.loc 1 319 0
 465 0028 E888     		ldrh	r0, [r5, #6]
 466 002a FFF7FEFF 		bl	DVDAC_2_SetValue
 467              	.LVL42:
 300:CLCD_2x16_control.c ****     uint8  bar_position;      /* bar position on the CLCD line 1  */
 468              		.loc 1 300 0
 469 002e 4646     		mov	r6, r8
 470 0030 4546     		mov	r5, r8
 296:CLCD_2x16_control.c ****     float32_t rms[NUM_ANT], rms_mixed;
 471              		.loc 1 296 0
 472 0032 0022     		movs	r2, #0
 473 0034 0023     		movs	r3, #0
 474 0036 CDE90023 		strd	r2, [sp]
 292:CLCD_2x16_control.c ****     uint8  car_flag = 0;        /* captured data is carier(1) or null(0) */
 475              		.loc 1 292 0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 15


 476 003a 4746     		mov	r7, r8
 477              	.LVL43:
 478              	.L33:
 320:CLCD_2x16_control.c ****     
 321:CLCD_2x16_control.c ****     /* Main Loop */
 322:CLCD_2x16_control.c ****     for(;;)
 323:CLCD_2x16_control.c ****     {
 324:CLCD_2x16_control.c ****         if (Status_Reg_1_Read() == 1u)
 479              		.loc 1 324 0
 480 003c FFF7FEFF 		bl	Status_Reg_1_Read
 481              	.LVL44:
 482 0040 0128     		cmp	r0, #1
 483 0042 03D1     		bne	.L34
 325:CLCD_2x16_control.c ****         {
 326:CLCD_2x16_control.c ****             vTaskDelay(xDelay);
 484              		.loc 1 326 0
 485 0044 0520     		movs	r0, #5
 486 0046 FFF7FEFF 		bl	vTaskDelay
 487              	.LVL45:
 327:CLCD_2x16_control.c ****             continue;
 488              		.loc 1 327 0
 489 004a F7E7     		b	.L33
 490              	.L34:
 328:CLCD_2x16_control.c ****         }
 329:CLCD_2x16_control.c **** 
 330:CLCD_2x16_control.c ****         /*** This task is done for the duration of no carrier (about 900ms) ***/
 331:CLCD_2x16_control.c **** 
 332:CLCD_2x16_control.c ****         /* Get Display Mode from Queue of KEY[0] */
 333:CLCD_2x16_control.c ****         if (xQueueReceive(xQueue_KEY[0], &qmsg, 0))
 491              		.loc 1 333 0
 492 004c 944B     		ldr	r3, .L81+16
 493 004e 1868     		ldr	r0, [r3]
 494 0050 0DF12B01 		add	r1, sp, #43
 495 0054 0022     		movs	r2, #0
 496 0056 1346     		mov	r3, r2
 497 0058 FFF7FEFF 		bl	xQueueGenericReceive
 498              	.LVL46:
 499 005c 58B1     		cbz	r0, .L36
 334:CLCD_2x16_control.c ****         {
 335:CLCD_2x16_control.c ****             mode++;
 500              		.loc 1 335 0
 501 005e 8E4A     		ldr	r2, .L81+8
 502 0060 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 503 0062 0133     		adds	r3, r3, #1
 504 0064 DBB2     		uxtb	r3, r3
 505 0066 1370     		strb	r3, [r2]
 336:CLCD_2x16_control.c ****             if (mode == NONE)   /* end of table */
 506              		.loc 1 336 0
 507 0068 042B     		cmp	r3, #4
 508 006a 02D1     		bne	.L37
 337:CLCD_2x16_control.c ****                 mode = DISTANCE;  /* the first mode */
 509              		.loc 1 337 0
 510 006c 0122     		movs	r2, #1
 511 006e 8A4B     		ldr	r3, .L81+8
 512 0070 1A70     		strb	r2, [r3]
 513              	.L37:
 338:CLCD_2x16_control.c ****             
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 16


 339:CLCD_2x16_control.c ****             CLCD_mode_switch();   /* init CLCD of the mode */
 514              		.loc 1 339 0
 515 0072 FFF7FEFF 		bl	CLCD_mode_switch
 516              	.LVL47:
 517              	.L36:
 340:CLCD_2x16_control.c ****         }
 341:CLCD_2x16_control.c **** 
 342:CLCD_2x16_control.c ****         /* Get Display Mode from Queue of KEY[1] */
 343:CLCD_2x16_control.c ****         if (xQueueReceive(xQueue_KEY[1], &qmsg, 0))
 518              		.loc 1 343 0
 519 0076 8A4B     		ldr	r3, .L81+16
 520 0078 5868     		ldr	r0, [r3, #4]
 521 007a 0DF12B01 		add	r1, sp, #43
 522 007e 0022     		movs	r2, #0
 523 0080 1346     		mov	r3, r2
 524 0082 FFF7FEFF 		bl	xQueueGenericReceive
 525              	.LVL48:
 526 0086 50B1     		cbz	r0, .L38
 344:CLCD_2x16_control.c ****         {
 345:CLCD_2x16_control.c ****             mode--;
 527              		.loc 1 345 0
 528 0088 834A     		ldr	r2, .L81+8
 529 008a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 530 008c 013B     		subs	r3, r3, #1
 531 008e DBB2     		uxtb	r3, r3
 532 0090 1370     		strb	r3, [r2]
 346:CLCD_2x16_control.c ****             if (mode == INVALID)    /* start of table */
 533              		.loc 1 346 0
 534 0092 13B9     		cbnz	r3, .L39
 347:CLCD_2x16_control.c ****                 //mode = IF_BIAS;       /* the last mode */
 348:CLCD_2x16_control.c ****                 mode = NONE - 1;
 535              		.loc 1 348 0
 536 0094 0322     		movs	r2, #3
 537 0096 804B     		ldr	r3, .L81+8
 538 0098 1A70     		strb	r2, [r3]
 539              	.L39:
 349:CLCD_2x16_control.c ****             CLCD_mode_switch();   /* init CLCD of the mode */
 540              		.loc 1 349 0
 541 009a FFF7FEFF 		bl	CLCD_mode_switch
 542              	.LVL49:
 543              	.L38:
 350:CLCD_2x16_control.c ****         }
 351:CLCD_2x16_control.c **** 
 352:CLCD_2x16_control.c ****         /* Get the signal level from Queue and Display on the CLCD */
 353:CLCD_2x16_control.c ****         if (uxQueueMessagesWaiting(xQueue_RXD) > 0)
 544              		.loc 1 353 0
 545 009e 814B     		ldr	r3, .L81+20
 546 00a0 1868     		ldr	r0, [r3]
 547 00a2 FFF7FEFF 		bl	uxQueueMessagesWaiting
 548              	.LVL50:
 549 00a6 0028     		cmp	r0, #0
 550 00a8 00F09E80 		beq	.L40
 354:CLCD_2x16_control.c ****         {
 355:CLCD_2x16_control.c ****             MON_Write(1u);      /* Debug */
 551              		.loc 1 355 0
 552 00ac 0120     		movs	r0, #1
 553 00ae FFF7FEFF 		bl	MON_Write
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 17


 554              	.LVL51:
 356:CLCD_2x16_control.c ****             xQueueReceive(xQueue_RXD, &car_flag, 0);       
 555              		.loc 1 356 0
 556 00b2 7C4B     		ldr	r3, .L81+20
 557 00b4 1868     		ldr	r0, [r3]
 558 00b6 0DF12A01 		add	r1, sp, #42
 559 00ba 0022     		movs	r2, #0
 560 00bc 1346     		mov	r3, r2
 561 00be FFF7FEFF 		bl	xQueueGenericReceive
 562              	.LVL52:
 357:CLCD_2x16_control.c ****             
 358:CLCD_2x16_control.c ****             xSemaphoreTake(xMutex_RX_BUF, portMAX_DELAY);
 563              		.loc 1 358 0
 564 00c2 794B     		ldr	r3, .L81+24
 565 00c4 1868     		ldr	r0, [r3]
 566 00c6 0021     		movs	r1, #0
 567 00c8 4FF0FF32 		mov	r2, #-1
 568 00cc 0B46     		mov	r3, r1
 569 00ce FFF7FEFF 		bl	xQueueGenericReceive
 570              	.LVL53:
 359:CLCD_2x16_control.c ****             /* continuous signal for 60ms ? */
 360:CLCD_2x16_control.c ****             if (car_flag)
 571              		.loc 1 360 0
 572 00d2 9DF82A30 		ldrb	r3, [sp, #42]	@ zero_extendqisi2
 573 00d6 9BB3     		cbz	r3, .L70
 361:CLCD_2x16_control.c ****             {
 362:CLCD_2x16_control.c ****                 /*********************************************************
 363:CLCD_2x16_control.c ****                 * phase difference between ANT1_buf_f32 and ANT2_buf_f32
 364:CLCD_2x16_control.c ****                 **********************************************************/
 365:CLCD_2x16_control.c ****                 /* A*sin(theta) * B*sin(theta+phi) -> (A*B/2) * cos(phi)  */
 366:CLCD_2x16_control.c ****                 arm_mult_f32(ANT1_buf_f32, ANT2_buf_f32, dst_buf_f32, MAX_BLOCKSIZE);
 574              		.loc 1 366 0
 575 00d8 744E     		ldr	r6, .L81+28
 576              	.LVL54:
 577 00da 754D     		ldr	r5, .L81+32
 578 00dc 754C     		ldr	r4, .L81+36
 579              	.LVL55:
 580 00de 3046     		mov	r0, r6
 581 00e0 2946     		mov	r1, r5
 582 00e2 2246     		mov	r2, r4
 583 00e4 8023     		movs	r3, #128
 584 00e6 FFF7FEFF 		bl	arm_mult_f32
 585              	.LVL56:
 367:CLCD_2x16_control.c ****                 arm_mean_f32(dst_buf_f32, MAX_BLOCKSIZE, &meanval_cos);
 586              		.loc 1 367 0
 587 00ea 2046     		mov	r0, r4
 588 00ec 8021     		movs	r1, #128
 589 00ee 09AA     		add	r2, sp, #36
 590 00f0 FFF7FEFF 		bl	arm_mean_f32
 591              	.LVL57:
 368:CLCD_2x16_control.c **** 
 369:CLCD_2x16_control.c ****                 /* A*cos(theta) * B*sin(theta+phi) -> (A*B/2) * sin(phi)  */
 370:CLCD_2x16_control.c ****                 arm_mult_f32(&ANT1_buf_f32[PHASE_90], ANT2_buf_f32, dst_buf_f32, MAX_BLOCKSIZE);
 592              		.loc 1 370 0
 593 00f4 06F12000 		add	r0, r6, #32
 594 00f8 2946     		mov	r1, r5
 595 00fa 2246     		mov	r2, r4
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 18


 596 00fc 8023     		movs	r3, #128
 597 00fe FFF7FEFF 		bl	arm_mult_f32
 598              	.LVL58:
 371:CLCD_2x16_control.c ****                 arm_mean_f32(dst_buf_f32, MAX_BLOCKSIZE, &meanval_sin);
 599              		.loc 1 371 0
 600 0102 2046     		mov	r0, r4
 601 0104 8021     		movs	r1, #128
 602 0106 08AA     		add	r2, sp, #32
 603 0108 FFF7FEFF 		bl	arm_mean_f32
 604              	.LVL59:
 372:CLCD_2x16_control.c ****                 
 373:CLCD_2x16_control.c ****                 phi = atan2(meanval_sin, meanval_cos);
 605              		.loc 1 373 0
 606 010c 0898     		ldr	r0, [sp, #32]	@ float
 607 010e FFF7FEFF 		bl	__aeabi_f2d
 608              	.LVL60:
 609 0112 0446     		mov	r4, r0
 610 0114 0D46     		mov	r5, r1
 611 0116 0998     		ldr	r0, [sp, #36]	@ float
 612 0118 FFF7FEFF 		bl	__aeabi_f2d
 613              	.LVL61:
 614 011c 0246     		mov	r2, r0
 615 011e 0B46     		mov	r3, r1
 616 0120 2046     		mov	r0, r4
 617 0122 2946     		mov	r1, r5
 618 0124 FFF7FEFF 		bl	atan2
 619              	.LVL62:
 374:CLCD_2x16_control.c ****                 phi_deg = (phi / 3.14159) * 180;
 620              		.loc 1 374 0
 621 0128 59A3     		adr	r3, .L81
 622 012a D3E90023 		ldrd	r2, [r3]
 623 012e FFF7FEFF 		bl	__aeabi_ddiv
 624              	.LVL63:
 625 0132 0022     		movs	r2, #0
 626 0134 604B     		ldr	r3, .L81+40
 627 0136 FFF7FEFF 		bl	__aeabi_dmul
 628              	.LVL64:
 629 013a CDE90001 		strd	r0, [sp]
 630              	.LVL65:
 631 013e 03E0     		b	.L41
 632              	.LVL66:
 633              	.L70:
 375:CLCD_2x16_control.c ****             }
 376:CLCD_2x16_control.c ****             /* continuous null for 1500ms ? */
 377:CLCD_2x16_control.c ****             else
 378:CLCD_2x16_control.c ****                 phi_deg = 0;
 634              		.loc 1 378 0
 635 0140 0022     		movs	r2, #0
 636 0142 0023     		movs	r3, #0
 637 0144 CDE90023 		strd	r2, [sp]
 638              	.LVL67:
 639              	.L41:
 379:CLCD_2x16_control.c **** 
 380:CLCD_2x16_control.c ****             /*********************************************************
 381:CLCD_2x16_control.c ****             * rms of srcA_buf_f32 and srcB_buf_f32
 382:CLCD_2x16_control.c ****             **********************************************************/
 383:CLCD_2x16_control.c ****             arm_rms_f32(ANT1_buf_f32, MAX_BLOCKSIZE, &rms[0]);
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 19


 640              		.loc 1 383 0
 641 0148 5848     		ldr	r0, .L81+28
 642 014a 8021     		movs	r1, #128
 643 014c 06AA     		add	r2, sp, #24
 644 014e FFF7FEFF 		bl	arm_rms_f32
 645              	.LVL68:
 384:CLCD_2x16_control.c ****             arm_rms_f32(ANT2_buf_f32, MAX_BLOCKSIZE, &rms[1]);
 646              		.loc 1 384 0
 647 0152 5748     		ldr	r0, .L81+32
 648 0154 8021     		movs	r1, #128
 649 0156 07AA     		add	r2, sp, #28
 650 0158 FFF7FEFF 		bl	arm_rms_f32
 651              	.LVL69:
 385:CLCD_2x16_control.c ****             //arm_rms_f32(rms, NUM_ANT, &rms_mixed);
 386:CLCD_2x16_control.c ****             arm_sqrt_f32((rms[0]*rms[0]) + (rms[1]*rms[1]), &rms_mixed);
 652              		.loc 1 386 0
 653 015c 0698     		ldr	r0, [sp, #24]	@ float
 654 015e 0146     		mov	r1, r0
 655 0160 FFF7FEFF 		bl	__aeabi_fmul
 656              	.LVL70:
 657 0164 0446     		mov	r4, r0
 658 0166 0798     		ldr	r0, [sp, #28]	@ float
 659 0168 0146     		mov	r1, r0
 660 016a FFF7FEFF 		bl	__aeabi_fmul
 661              	.LVL71:
 662 016e 0146     		mov	r1, r0
 663 0170 2046     		mov	r0, r4
 664 0172 FFF7FEFF 		bl	__aeabi_fadd
 665              	.LVL72:
 666 0176 0446     		mov	r4, r0
 667              	.LVL73:
 668              	.LBB4:
 669              	.LBB5:
 670              		.file 2 "..\\CMSIS_DSP_LIB\\Include/arm_math.h"
   1:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* ----------------------------------------------------------------------
   2:..\CMSIS_DSP_LIB\Include/arm_math.h **** * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
   3:..\CMSIS_DSP_LIB\Include/arm_math.h **** *
   4:..\CMSIS_DSP_LIB\Include/arm_math.h **** * $Date:        20. October 2015
   5:..\CMSIS_DSP_LIB\Include/arm_math.h **** * $Revision:    V1.4.5 b
   6:..\CMSIS_DSP_LIB\Include/arm_math.h **** *
   7:..\CMSIS_DSP_LIB\Include/arm_math.h **** * Project:      CMSIS DSP Library
   8:..\CMSIS_DSP_LIB\Include/arm_math.h **** * Title:        arm_math.h
   9:..\CMSIS_DSP_LIB\Include/arm_math.h **** *
  10:..\CMSIS_DSP_LIB\Include/arm_math.h **** * Description:  Public header file for CMSIS DSP Library
  11:..\CMSIS_DSP_LIB\Include/arm_math.h **** *
  12:..\CMSIS_DSP_LIB\Include/arm_math.h **** * Target Processor: Cortex-M7/Cortex-M4/Cortex-M3/Cortex-M0
  13:..\CMSIS_DSP_LIB\Include/arm_math.h **** *
  14:..\CMSIS_DSP_LIB\Include/arm_math.h **** * Redistribution and use in source and binary forms, with or without
  15:..\CMSIS_DSP_LIB\Include/arm_math.h **** * modification, are permitted provided that the following conditions
  16:..\CMSIS_DSP_LIB\Include/arm_math.h **** * are met:
  17:..\CMSIS_DSP_LIB\Include/arm_math.h **** *   - Redistributions of source code must retain the above copyright
  18:..\CMSIS_DSP_LIB\Include/arm_math.h **** *     notice, this list of conditions and the following disclaimer.
  19:..\CMSIS_DSP_LIB\Include/arm_math.h **** *   - Redistributions in binary form must reproduce the above copyright
  20:..\CMSIS_DSP_LIB\Include/arm_math.h **** *     notice, this list of conditions and the following disclaimer in
  21:..\CMSIS_DSP_LIB\Include/arm_math.h **** *     the documentation and/or other materials provided with the
  22:..\CMSIS_DSP_LIB\Include/arm_math.h **** *     distribution.
  23:..\CMSIS_DSP_LIB\Include/arm_math.h **** *   - Neither the name of ARM LIMITED nor the names of its contributors
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 20


  24:..\CMSIS_DSP_LIB\Include/arm_math.h **** *     may be used to endorse or promote products derived from this
  25:..\CMSIS_DSP_LIB\Include/arm_math.h **** *     software without specific prior written permission.
  26:..\CMSIS_DSP_LIB\Include/arm_math.h **** *
  27:..\CMSIS_DSP_LIB\Include/arm_math.h **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:..\CMSIS_DSP_LIB\Include/arm_math.h **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:..\CMSIS_DSP_LIB\Include/arm_math.h **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:..\CMSIS_DSP_LIB\Include/arm_math.h **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  31:..\CMSIS_DSP_LIB\Include/arm_math.h **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:..\CMSIS_DSP_LIB\Include/arm_math.h **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:..\CMSIS_DSP_LIB\Include/arm_math.h **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:..\CMSIS_DSP_LIB\Include/arm_math.h **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:..\CMSIS_DSP_LIB\Include/arm_math.h **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:..\CMSIS_DSP_LIB\Include/arm_math.h **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:..\CMSIS_DSP_LIB\Include/arm_math.h **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:..\CMSIS_DSP_LIB\Include/arm_math.h **** * POSSIBILITY OF SUCH DAMAGE.
  39:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * -------------------------------------------------------------------- */
  40:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
  41:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
  42:..\CMSIS_DSP_LIB\Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  43:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
  44:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Introduction
  45:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * ------------
  46:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
  47:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  48:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  49:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
  50:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  51:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Basic math functions
  52:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Fast math functions
  53:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Complex math functions
  54:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Filters
  55:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Matrix functions
  56:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Transforms
  57:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Motor control functions
  58:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Statistical functions
  59:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Support functions
  60:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Interpolation functions
  61:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
  62:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  63:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  64:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
  65:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Using the Library
  66:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * ------------
  67:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
  68:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  69:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Little endian and Double Precision Floating Point Unit on Cortex-
  70:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Big endian and Double Precision Floating Point Unit on Cortex-M7)
  71:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Little endian and Single Precision Floating Point Unit on Cortex-
  72:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Big endian and Single Precision Floating Point Unit on Cortex-M7)
  73:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Little endian on Cortex-M7)
  74:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Big endian on Cortex-M7)
  75:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Little endian and Floating Point Unit on Cortex-M4)
  76:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Big endian and Floating Point Unit on Cortex-M4)
  77:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Little endian on Cortex-M4)
  78:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Big endian on Cortex-M4)
  79:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Little endian on Cortex-M3)
  80:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Big endian on Cortex-M3)
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 21


  81:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Little endian on Cortex-M0 / CortexM0+)
  82:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Big endian on Cortex-M0 / CortexM0+)
  83:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
  84:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  85:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  86:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M7/M4/M3/M0/M0+ with little endian and 
  87:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Define the appropriate pre processor MACRO ARM_MATH_CM7 or ARM_MATH_CM4 or  ARM_MATH_CM3 or
  88:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  89:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
  90:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Examples
  91:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * --------
  92:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
  93:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  94:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
  95:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Toolchain Support
  96:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * ------------
  97:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
  98:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library has been developed and tested with MDK-ARM version 5.14.0.0
  99:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
 100:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 101:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Building the Library
 102:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * ------------
 103:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 104:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library installer contains a project file to re build libraries on MDK-ARM Tool chain in t
 105:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
 106:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 107:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 108:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
 109:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 110:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Pre-processor Macros
 111:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * ------------
 112:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 113:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Each library project have differant pre-processor macros.
 114:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 115:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 116:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 117:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 118:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 119:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 120:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 121:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 122:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 123:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 124:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 125:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 126:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 127:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 128:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 129:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 130:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 131:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - ARM_MATH_CMx:
 132:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 133:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 134:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * and ARM_MATH_CM0 for building library on Cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 135:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * ARM_MATH_CM7 for building the library on cortex-M7.
 136:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 137:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - __FPU_PRESENT:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 22


 138:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 139:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 140:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 141:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <hr>
 142:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 143:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * -----------------------------
 144:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 145:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 146:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * |File/Folder                   |Content                                                       
 147:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 148:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 149:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 150:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 151:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 152:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 153:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <hr>
 154:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Revision History of CMSIS-DSP
 155:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * ------------
 156:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 157:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 158:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Copyright Notice
 159:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * ------------
 160:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
 161:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
 162:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 163:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 164:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 165:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
 166:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 167:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 168:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 169:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
 170:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 171:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 172:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 173:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * operate on individual values and not arrays.
 174:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 175:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *
 176:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 177:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 178:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
 179:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 180:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 181:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 182:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * (real, imag, real, imag, ...).
 183:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 184:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 185:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * real values.
 186:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 187:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 188:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
 189:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 190:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 191:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 192:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
 193:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 194:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 23


 195:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 196:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 197:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * the type
 198:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 199:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * below:
 200:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * <pre>
 201:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *     typedef struct
 202:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *     {
 203:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 204:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 205:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 206:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 207:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * </pre>
 208:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 209:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *
 210:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 211:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 212:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 213:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * matrix element (i, j) is stored at:
 214:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * <pre>
 215:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *     pData[i*numCols + j]
 216:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * </pre>
 217:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *
 218:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * \par Init Functions
 219:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 220:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * data structure.
 221:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 222:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 223:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 224:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *
 225:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * \par
 226:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 227:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 228:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * To place the instance structure in a const data
 229:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 230:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * <pre>
 231:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 232:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 233:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 234:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * </pre>
 235:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 236:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 237:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * data array.
 238:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *
 239:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * \par Size Checking
 240:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 241:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * output matrices.  For example, the matrix addition function verifies that the
 242:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 243:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * columns.  If the size check fails the functions return:
 244:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * <pre>
 245:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 246:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * </pre>
 247:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * Otherwise the functions return
 248:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * <pre>
 249:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 250:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * </pre>
 251:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 24


 252:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 253:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * <pre>
 254:..\CMSIS_DSP_LIB\Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 255:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * </pre>
 256:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 257:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * and size checking is enabled.  By changing the project settings and
 258:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 259:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * run a bit faster.  With size checking disabled the functions always
 260:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 261:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 262:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 263:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
 264:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 265:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 266:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 267:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
 268:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupController Controller Functions
 269:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 270:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 271:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
 272:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 273:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 274:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
 275:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 276:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 277:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 278:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
 279:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 280:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 281:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 282:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 283:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 284:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 285:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
 286:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @defgroup groupExamples Examples
 287:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 288:..\CMSIS_DSP_LIB\Include/arm_math.h **** #ifndef _ARM_MATH_H
 289:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define _ARM_MATH_H
 290:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 291:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* ignore some GCC warnings */
 292:..\CMSIS_DSP_LIB\Include/arm_math.h **** #if defined ( __GNUC__ )
 293:..\CMSIS_DSP_LIB\Include/arm_math.h **** #pragma GCC diagnostic push
 294:..\CMSIS_DSP_LIB\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
 295:..\CMSIS_DSP_LIB\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wconversion"
 296:..\CMSIS_DSP_LIB\Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 297:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
 298:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 299:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 300:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 301:..\CMSIS_DSP_LIB\Include/arm_math.h **** #if defined(ARM_MATH_CM7)
 302:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #include "core_cm7.h"
 303:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif defined (ARM_MATH_CM4)
 304:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #include "core_cm4.h"
 305:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif defined (ARM_MATH_CM3)
 306:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #include "core_cm3.h"
 307:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif defined (ARM_MATH_CM0)
 308:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #include "core_cm0.h"
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 25


 309:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 310:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif defined (ARM_MATH_CM0PLUS)
 311:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #include "core_cm0plus.h"
 312:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 313:..\CMSIS_DSP_LIB\Include/arm_math.h **** #else
 314:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 315:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
 316:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 317:..\CMSIS_DSP_LIB\Include/arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 318:..\CMSIS_DSP_LIB\Include/arm_math.h **** #include "string.h"
 319:..\CMSIS_DSP_LIB\Include/arm_math.h **** #include "math.h"
 320:..\CMSIS_DSP_LIB\Include/arm_math.h **** #include <project.h>			/* for PSoC Creator 3.x */
 321:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 322:..\CMSIS_DSP_LIB\Include/arm_math.h **** #ifdef   __cplusplus
 323:..\CMSIS_DSP_LIB\Include/arm_math.h **** extern "C"
 324:..\CMSIS_DSP_LIB\Include/arm_math.h **** {
 325:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
 326:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 327:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 328:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 329:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 330:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 331:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 332:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define DELTA_Q31          (0x100)
 333:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define DELTA_Q15          0x5
 334:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 335:..\CMSIS_DSP_LIB\Include/arm_math.h **** #ifndef PI
 336:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define PI                 3.14159265358979f
 337:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
 338:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 339:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 340:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 341:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 342:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 343:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 344:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 345:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 346:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 347:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define TABLE_SIZE  256
 348:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 349:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 350:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 351:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 352:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 353:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 354:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 355:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 356:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 357:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 358:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 359:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Macro for Unaligned Support
 360:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 361:..\CMSIS_DSP_LIB\Include/arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 362:..\CMSIS_DSP_LIB\Include/arm_math.h ****     #define ALIGN4
 363:..\CMSIS_DSP_LIB\Include/arm_math.h **** #else
 364:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #if defined  (__GNUC__)
 365:..\CMSIS_DSP_LIB\Include/arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 26


 366:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #else
 367:..\CMSIS_DSP_LIB\Include/arm_math.h ****     #define ALIGN4 __align(4)
 368:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #endif
 369:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif   /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 370:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 371:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 372:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 373:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 374:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 375:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef enum
 376:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 377:..\CMSIS_DSP_LIB\Include/arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 378:..\CMSIS_DSP_LIB\Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 379:..\CMSIS_DSP_LIB\Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 380:..\CMSIS_DSP_LIB\Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 381:..\CMSIS_DSP_LIB\Include/arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 382:..\CMSIS_DSP_LIB\Include/arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 383:..\CMSIS_DSP_LIB\Include/arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 384:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_status;
 385:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 386:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 387:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 388:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 389:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef int8_t q7_t;
 390:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 391:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 392:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 393:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 394:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef int16_t q15_t;
 395:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 396:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 397:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 398:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 399:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef int32_t q31_t;
 400:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 401:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 402:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 403:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 404:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef int64_t q63_t;
 405:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 406:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 407:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 408:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 409:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef float float32_t;
 410:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 411:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 412:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 413:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 414:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef double float64_t;
 415:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 416:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 417:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief definition to read/write two 16 bit values.
 418:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 419:..\CMSIS_DSP_LIB\Include/arm_math.h **** #if defined __CC_ARM
 420:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 421:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 422:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 27


 423:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 424:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 425:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 426:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 427:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif defined __GNUC__
 428:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 429:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 430:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 431:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif defined __ICCARM__
 432:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 433:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define CMSIS_UNUSED
 434:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 435:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif defined __CSMC__
 436:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 437:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define CMSIS_UNUSED
 438:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 439:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif defined __TASKING__
 440:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define __SIMD32_TYPE __unaligned int32_t
 441:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define CMSIS_UNUSED
 442:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 443:..\CMSIS_DSP_LIB\Include/arm_math.h **** #else
 444:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #error Unknown compiler
 445:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
 446:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 447:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 448:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 449:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 450:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define __SIMD64(addr)        (*(int64_t **) & (addr))
 451:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 452:..\CMSIS_DSP_LIB\Include/arm_math.h **** #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY)
 453:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 454:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief definition to pack two 16 bit values.
 455:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 456:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3)      ( (((int32_t)(ARG1) <<  0) & (int32_t)0x0000FFFF) | \
 457:..\CMSIS_DSP_LIB\Include/arm_math.h ****                                          (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 458:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3)      ( (((int32_t)(ARG1) <<  0) & (int32_t)0xFFFF0000) | \
 459:..\CMSIS_DSP_LIB\Include/arm_math.h ****                                          (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 460:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 461:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
 462:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 463:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 464:..\CMSIS_DSP_LIB\Include/arm_math.h ****    /**
 465:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief definition to pack four 8 bit values.
 466:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 467:..\CMSIS_DSP_LIB\Include/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 468:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 469:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 470:..\CMSIS_DSP_LIB\Include/arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 471:..\CMSIS_DSP_LIB\Include/arm_math.h ****                                 (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 472:..\CMSIS_DSP_LIB\Include/arm_math.h ****                                 (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 473:..\CMSIS_DSP_LIB\Include/arm_math.h **** #else
 474:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 475:..\CMSIS_DSP_LIB\Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 476:..\CMSIS_DSP_LIB\Include/arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 477:..\CMSIS_DSP_LIB\Include/arm_math.h ****                                 (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 478:..\CMSIS_DSP_LIB\Include/arm_math.h ****                                 (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 479:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 28


 480:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
 481:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 482:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 483:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 484:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 485:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 486:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q31_t clip_q63_to_q31(
 487:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q63_t x)
 488:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 489:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 490:..\CMSIS_DSP_LIB\Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 491:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 492:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 493:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 494:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Clips Q63 to Q15 values.
 495:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 496:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q15_t clip_q63_to_q15(
 497:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q63_t x)
 498:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 499:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 500:..\CMSIS_DSP_LIB\Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 501:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 502:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 503:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 504:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Clips Q31 to Q7 values.
 505:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 506:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q7_t clip_q31_to_q7(
 507:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t x)
 508:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 509:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
 510:..\CMSIS_DSP_LIB\Include/arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 511:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 512:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 513:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 514:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Clips Q31 to Q15 values.
 515:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 516:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q15_t clip_q31_to_q15(
 517:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t x)
 518:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 519:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 520:..\CMSIS_DSP_LIB\Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 521:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 522:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 523:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 524:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
 525:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 526:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 527:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q63_t mult32x64(
 528:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q63_t x,
 529:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t y)
 530:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 531:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 532:..\CMSIS_DSP_LIB\Include/arm_math.h ****             (((q63_t) (x >> 32) * y)));
 533:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 534:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 535:..\CMSIS_DSP_LIB\Include/arm_math.h **** /*
 536:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #if defined (ARM_MATH_CM0_FAMILY) && defined ( __CC_ARM   )
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 29


 537:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #define __CLZ __clz
 538:..\CMSIS_DSP_LIB\Include/arm_math.h ****   #endif
 539:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
 540:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* note: function can be removed when all toolchain support __CLZ for Cortex-M0 */
 541:..\CMSIS_DSP_LIB\Include/arm_math.h **** #if defined (ARM_MATH_CM0_FAMILY) && ((defined (__ICCARM__))  )
 542:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __CLZ(
 543:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t data);
 544:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 545:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __CLZ(
 546:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t data)
 547:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 548:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t count = 0;
 549:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t mask = 0x80000000;
 550:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 551:..\CMSIS_DSP_LIB\Include/arm_math.h ****     while((data & mask) == 0)
 552:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
 553:..\CMSIS_DSP_LIB\Include/arm_math.h ****       count += 1u;
 554:..\CMSIS_DSP_LIB\Include/arm_math.h ****       mask = mask >> 1u;
 555:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
 556:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 557:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return (count);
 558:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 559:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
 560:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 561:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 562:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
 563:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 564:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 565:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t arm_recip_q31(
 566:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t in,
 567:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * dst,
 568:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pRecipTable)
 569:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 570:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t out;
 571:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t tempVal;
 572:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t index, i;
 573:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t signBits;
 574:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 575:..\CMSIS_DSP_LIB\Include/arm_math.h ****     if(in > 0)
 576:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
 577:..\CMSIS_DSP_LIB\Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ( in) - 1));
 578:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
 579:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else
 580:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
 581:..\CMSIS_DSP_LIB\Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ(-in) - 1));
 582:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
 583:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 584:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Convert input sample to 1.31 format */
 585:..\CMSIS_DSP_LIB\Include/arm_math.h ****     in = (in << signBits);
 586:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 587:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 588:..\CMSIS_DSP_LIB\Include/arm_math.h ****     index = (uint32_t)(in >> 24);
 589:..\CMSIS_DSP_LIB\Include/arm_math.h ****     index = (index & INDEX_MASK);
 590:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 591:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* 1.31 with exp 1 */
 592:..\CMSIS_DSP_LIB\Include/arm_math.h ****     out = pRecipTable[index];
 593:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 30


 594:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* calculation of reciprocal value */
 595:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* running approximation for two iterations */
 596:..\CMSIS_DSP_LIB\Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 597:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
 598:..\CMSIS_DSP_LIB\Include/arm_math.h ****       tempVal = (uint32_t) (((q63_t) in * out) >> 31);
 599:..\CMSIS_DSP_LIB\Include/arm_math.h ****       tempVal = 0x7FFFFFFFu - tempVal;
 600:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /*      1.31 with exp 1 */
 601:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
 602:..\CMSIS_DSP_LIB\Include/arm_math.h ****       out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
 603:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
 604:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 605:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* write output */
 606:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *dst = out;
 607:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 608:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 609:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return (signBits + 1u);
 610:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 611:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 612:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 613:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
 614:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q15 Data type.
 615:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 616:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t arm_recip_q15(
 617:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t in,
 618:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * dst,
 619:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pRecipTable)
 620:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 621:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t out = 0;
 622:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t tempVal = 0;
 623:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t index = 0, i = 0;
 624:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t signBits = 0;
 625:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 626:..\CMSIS_DSP_LIB\Include/arm_math.h ****     if(in > 0)
 627:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
 628:..\CMSIS_DSP_LIB\Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ( in) - 17));
 629:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
 630:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else
 631:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
 632:..\CMSIS_DSP_LIB\Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ(-in) - 17));
 633:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
 634:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 635:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Convert input sample to 1.15 format */
 636:..\CMSIS_DSP_LIB\Include/arm_math.h ****     in = (in << signBits);
 637:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 638:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 639:..\CMSIS_DSP_LIB\Include/arm_math.h ****     index = (uint32_t)(in >>  8);
 640:..\CMSIS_DSP_LIB\Include/arm_math.h ****     index = (index & INDEX_MASK);
 641:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 642:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /*      1.15 with exp 1  */
 643:..\CMSIS_DSP_LIB\Include/arm_math.h ****     out = pRecipTable[index];
 644:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 645:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* calculation of reciprocal value */
 646:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* running approximation for two iterations */
 647:..\CMSIS_DSP_LIB\Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 648:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
 649:..\CMSIS_DSP_LIB\Include/arm_math.h ****       tempVal = (uint32_t) (((q31_t) in * out) >> 15);
 650:..\CMSIS_DSP_LIB\Include/arm_math.h ****       tempVal = 0x7FFFu - tempVal;
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 31


 651:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /*      1.15 with exp 1 */
 652:..\CMSIS_DSP_LIB\Include/arm_math.h ****       out = (q15_t) (((q31_t) out * tempVal) >> 14);
 653:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* out = clip_q31_to_q15(((q31_t) out * tempVal) >> 14); */
 654:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
 655:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 656:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* write output */
 657:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *dst = out;
 658:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 659:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 660:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return (signBits + 1);
 661:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 662:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 663:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 664:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 665:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined intrinisic function for only M0 processors
 666:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 667:..\CMSIS_DSP_LIB\Include/arm_math.h **** #if defined(ARM_MATH_CM0_FAMILY)
 668:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q31_t __SSAT(
 669:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t x,
 670:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 671:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 672:..\CMSIS_DSP_LIB\Include/arm_math.h ****     int32_t posMax, negMin;
 673:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t i;
 674:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 675:..\CMSIS_DSP_LIB\Include/arm_math.h ****     posMax = 1;
 676:..\CMSIS_DSP_LIB\Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 677:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
 678:..\CMSIS_DSP_LIB\Include/arm_math.h ****       posMax = posMax * 2;
 679:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
 680:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 681:..\CMSIS_DSP_LIB\Include/arm_math.h ****     if(x > 0)
 682:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
 683:..\CMSIS_DSP_LIB\Include/arm_math.h ****       posMax = (posMax - 1);
 684:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 685:..\CMSIS_DSP_LIB\Include/arm_math.h ****       if(x > posMax)
 686:..\CMSIS_DSP_LIB\Include/arm_math.h ****       {
 687:..\CMSIS_DSP_LIB\Include/arm_math.h ****         x = posMax;
 688:..\CMSIS_DSP_LIB\Include/arm_math.h ****       }
 689:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
 690:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else
 691:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
 692:..\CMSIS_DSP_LIB\Include/arm_math.h ****       negMin = -posMax;
 693:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 694:..\CMSIS_DSP_LIB\Include/arm_math.h ****       if(x < negMin)
 695:..\CMSIS_DSP_LIB\Include/arm_math.h ****       {
 696:..\CMSIS_DSP_LIB\Include/arm_math.h ****         x = negMin;
 697:..\CMSIS_DSP_LIB\Include/arm_math.h ****       }
 698:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
 699:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return (x);
 700:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 701:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif /* end of ARM_MATH_CM0_FAMILY */
 702:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 703:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 704:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 705:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined intrinsic function for M3 and M0 processors
 706:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 707:..\CMSIS_DSP_LIB\Include/arm_math.h **** #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY)
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 32


 708:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 709:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 710:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined QADD8 for M3 and M0 processors
 711:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 712:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __QADD8(
 713:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 714:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 715:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 716:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t r, s, t, u;
 717:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 718:..\CMSIS_DSP_LIB\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) + (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 719:..\CMSIS_DSP_LIB\Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) + (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 720:..\CMSIS_DSP_LIB\Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) + (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 721:..\CMSIS_DSP_LIB\Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) + (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 722:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 723:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 724:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 725:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 726:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 727:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 728:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined QSUB8 for M3 and M0 processors
 729:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 730:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __QSUB8(
 731:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 732:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 733:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 734:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t r, s, t, u;
 735:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 736:..\CMSIS_DSP_LIB\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) - (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 737:..\CMSIS_DSP_LIB\Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) - (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 738:..\CMSIS_DSP_LIB\Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) - (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 739:..\CMSIS_DSP_LIB\Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) - (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 740:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 741:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 742:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 743:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 744:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 745:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 746:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined QADD16 for M3 and M0 processors
 747:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 748:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __QADD16(
 749:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 750:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 751:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 752:..\CMSIS_DSP_LIB\Include/arm_math.h **** /*  q31_t r,     s;  without initialisation 'arm_offset_q15 test' fails  but 'intrinsic' tests pass
 753:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t r = 0, s = 0;
 754:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 755:..\CMSIS_DSP_LIB\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 756:..\CMSIS_DSP_LIB\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 757:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 758:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 759:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 760:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 761:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 762:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 763:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SHADD16 for M3 and M0 processors
 764:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 33


 765:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SHADD16(
 766:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 767:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 768:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 769:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t r, s;
 770:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 771:..\CMSIS_DSP_LIB\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 772:..\CMSIS_DSP_LIB\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 773:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 774:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 775:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 776:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 777:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 778:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 779:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined QSUB16 for M3 and M0 processors
 780:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 781:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __QSUB16(
 782:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 783:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 784:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 785:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t r, s;
 786:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 787:..\CMSIS_DSP_LIB\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 788:..\CMSIS_DSP_LIB\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 789:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 790:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 791:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 792:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 793:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 794:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 795:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SHSUB16 for M3 and M0 processors
 796:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 797:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SHSUB16(
 798:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 799:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 800:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 801:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t r, s;
 802:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 803:..\CMSIS_DSP_LIB\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 804:..\CMSIS_DSP_LIB\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 805:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 806:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 807:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 808:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 809:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 810:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 811:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined QASX for M3 and M0 processors
 812:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 813:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __QASX(
 814:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 815:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 816:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 817:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t r, s;
 818:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 819:..\CMSIS_DSP_LIB\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 820:..\CMSIS_DSP_LIB\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 821:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 34


 822:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 823:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 824:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 825:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 826:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 827:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SHASX for M3 and M0 processors
 828:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 829:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SHASX(
 830:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 831:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 832:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 833:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t r, s;
 834:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 835:..\CMSIS_DSP_LIB\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 836:..\CMSIS_DSP_LIB\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 837:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 838:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 839:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 840:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 841:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 842:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 843:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined QSAX for M3 and M0 processors
 844:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 845:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __QSAX(
 846:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 847:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 848:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 849:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t r, s;
 850:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 851:..\CMSIS_DSP_LIB\Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 852:..\CMSIS_DSP_LIB\Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 853:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 854:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 855:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 856:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 857:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 858:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 859:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SHSAX for M3 and M0 processors
 860:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 861:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SHSAX(
 862:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 863:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 864:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 865:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t r, s;
 866:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 867:..\CMSIS_DSP_LIB\Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 868:..\CMSIS_DSP_LIB\Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 869:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 870:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 871:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 872:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 873:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 874:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 875:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SMUSDX for M3 and M0 processors
 876:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 877:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SMUSDX(
 878:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 35


 879:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 880:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 881:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 882:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 883:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 884:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 885:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 886:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SMUADX for M3 and M0 processors
 887:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 888:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SMUADX(
 889:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 890:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 891:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 892:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 893:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 894:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 895:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 896:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 897:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 898:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined QADD for M3 and M0 processors
 899:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 900:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE int32_t __QADD(
 901:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t x,
 902:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t y)
 903:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 904:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x + (q31_t)y)));
 905:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 906:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 907:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 908:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 909:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined QSUB for M3 and M0 processors
 910:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 911:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE int32_t __QSUB(
 912:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t x,
 913:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t y)
 914:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 915:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x - (q31_t)y)));
 916:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 917:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 918:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 919:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 920:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SMLAD for M3 and M0 processors
 921:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 922:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SMLAD(
 923:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 924:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y,
 925:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t sum)
 926:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 927:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 928:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 929:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 930:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 931:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 932:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 933:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 934:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SMLADX for M3 and M0 processors
 935:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 36


 936:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SMLADX(
 937:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 938:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y,
 939:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t sum)
 940:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 941:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 942:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 943:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 944:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 945:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 946:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 947:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 948:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SMLSDX for M3 and M0 processors
 949:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 950:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SMLSDX(
 951:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 952:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y,
 953:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t sum)
 954:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 955:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 956:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 957:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 958:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 959:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 960:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 961:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 962:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SMLALD for M3 and M0 processors
 963:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 964:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint64_t __SMLALD(
 965:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 966:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y,
 967:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint64_t sum)
 968:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 969:..\CMSIS_DSP_LIB\Include/arm_math.h **** /*  return (sum + ((q15_t) (x >> 16) * (q15_t) (y >> 16)) + ((q15_t) x * (q15_t) y)); */
 970:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 971:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 972:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ( ((q63_t)sum    )                                  )   ));
 973:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 974:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 975:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 976:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 977:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SMLALDX for M3 and M0 processors
 978:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 979:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint64_t __SMLALDX(
 980:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 981:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y,
 982:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint64_t sum)
 983:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 984:..\CMSIS_DSP_LIB\Include/arm_math.h **** /*  return (sum + ((q15_t) (x >> 16) * (q15_t) y)) + ((q15_t) x * (q15_t) (y >> 16)); */
 985:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 986:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 987:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ( ((q63_t)sum    )                                  )   ));
 988:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
 989:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 990:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
 991:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
 992:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SMUAD for M3 and M0 processors
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 37


 993:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
 994:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SMUAD(
 995:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
 996:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
 997:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
 998:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 999:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
1000:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
1001:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1002:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1003:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
1004:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SMUSD for M3 and M0 processors
1005:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1006:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SMUSD(
1007:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x,
1008:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t y)
1009:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1010:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) -
1011:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
1012:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
1013:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1014:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1015:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /*
1016:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief C custom defined SXTB16 for M3 and M0 processors
1017:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1018:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE uint32_t __SXTB16(
1019:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t x)
1020:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1021:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 24) >> 24) & (q31_t)0x0000FFFF) |
1022:..\CMSIS_DSP_LIB\Include/arm_math.h ****                        ((((q31_t)x <<  8) >>  8) & (q31_t)0xFFFF0000)  ));
1023:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
1024:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1025:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif /* defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
1026:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1027:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1028:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1029:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q7 FIR filter.
1030:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1031:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1032:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1033:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;        /**< number of filter coefficients in the filter. */
1034:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q7_t *pState;            /**< points to the state variable array. The array is of length numTap
1035:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q7_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.*
1036:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_instance_q7;
1037:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1038:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1039:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR filter.
1040:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1041:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1042:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1043:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;         /**< number of filter coefficients in the filter. */
1044:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pState;            /**< points to the state variable array. The array is of length numTa
1045:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.
1046:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_instance_q15;
1047:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1048:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1049:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR filter.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 38


1050:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1051:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1052:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1053:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;         /**< number of filter coefficients in the filter. */
1054:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pState;            /**< points to the state variable array. The array is of length numTa
1055:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.
1056:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_instance_q31;
1057:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1058:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1059:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR filter.
1060:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1061:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1062:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1063:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;     /**< number of filter coefficients in the filter. */
1064:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;    /**< points to the state variable array. The array is of length numTaps+b
1065:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTaps. */
1066:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_instance_f32;
1067:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1068:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1069:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1070:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q7 FIR filter.
1071:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q7 FIR filter structure.
1072:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1073:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1074:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1075:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1076:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_q7(
1077:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_instance_q7 * S,
1078:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
1079:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
1080:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1081:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1082:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1083:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1084:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q7 FIR filter.
1085:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q7 FIR structure.
1086:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1087:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1088:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1089:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed.
1090:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1091:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_init_q7(
1092:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_instance_q7 * S,
1093:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
1094:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pCoeffs,
1095:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pState,
1096:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1097:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1098:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1099:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1100:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q15 FIR filter.
1101:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR structure.
1102:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1103:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1104:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1105:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1106:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_q15(
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 39


1107:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_instance_q15 * S,
1108:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
1109:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
1110:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1111:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1112:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1113:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1114:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the fast Q15 FIR filter for Cortex-M3 and Cortex-M4.
1115:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR filter structure.
1116:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1117:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1118:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1119:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1120:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_fast_q15(
1121:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_instance_q15 * S,
1122:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
1123:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
1124:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1125:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1126:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1127:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1128:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q15 FIR filter.
1129:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR filter structure.
1130:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter. Must be even and greate
1131:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1132:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1133:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1134:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return The function returns ARM_MATH_SUCCESS if initialization was successful or ARM_MATH_ARG
1135:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>numTaps</code> is not a supported value.
1136:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1137:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_fir_init_q15(
1138:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_instance_q15 * S,
1139:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
1140:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pCoeffs,
1141:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState,
1142:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1143:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1144:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1145:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1146:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q31 FIR filter.
1147:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR filter structure.
1148:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1149:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1150:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1151:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1152:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_q31(
1153:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_instance_q31 * S,
1154:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
1155:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
1156:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1157:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1158:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1159:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1160:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the fast Q31 FIR filter for Cortex-M3 and Cortex-M4.
1161:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR structure.
1162:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1163:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 40


1164:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1165:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1166:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_fast_q31(
1167:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_instance_q31 * S,
1168:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
1169:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
1170:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1171:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1172:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1173:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1174:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q31 FIR filter.
1175:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR structure.
1176:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1177:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1178:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1179:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1180:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1181:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_init_q31(
1182:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_instance_q31 * S,
1183:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
1184:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pCoeffs,
1185:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pState,
1186:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1187:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1188:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1189:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1190:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point FIR filter.
1191:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR structure.
1192:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1193:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1194:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1195:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1196:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_f32(
1197:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_instance_f32 * S,
1198:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
1199:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
1200:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1201:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1202:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1203:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1204:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the floating-point FIR filter.
1205:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR filter structure.
1206:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1207:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1208:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1209:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1210:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1211:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_init_f32(
1212:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_instance_f32 * S,
1213:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
1214:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCoeffs,
1215:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState,
1216:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1217:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1218:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1219:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1220:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 Biquad cascade filter.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 41


1221:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1222:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1223:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1224:..\CMSIS_DSP_LIB\Include/arm_math.h ****     int8_t numStages;        /**< number of 2nd order stages in the filter.  Overall order is 2*num
1225:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pState;           /**< Points to the array of state coefficients.  The array is of lengt
1226:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of length 5*nu
1227:..\CMSIS_DSP_LIB\Include/arm_math.h ****     int8_t postShift;        /**< Additional shift, in bits, applied to each output sample. */
1228:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_biquad_casd_df1_inst_q15;
1229:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1230:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1231:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 Biquad cascade filter.
1232:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1233:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1234:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1235:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is 2*num
1236:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pState;           /**< Points to the array of state coefficients.  The array is of lengt
1237:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of length 5*nu
1238:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t postShift;       /**< Additional shift, in bits, applied to each output sample. */
1239:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_biquad_casd_df1_inst_q31;
1240:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1241:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1242:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point Biquad cascade filter.
1243:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1244:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1245:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1246:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is 2*num
1247:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;       /**< Points to the array of state coefficients.  The array is of lengt
1248:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCoeffs;      /**< Points to the array of coefficients.  The array is of length 5*nu
1249:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_biquad_casd_df1_inst_f32;
1250:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1251:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1252:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1253:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q15 Biquad cascade filter.
1254:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
1255:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1256:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1257:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1258:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1259:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df1_q15(
1260:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q15 * S,
1261:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
1262:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
1263:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1264:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1265:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1266:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1267:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q15 Biquad cascade filter.
1268:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 Biquad cascade structure.
1269:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1270:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1271:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1272:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficie
1273:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1274:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df1_init_q15(
1275:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_biquad_casd_df1_inst_q15 * S,
1276:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t numStages,
1277:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pCoeffs,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 42


1278:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState,
1279:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int8_t postShift);
1280:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1281:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1282:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1283:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Fast but less precise processing function for the Q15 Biquad cascade filter for Cortex-
1284:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
1285:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1286:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1287:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1288:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1289:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df1_fast_q15(
1290:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q15 * S,
1291:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
1292:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
1293:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1294:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1295:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1296:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1297:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q31 Biquad cascade filter
1298:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
1299:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1300:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1301:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1302:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1303:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df1_q31(
1304:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q31 * S,
1305:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
1306:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
1307:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1308:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1309:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1310:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1311:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Fast but less precise processing function for the Q31 Biquad cascade filter for Cortex-
1312:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
1313:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1314:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1315:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1316:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1317:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df1_fast_q31(
1318:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q31 * S,
1319:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
1320:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
1321:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1322:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1323:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1324:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1325:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q31 Biquad cascade filter.
1326:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 Biquad cascade structure.
1327:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1328:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1329:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1330:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficie
1331:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1332:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df1_init_q31(
1333:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_biquad_casd_df1_inst_q31 * S,
1334:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t numStages,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 43


1335:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pCoeffs,
1336:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pState,
1337:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int8_t postShift);
1338:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1339:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1340:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1341:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point Biquad cascade filter.
1342:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point Biquad cascade structure.
1343:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1344:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1345:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1346:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1347:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df1_f32(
1348:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_biquad_casd_df1_inst_f32 * S,
1349:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
1350:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
1351:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1352:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1353:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1354:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1355:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the floating-point Biquad cascade filter.
1356:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point Biquad cascade structure
1357:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1358:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1359:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1360:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1361:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df1_init_f32(
1362:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_biquad_casd_df1_inst_f32 * S,
1363:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t numStages,
1364:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCoeffs,
1365:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState);
1366:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1367:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1368:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1369:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point matrix structure.
1370:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1371:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1372:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1373:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1374:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1375:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pData;     /**< points to the data of the matrix. */
1376:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_matrix_instance_f32;
1377:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1378:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1379:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1380:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point matrix structure.
1381:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1382:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1383:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1384:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1385:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1386:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float64_t *pData;     /**< points to the data of the matrix. */
1387:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_matrix_instance_f64;
1388:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1389:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1390:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 matrix structure.
1391:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 44


1392:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1393:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1394:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1395:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1396:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pData;         /**< points to the data of the matrix. */
1397:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_matrix_instance_q15;
1398:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1399:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1400:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 matrix structure.
1401:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1402:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1403:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1404:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1405:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1406:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pData;         /**< points to the data of the matrix. */
1407:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_matrix_instance_q31;
1408:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1409:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1410:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1411:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point matrix addition.
1412:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1413:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1414:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1415:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1416:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1417:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1418:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_add_f32(
1419:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1420:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1421:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1422:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1423:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1424:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1425:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15 matrix addition.
1426:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]   pSrcA  points to the first input matrix structure
1427:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]   pSrcB  points to the second input matrix structure
1428:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out]  pDst   points to output matrix structure
1429:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1430:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1431:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1432:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_add_q15(
1433:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1434:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1435:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1436:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1437:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1438:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1439:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31 matrix addition.
1440:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1441:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1442:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1443:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1444:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1445:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1446:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_add_q31(
1447:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1448:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 45


1449:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1450:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1451:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1452:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1453:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point, complex, matrix multiplication.
1454:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1455:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1456:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1457:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1458:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1459:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1460:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_cmplx_mult_f32(
1461:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1462:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1463:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1464:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1465:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1466:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1467:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15, complex,  matrix multiplication.
1468:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1469:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1470:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1471:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1472:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1473:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1474:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_cmplx_mult_q15(
1475:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1476:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1477:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q15 * pDst,
1478:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch);
1479:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1480:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1481:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1482:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31, complex, matrix multiplication.
1483:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1484:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1485:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1486:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1487:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1488:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1489:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_cmplx_mult_q31(
1490:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1491:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1492:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1493:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1494:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1495:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1496:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point matrix transpose.
1497:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1498:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst  points to the output matrix
1499:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1500:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1501:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1502:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_trans_f32(
1503:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrc,
1504:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1505:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 46


1506:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1507:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1508:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15 matrix transpose.
1509:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1510:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst  points to the output matrix
1511:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1512:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1513:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1514:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_trans_q15(
1515:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrc,
1516:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1517:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1518:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1519:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1520:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31 matrix transpose.
1521:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1522:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst  points to the output matrix
1523:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1524:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1525:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1526:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_trans_q31(
1527:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrc,
1528:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1529:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1530:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1531:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1532:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point matrix multiplication
1533:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1534:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1535:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1536:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1537:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1538:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1539:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_mult_f32(
1540:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1541:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1542:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1543:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1544:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1545:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1546:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15 matrix multiplication
1547:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA   points to the first input matrix structure
1548:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB   points to the second input matrix structure
1549:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst    points to output matrix structure
1550:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pState  points to the array for storing intermediate results
1551:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1552:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1553:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1554:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_mult_q15(
1555:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1556:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1557:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q15 * pDst,
1558:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState);
1559:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1560:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1561:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1562:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 47


1563:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA   points to the first input matrix structure
1564:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB   points to the second input matrix structure
1565:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst    points to output matrix structure
1566:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pState  points to the array for storing intermediate results
1567:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1568:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1569:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1570:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_mult_fast_q15(
1571:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1572:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1573:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q15 * pDst,
1574:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState);
1575:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1576:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1577:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1578:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31 matrix multiplication
1579:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1580:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1581:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1582:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1583:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1584:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1585:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_mult_q31(
1586:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1587:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1588:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1589:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1590:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1591:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1592:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
1593:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1594:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1595:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1596:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1597:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1598:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1599:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_mult_fast_q31(
1600:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1601:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1602:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1603:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1604:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1605:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1606:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point matrix subtraction
1607:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1608:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1609:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1610:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1611:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1612:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1613:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_sub_f32(
1614:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1615:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1616:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1617:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1618:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1619:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 48


1620:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15 matrix subtraction
1621:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1622:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1623:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1624:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1625:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1626:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1627:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_sub_q15(
1628:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1629:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1630:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1631:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1632:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1633:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1634:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31 matrix subtraction
1635:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1636:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1637:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1638:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1639:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1640:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1641:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_sub_q31(
1642:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1643:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1644:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1645:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1646:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1647:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1648:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point matrix scaling.
1649:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc   points to the input matrix
1650:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  scale  scale factor
1651:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst   points to the output matrix
1652:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1653:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1654:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1655:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_scale_f32(
1656:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrc,
1657:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t scale,
1658:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1659:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1660:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1661:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1662:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15 matrix scaling.
1663:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to input matrix
1664:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale factor
1665:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
1666:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to output matrix
1667:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1668:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1669:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1670:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_scale_q15(
1671:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrc,
1672:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t scaleFract,
1673:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t shift,
1674:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1675:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1676:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 49


1677:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1678:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31 matrix scaling.
1679:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to input matrix
1680:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale factor
1681:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
1682:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to output matrix structure
1683:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return     The function returns either
1684:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1685:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1686:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_scale_q31(
1687:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrc,
1688:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t scaleFract,
1689:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t shift,
1690:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1691:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1692:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1693:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1694:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Q31 matrix initialization.
1695:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1696:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1697:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1698:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1699:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1700:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_mat_init_q31(
1701:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q31 * S,
1702:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t nRows,
1703:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t nColumns,
1704:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pData);
1705:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1706:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1707:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1708:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Q15 matrix initialization.
1709:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1710:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1711:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1712:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1713:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1714:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_mat_init_q15(
1715:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_q15 * S,
1716:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t nRows,
1717:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t nColumns,
1718:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pData);
1719:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1720:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1721:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1722:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Floating-point matrix initialization.
1723:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1724:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1725:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1726:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1727:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1728:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_mat_init_f32(
1729:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_f32 * S,
1730:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t nRows,
1731:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t nColumns,
1732:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pData);
1733:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 50


1734:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1735:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1736:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1737:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 PID Control.
1738:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1739:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1740:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1741:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t A0;           /**< The derived gain, A0 = Kp + Ki + Kd . */
1742:..\CMSIS_DSP_LIB\Include/arm_math.h **** #ifdef ARM_MATH_CM0_FAMILY
1743:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t A1;
1744:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t A2;
1745:..\CMSIS_DSP_LIB\Include/arm_math.h **** #else
1746:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t A1;           /**< The derived gain A1 = -Kp - 2Kd | Kd.*/
1747:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
1748:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t state[3];     /**< The state array of length 3. */
1749:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t Kp;           /**< The proportional gain. */
1750:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t Ki;           /**< The integral gain. */
1751:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t Kd;           /**< The derivative gain. */
1752:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_pid_instance_q15;
1753:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1754:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1755:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 PID Control.
1756:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1757:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1758:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1759:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t A0;            /**< The derived gain, A0 = Kp + Ki + Kd . */
1760:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t A1;            /**< The derived gain, A1 = -Kp - 2Kd. */
1761:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t A2;            /**< The derived gain, A2 = Kd . */
1762:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t state[3];      /**< The state array of length 3. */
1763:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t Kp;            /**< The proportional gain. */
1764:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t Ki;            /**< The integral gain. */
1765:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t Kd;            /**< The derivative gain. */
1766:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_pid_instance_q31;
1767:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1768:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1769:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point PID Control.
1770:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1771:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1772:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1773:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t A0;          /**< The derived gain, A0 = Kp + Ki + Kd . */
1774:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t A1;          /**< The derived gain, A1 = -Kp - 2Kd. */
1775:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t A2;          /**< The derived gain, A2 = Kd . */
1776:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t state[3];    /**< The state array of length 3. */
1777:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t Kp;          /**< The proportional gain. */
1778:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t Ki;          /**< The integral gain. */
1779:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t Kd;          /**< The derivative gain. */
1780:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_pid_instance_f32;
1781:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1782:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1783:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1784:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1785:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the floating-point PID Control.
1786:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S               points to an instance of the PID structure.
1787:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1788:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1789:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_pid_init_f32(
1790:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_pid_instance_f32 * S,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 51


1791:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t resetStateFlag);
1792:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1793:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1794:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1795:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Reset function for the floating-point PID Control.
1796:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S  is an instance of the floating-point PID Control structure
1797:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1798:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_pid_reset_f32(
1799:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_pid_instance_f32 * S);
1800:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1801:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1802:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1803:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q31 PID Control.
1804:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S               points to an instance of the Q15 PID structure.
1805:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1806:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1807:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_pid_init_q31(
1808:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_pid_instance_q31 * S,
1809:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t resetStateFlag);
1810:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1811:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1812:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1813:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Reset function for the Q31 PID Control.
1814:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S   points to an instance of the Q31 PID Control structure
1815:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1816:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1817:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_pid_reset_q31(
1818:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_pid_instance_q31 * S);
1819:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1820:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1821:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1822:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q15 PID Control.
1823:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S               points to an instance of the Q15 PID structure.
1824:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1825:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1826:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_pid_init_q15(
1827:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_pid_instance_q15 * S,
1828:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t resetStateFlag);
1829:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1830:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1831:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1832:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Reset function for the Q15 PID Control.
1833:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S  points to an instance of the q15 PID Control structure
1834:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1835:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_pid_reset_q15(
1836:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_pid_instance_q15 * S);
1837:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1838:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1839:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1840:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point Linear Interpolate function.
1841:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1842:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1843:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1844:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t nValues;           /**< nValues */
1845:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t x1;               /**< x1 */
1846:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t xSpacing;         /**< xSpacing */
1847:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pYData;          /**< pointer to the table of Y values */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 52


1848:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_linear_interp_instance_f32;
1849:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1850:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1851:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point bilinear interpolation function.
1852:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1853:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1854:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1855:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1856:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1857:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pData;   /**< points to the data table. */
1858:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_bilinear_interp_instance_f32;
1859:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1860:..\CMSIS_DSP_LIB\Include/arm_math.h ****    /**
1861:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 bilinear interpolation function.
1862:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1863:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1864:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1865:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1866:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1867:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pData;       /**< points to the data table. */
1868:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_bilinear_interp_instance_q31;
1869:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1870:..\CMSIS_DSP_LIB\Include/arm_math.h ****    /**
1871:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 bilinear interpolation function.
1872:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1873:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1874:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1875:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1876:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1877:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pData;       /**< points to the data table. */
1878:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_bilinear_interp_instance_q15;
1879:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1880:..\CMSIS_DSP_LIB\Include/arm_math.h ****    /**
1881:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 bilinear interpolation function.
1882:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1883:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1884:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1885:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1886:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1887:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q7_t *pData;        /**< points to the data table. */
1888:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_bilinear_interp_instance_q7;
1889:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1890:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1891:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1892:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q7 vector multiplication.
1893:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1894:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1895:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
1896:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1897:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1898:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_mult_q7(
1899:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcA,
1900:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcB,
1901:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
1902:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1903:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1904:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 53


1905:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1906:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15 vector multiplication.
1907:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1908:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1909:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
1910:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1911:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1912:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_mult_q15(
1913:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
1914:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
1915:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
1916:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1917:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1918:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1919:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1920:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31 vector multiplication.
1921:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1922:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1923:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
1924:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1925:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1926:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_mult_q31(
1927:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcA,
1928:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcB,
1929:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
1930:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1931:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1932:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1933:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1934:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point vector multiplication.
1935:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1936:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1937:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
1938:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1939:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1940:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_mult_f32(
1941:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcA,
1942:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcB,
1943:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
1944:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
1945:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1946:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1947:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1948:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 CFFT/CIFFT function.
1949:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1950:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1951:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1952:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
1953:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
1954:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
1955:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pTwiddle;                 /**< points to the Sin twiddle factor table. */
1956:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
1957:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
1958:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
1959:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_cfft_radix2_instance_q15;
1960:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1961:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 54


1962:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_cfft_radix2_init_q15(
1963:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_cfft_radix2_instance_q15 * S,
1964:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t fftLen,
1965:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t ifftFlag,
1966:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t bitReverseFlag);
1967:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1968:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
1969:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cfft_radix2_q15(
1970:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_cfft_radix2_instance_q15 * S,
1971:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc);
1972:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1973:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1974:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
1975:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 CFFT/CIFFT function.
1976:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
1977:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
1978:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
1979:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
1980:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
1981:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
1982:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pTwiddle;                 /**< points to the twiddle factor table. */
1983:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
1984:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
1985:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
1986:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_cfft_radix4_instance_q15;
1987:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1988:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
1989:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_cfft_radix4_init_q15(
1990:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_cfft_radix4_instance_q15 * S,
1991:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t fftLen,
1992:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t ifftFlag,
1993:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t bitReverseFlag);
1994:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
1995:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
1996:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cfft_radix4_q15(
1997:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_cfft_radix4_instance_q15 * S,
1998:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc);
1999:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2000:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2001:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Radix-2 Q31 CFFT/CIFFT function.
2002:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2003:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2004:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2005:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
2006:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
2007:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
2008:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pTwiddle;                 /**< points to the Twiddle factor table. */
2009:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2010:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
2011:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
2012:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_cfft_radix2_instance_q31;
2013:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2014:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
2015:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_cfft_radix2_init_q31(
2016:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_cfft_radix2_instance_q31 * S,
2017:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t fftLen,
2018:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t ifftFlag,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 55


2019:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t bitReverseFlag);
2020:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2021:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
2022:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cfft_radix2_q31(
2023:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_cfft_radix2_instance_q31 * S,
2024:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc);
2025:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2026:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2027:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 CFFT/CIFFT function.
2028:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2029:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2030:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2031:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
2032:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
2033:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
2034:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pTwiddle;                 /**< points to the twiddle factor table. */
2035:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2036:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
2037:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
2038:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_cfft_radix4_instance_q31;
2039:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2040:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
2041:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cfft_radix4_q31(
2042:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_cfft_radix4_instance_q31 * S,
2043:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc);
2044:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2045:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
2046:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_cfft_radix4_init_q31(
2047:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_cfft_radix4_instance_q31 * S,
2048:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t fftLen,
2049:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t ifftFlag,
2050:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t bitReverseFlag);
2051:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2052:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2053:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2054:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2055:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2056:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2057:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2058:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse (ifft
2059:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables (bitRe
2060:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
2061:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
2062:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports different si
2063:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t bitRevFactor;             /**< bit reversal modifier that supports different size FFTs
2064:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t onebyfftLen;             /**< value of 1/fftLen. */
2065:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_cfft_radix2_instance_f32;
2066:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2067:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
2068:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_cfft_radix2_init_f32(
2069:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_cfft_radix2_instance_f32 * S,
2070:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t fftLen,
2071:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t ifftFlag,
2072:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t bitReverseFlag);
2073:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2074:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
2075:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cfft_radix2_f32(
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 56


2076:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_cfft_radix2_instance_f32 * S,
2077:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc);
2078:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2079:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2080:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2081:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2082:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2083:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2084:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2085:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse (ifft
2086:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables (bitRe
2087:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
2088:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
2089:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports different si
2090:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t bitRevFactor;             /**< bit reversal modifier that supports different size FFTs
2091:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t onebyfftLen;             /**< value of 1/fftLen. */
2092:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_cfft_radix4_instance_f32;
2093:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2094:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
2095:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_cfft_radix4_init_f32(
2096:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_cfft_radix4_instance_f32 * S,
2097:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t fftLen,
2098:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t ifftFlag,
2099:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t bitReverseFlag);
2100:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2101:..\CMSIS_DSP_LIB\Include/arm_math.h **** /* Deprecated */
2102:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cfft_radix4_f32(
2103:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_cfft_radix4_instance_f32 * S,
2104:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc);
2105:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2106:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2107:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the fixed-point CFFT/CIFFT function.
2108:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2109:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2110:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2111:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2112:..\CMSIS_DSP_LIB\Include/arm_math.h ****     const q15_t *pTwiddle;             /**< points to the Twiddle factor table. */
2113:..\CMSIS_DSP_LIB\Include/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2114:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2115:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_cfft_instance_q15;
2116:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2117:..\CMSIS_DSP_LIB\Include/arm_math.h **** void arm_cfft_q15(
2118:..\CMSIS_DSP_LIB\Include/arm_math.h ****     const arm_cfft_instance_q15 * S,
2119:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t * p1,
2120:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlag,
2121:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlag);
2122:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2123:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2124:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the fixed-point CFFT/CIFFT function.
2125:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2126:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2127:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2128:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2129:..\CMSIS_DSP_LIB\Include/arm_math.h ****     const q31_t *pTwiddle;             /**< points to the Twiddle factor table. */
2130:..\CMSIS_DSP_LIB\Include/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2131:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2132:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_cfft_instance_q31;
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 57


2133:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2134:..\CMSIS_DSP_LIB\Include/arm_math.h **** void arm_cfft_q31(
2135:..\CMSIS_DSP_LIB\Include/arm_math.h ****     const arm_cfft_instance_q31 * S,
2136:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t * p1,
2137:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlag,
2138:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlag);
2139:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2140:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2141:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2142:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2143:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2144:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2145:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2146:..\CMSIS_DSP_LIB\Include/arm_math.h ****     const float32_t *pTwiddle;         /**< points to the Twiddle factor table. */
2147:..\CMSIS_DSP_LIB\Include/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2148:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2149:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_cfft_instance_f32;
2150:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2151:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cfft_f32(
2152:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_cfft_instance_f32 * S,
2153:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * p1,
2154:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t ifftFlag,
2155:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t bitReverseFlag);
2156:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2157:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2158:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 RFFT/RIFFT function.
2159:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2160:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2161:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2162:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t fftLenReal;                      /**< length of the real FFT. */
2163:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlagR;                        /**< flag that selects forward (ifftFlagR=0) or inver
2164:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlagR;                  /**< flag that enables (bitReverseFlagR=1) or disable
2165:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t twidCoefRModifier;               /**< twiddle coefficient modifier that supports diffe
2166:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pTwiddleAReal;                     /**< points to the real twiddle factor table. */
2167:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pTwiddleBReal;                     /**< points to the imag twiddle factor table. */
2168:..\CMSIS_DSP_LIB\Include/arm_math.h ****     const arm_cfft_instance_q15 *pCfft;       /**< points to the complex FFT instance. */
2169:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_rfft_instance_q15;
2170:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2171:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_rfft_init_q15(
2172:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_rfft_instance_q15 * S,
2173:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t fftLenReal,
2174:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t ifftFlagR,
2175:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t bitReverseFlag);
2176:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2177:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_rfft_q15(
2178:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_rfft_instance_q15 * S,
2179:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
2180:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst);
2181:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2182:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2183:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 RFFT/RIFFT function.
2184:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2185:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2186:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2187:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t fftLenReal;                        /**< length of the real FFT. */
2188:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) or inv
2189:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or disab
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 58


2190:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t twidCoefRModifier;                 /**< twiddle coefficient modifier that supports dif
2191:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pTwiddleAReal;                       /**< points to the real twiddle factor table. */
2192:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pTwiddleBReal;                       /**< points to the imag twiddle factor table. */
2193:..\CMSIS_DSP_LIB\Include/arm_math.h ****     const arm_cfft_instance_q31 *pCfft;         /**< points to the complex FFT instance. */
2194:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_rfft_instance_q31;
2195:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2196:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_rfft_init_q31(
2197:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_rfft_instance_q31 * S,
2198:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t fftLenReal,
2199:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t ifftFlagR,
2200:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t bitReverseFlag);
2201:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2202:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_rfft_q31(
2203:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_rfft_instance_q31 * S,
2204:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
2205:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst);
2206:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2207:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2208:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point RFFT/RIFFT function.
2209:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2210:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2211:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2212:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t fftLenReal;                        /**< length of the real FFT. */
2213:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLenBy2;                         /**< length of the complex FFT. */
2214:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) or inv
2215:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or disab
2216:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t twidCoefRModifier;                     /**< twiddle coefficient modifier that supports
2217:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pTwiddleAReal;                   /**< points to the real twiddle factor table. */
2218:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pTwiddleBReal;                   /**< points to the imag twiddle factor table. */
2219:..\CMSIS_DSP_LIB\Include/arm_math.h ****     arm_cfft_radix4_instance_f32 *pCfft;        /**< points to the complex FFT instance. */
2220:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_rfft_instance_f32;
2221:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2222:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_rfft_init_f32(
2223:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_rfft_instance_f32 * S,
2224:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_cfft_radix4_instance_f32 * S_CFFT,
2225:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t fftLenReal,
2226:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t ifftFlagR,
2227:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t bitReverseFlag);
2228:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2229:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_rfft_f32(
2230:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_rfft_instance_f32 * S,
2231:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
2232:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst);
2233:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2234:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2235:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point RFFT/RIFFT function.
2236:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2237:..\CMSIS_DSP_LIB\Include/arm_math.h **** typedef struct
2238:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2239:..\CMSIS_DSP_LIB\Include/arm_math.h ****     arm_cfft_instance_f32 Sint;      /**< Internal CFFT structure. */
2240:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t fftLenRFFT;             /**< length of the real sequence */
2241:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t * pTwiddleRFFT;        /**< Twiddle factors real stage  */
2242:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_rfft_fast_instance_f32 ;
2243:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2244:..\CMSIS_DSP_LIB\Include/arm_math.h **** arm_status arm_rfft_fast_init_f32 (
2245:..\CMSIS_DSP_LIB\Include/arm_math.h ****    arm_rfft_fast_instance_f32 * S,
2246:..\CMSIS_DSP_LIB\Include/arm_math.h ****    uint16_t fftLen);
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 59


2247:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2248:..\CMSIS_DSP_LIB\Include/arm_math.h **** void arm_rfft_fast_f32(
2249:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_rfft_fast_instance_f32 * S,
2250:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * p, float32_t * pOut,
2251:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t ifftFlag);
2252:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2253:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2254:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point DCT4/IDCT4 function.
2255:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2256:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2257:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2258:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2259:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2260:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t normalize;                 /**< normalizing factor. */
2261:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pTwiddle;                 /**< points to the twiddle factor table. */
2262:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCosFactor;               /**< points to the cosFactor table. */
2263:..\CMSIS_DSP_LIB\Include/arm_math.h ****     arm_rfft_instance_f32 *pRfft;        /**< points to the real FFT instance. */
2264:..\CMSIS_DSP_LIB\Include/arm_math.h ****     arm_cfft_radix4_instance_f32 *pCfft; /**< points to the complex FFT instance. */
2265:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_dct4_instance_f32;
2266:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2267:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2268:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2269:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the floating-point DCT4/IDCT4.
2270:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of floating-point DCT4/IDCT4 structure.
2271:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of floating-point RFFT/RIFFT structure.
2272:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of floating-point CFFT/CIFFT structure.
2273:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     N          length of the DCT4.
2274:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2275:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2276:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2277:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2278:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_dct4_init_f32(
2279:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_dct4_instance_f32 * S,
2280:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_rfft_instance_f32 * S_RFFT,
2281:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_cfft_radix4_instance_f32 * S_CFFT,
2282:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t N,
2283:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t Nby2,
2284:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t normalize);
2285:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2286:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2287:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2288:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point DCT4/IDCT4.
2289:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     S              points to an instance of the floating-point DCT4/IDCT4 structure
2290:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState         points to state buffer.
2291:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2292:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2293:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_dct4_f32(
2294:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_dct4_instance_f32 * S,
2295:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState,
2296:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pInlineBuffer);
2297:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2298:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2299:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2300:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 DCT4/IDCT4 function.
2301:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2302:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2303:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 60


2304:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2305:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2306:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t normalize;                     /**< normalizing factor. */
2307:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pTwiddle;                     /**< points to the twiddle factor table. */
2308:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pCosFactor;                   /**< points to the cosFactor table. */
2309:..\CMSIS_DSP_LIB\Include/arm_math.h ****     arm_rfft_instance_q31 *pRfft;        /**< points to the real FFT instance. */
2310:..\CMSIS_DSP_LIB\Include/arm_math.h ****     arm_cfft_radix4_instance_q31 *pCfft; /**< points to the complex FFT instance. */
2311:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_dct4_instance_q31;
2312:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2313:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2314:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2315:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q31 DCT4/IDCT4.
2316:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of Q31 DCT4/IDCT4 structure.
2317:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of Q31 RFFT/RIFFT structure
2318:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of Q31 CFFT/CIFFT structure
2319:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     N          length of the DCT4.
2320:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2321:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2322:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2323:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2324:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_dct4_init_q31(
2325:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_dct4_instance_q31 * S,
2326:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_rfft_instance_q31 * S_RFFT,
2327:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_cfft_radix4_instance_q31 * S_CFFT,
2328:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t N,
2329:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t Nby2,
2330:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t normalize);
2331:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2332:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2333:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2334:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q31 DCT4/IDCT4.
2335:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     S              points to an instance of the Q31 DCT4 structure.
2336:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState         points to state buffer.
2337:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2338:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2339:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_dct4_q31(
2340:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_dct4_instance_q31 * S,
2341:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pState,
2342:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pInlineBuffer);
2343:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2344:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2345:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2346:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 DCT4/IDCT4 function.
2347:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2348:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
2349:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
2350:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2351:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2352:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t normalize;                     /**< normalizing factor. */
2353:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pTwiddle;                     /**< points to the twiddle factor table. */
2354:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pCosFactor;                   /**< points to the cosFactor table. */
2355:..\CMSIS_DSP_LIB\Include/arm_math.h ****     arm_rfft_instance_q15 *pRfft;        /**< points to the real FFT instance. */
2356:..\CMSIS_DSP_LIB\Include/arm_math.h ****     arm_cfft_radix4_instance_q15 *pCfft; /**< points to the complex FFT instance. */
2357:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_dct4_instance_q15;
2358:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2359:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2360:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 61


2361:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q15 DCT4/IDCT4.
2362:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of Q15 DCT4/IDCT4 structure.
2363:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of Q15 RFFT/RIFFT structure.
2364:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of Q15 CFFT/CIFFT structure.
2365:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     N          length of the DCT4.
2366:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2367:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2368:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2369:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2370:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_dct4_init_q15(
2371:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_dct4_instance_q15 * S,
2372:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_rfft_instance_q15 * S_RFFT,
2373:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_cfft_radix4_instance_q15 * S_CFFT,
2374:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t N,
2375:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t Nby2,
2376:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t normalize);
2377:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2378:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2379:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2380:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q15 DCT4/IDCT4.
2381:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     S              points to an instance of the Q15 DCT4 structure.
2382:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState         points to state buffer.
2383:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2384:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2385:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_dct4_q15(
2386:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_dct4_instance_q15 * S,
2387:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState,
2388:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pInlineBuffer);
2389:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2390:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2391:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2392:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point vector addition.
2393:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2394:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2395:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2396:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2397:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2398:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_add_f32(
2399:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcA,
2400:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcB,
2401:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
2402:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2403:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2404:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2405:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2406:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q7 vector addition.
2407:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2408:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2409:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2410:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2411:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2412:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_add_q7(
2413:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcA,
2414:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcB,
2415:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
2416:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2417:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 62


2418:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2419:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2420:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15 vector addition.
2421:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2422:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2423:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2424:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2425:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2426:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_add_q15(
2427:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
2428:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
2429:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
2430:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2431:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2432:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2433:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2434:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31 vector addition.
2435:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2436:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2437:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2438:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2439:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2440:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_add_q31(
2441:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcA,
2442:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcB,
2443:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
2444:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2445:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2446:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2447:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2448:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point vector subtraction.
2449:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2450:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2451:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2452:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2453:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2454:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_sub_f32(
2455:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcA,
2456:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcB,
2457:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
2458:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2459:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2460:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2461:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2462:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q7 vector subtraction.
2463:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2464:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2465:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2466:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2467:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2468:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_sub_q7(
2469:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcA,
2470:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcB,
2471:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
2472:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2473:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2474:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 63


2475:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2476:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15 vector subtraction.
2477:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2478:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2479:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2480:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2481:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2482:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_sub_q15(
2483:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
2484:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
2485:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
2486:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2487:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2488:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2489:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2490:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31 vector subtraction.
2491:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2492:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2493:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2494:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2495:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2496:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_sub_q31(
2497:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcA,
2498:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcB,
2499:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
2500:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2501:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2502:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2503:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2504:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Multiplies a floating-point vector by a scalar.
2505:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2506:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  scale      scale factor to be applied
2507:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2508:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2509:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2510:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_scale_f32(
2511:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
2512:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t scale,
2513:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
2514:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2515:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2516:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2517:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2518:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Multiplies a Q7 vector by a scalar.
2519:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2520:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2521:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2522:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the output vector
2523:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2524:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2525:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_scale_q7(
2526:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
2527:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t scaleFract,
2528:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int8_t shift,
2529:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
2530:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2531:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 64


2532:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2533:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2534:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Multiplies a Q15 vector by a scalar.
2535:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2536:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2537:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2538:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the output vector
2539:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2540:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2541:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_scale_q15(
2542:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
2543:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t scaleFract,
2544:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int8_t shift,
2545:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
2546:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2547:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2548:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2549:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2550:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Multiplies a Q31 vector by a scalar.
2551:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2552:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2553:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2554:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the output vector
2555:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2556:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2557:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_scale_q31(
2558:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
2559:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t scaleFract,
2560:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int8_t shift,
2561:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
2562:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2563:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2564:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2565:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2566:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q7 vector absolute value.
2567:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2568:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2569:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2570:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2571:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_abs_q7(
2572:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
2573:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
2574:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2575:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2576:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2577:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2578:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point vector absolute value.
2579:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2580:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2581:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2582:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2583:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_abs_f32(
2584:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
2585:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
2586:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2587:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2588:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 65


2589:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2590:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q15 vector absolute value.
2591:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2592:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2593:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2594:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2595:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_abs_q15(
2596:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
2597:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
2598:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2599:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2600:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2601:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2602:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Q31 vector absolute value.
2603:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2604:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2605:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2606:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2607:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_abs_q31(
2608:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
2609:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
2610:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2611:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2612:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2613:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2614:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Dot product of floating-point vectors.
2615:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2616:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2617:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2618:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] result     output result returned here
2619:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2620:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_dot_prod_f32(
2621:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcA,
2622:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcB,
2623:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize,
2624:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * result);
2625:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2626:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2627:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2628:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Dot product of Q7 vectors.
2629:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2630:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2631:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2632:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] result     output result returned here
2633:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2634:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_dot_prod_q7(
2635:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcA,
2636:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcB,
2637:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize,
2638:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * result);
2639:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2640:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2641:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2642:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Dot product of Q15 vectors.
2643:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2644:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2645:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 66


2646:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] result     output result returned here
2647:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2648:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_dot_prod_q15(
2649:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
2650:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
2651:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize,
2652:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q63_t * result);
2653:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2654:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2655:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2656:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Dot product of Q31 vectors.
2657:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2658:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2659:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2660:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] result     output result returned here
2661:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2662:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_dot_prod_q31(
2663:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcA,
2664:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcB,
2665:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize,
2666:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q63_t * result);
2667:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2668:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2669:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2670:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Shifts the elements of a Q7 vector a specified number of bits.
2671:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2672:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2673:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2674:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2675:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2676:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_shift_q7(
2677:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
2678:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int8_t shiftBits,
2679:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
2680:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2681:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2682:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2683:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2684:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Shifts the elements of a Q15 vector a specified number of bits.
2685:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2686:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2687:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2688:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2689:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2690:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_shift_q15(
2691:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
2692:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int8_t shiftBits,
2693:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
2694:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2695:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2696:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2697:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2698:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Shifts the elements of a Q31 vector a specified number of bits.
2699:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2700:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2701:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2702:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 67


2703:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2704:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_shift_q31(
2705:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
2706:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int8_t shiftBits,
2707:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
2708:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2709:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2710:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2711:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2712:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Adds a constant offset to a floating-point vector.
2713:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2714:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2715:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2716:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2717:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2718:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_offset_f32(
2719:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
2720:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t offset,
2721:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
2722:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2723:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2724:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2725:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2726:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Adds a constant offset to a Q7 vector.
2727:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2728:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2729:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2730:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2731:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2732:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_offset_q7(
2733:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
2734:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t offset,
2735:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
2736:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2737:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2738:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2739:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2740:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Adds a constant offset to a Q15 vector.
2741:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2742:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2743:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2744:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2745:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2746:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_offset_q15(
2747:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
2748:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t offset,
2749:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
2750:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2751:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2752:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2753:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2754:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Adds a constant offset to a Q31 vector.
2755:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2756:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2757:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2758:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2759:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 68


2760:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_offset_q31(
2761:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
2762:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t offset,
2763:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
2764:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2765:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2766:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2767:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2768:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Negates the elements of a floating-point vector.
2769:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2770:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2771:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2772:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2773:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_negate_f32(
2774:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
2775:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
2776:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2777:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2778:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2779:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2780:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Negates the elements of a Q7 vector.
2781:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2782:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2783:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2784:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2785:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_negate_q7(
2786:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
2787:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
2788:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2789:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2790:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2791:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2792:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Negates the elements of a Q15 vector.
2793:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2794:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2795:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2796:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2797:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_negate_q15(
2798:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
2799:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
2800:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2801:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2802:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2803:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2804:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Negates the elements of a Q31 vector.
2805:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2806:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2807:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2808:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2809:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_negate_q31(
2810:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
2811:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
2812:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2813:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2814:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2815:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2816:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Copies the elements of a floating-point vector.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 69


2817:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2818:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       output pointer
2819:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2820:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2821:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_copy_f32(
2822:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
2823:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
2824:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2825:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2826:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2827:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2828:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Copies the elements of a Q7 vector.
2829:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2830:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       output pointer
2831:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2832:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2833:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_copy_q7(
2834:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
2835:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
2836:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2837:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2838:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2839:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2840:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Copies the elements of a Q15 vector.
2841:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2842:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       output pointer
2843:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2844:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2845:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_copy_q15(
2846:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
2847:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
2848:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2849:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2850:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2851:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2852:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Copies the elements of a Q31 vector.
2853:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2854:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       output pointer
2855:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2856:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2857:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_copy_q31(
2858:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
2859:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
2860:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2861:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2862:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2863:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2864:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Fills a constant value into a floating-point vector.
2865:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  value      input value to be filled
2866:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       output pointer
2867:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2868:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2869:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fill_f32(
2870:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t value,
2871:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
2872:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2873:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 70


2874:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2875:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2876:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Fills a constant value into a Q7 vector.
2877:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  value      input value to be filled
2878:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       output pointer
2879:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2880:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2881:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fill_q7(
2882:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t value,
2883:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
2884:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2885:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2886:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2887:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2888:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Fills a constant value into a Q15 vector.
2889:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  value      input value to be filled
2890:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       output pointer
2891:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2892:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2893:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fill_q15(
2894:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t value,
2895:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
2896:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2897:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2898:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2899:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2900:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Fills a constant value into a Q31 vector.
2901:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  value      input value to be filled
2902:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       output pointer
2903:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2904:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2905:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fill_q31(
2906:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t value,
2907:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
2908:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
2909:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2910:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2911:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
2912:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @brief Convolution of floating-point sequences.
2913:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in]  pSrcA    points to the first input sequence.
2914:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in]  srcALen  length of the first input sequence.
2915:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in]  pSrcB    points to the second input sequence.
2916:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in]  srcBLen  length of the second input sequence.
2917:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[out] pDst     points to the location where the output result is written.  Length srcALen+
2918:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
2919:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_conv_f32(
2920:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcA,
2921:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
2922:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcB,
2923:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
2924:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst);
2925:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2926:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2927:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2928:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Convolution of Q15 sequences.
2929:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
2930:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 71


2931:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
2932:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
2933:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
2934:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen,
2935:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
2936:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2937:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_conv_opt_q15(
2938:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
2939:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
2940:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
2941:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
2942:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
2943:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch1,
2944:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch2);
2945:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2946:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2947:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
2948:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @brief Convolution of Q15 sequences.
2949:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in]  pSrcA    points to the first input sequence.
2950:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in]  srcALen  length of the first input sequence.
2951:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in]  pSrcB    points to the second input sequence.
2952:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in]  srcBLen  length of the second input sequence.
2953:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[out] pDst     points to the location where the output result is written.  Length srcALen+
2954:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
2955:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_conv_q15(
2956:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
2957:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
2958:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
2959:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
2960:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst);
2961:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2962:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2963:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2964:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
2965:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
2966:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
2967:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
2968:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
2969:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
2970:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2971:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_conv_fast_q15(
2972:..\CMSIS_DSP_LIB\Include/arm_math.h ****           q15_t * pSrcA,
2973:..\CMSIS_DSP_LIB\Include/arm_math.h ****           uint32_t srcALen,
2974:..\CMSIS_DSP_LIB\Include/arm_math.h ****           q15_t * pSrcB,
2975:..\CMSIS_DSP_LIB\Include/arm_math.h ****           uint32_t srcBLen,
2976:..\CMSIS_DSP_LIB\Include/arm_math.h ****           q15_t * pDst);
2977:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2978:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2979:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
2980:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
2981:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
2982:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
2983:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
2984:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
2985:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
2986:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen,
2987:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 72


2988:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
2989:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_conv_fast_opt_q15(
2990:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
2991:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
2992:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
2993:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
2994:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
2995:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch1,
2996:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch2);
2997:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2998:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
2999:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3000:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Convolution of Q31 sequences.
3001:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3002:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3003:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3004:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3005:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3006:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3007:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_conv_q31(
3008:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcA,
3009:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3010:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcB,
3011:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3012:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst);
3013:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3014:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3015:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3016:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
3017:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3018:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3019:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3020:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3021:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3022:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3023:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_conv_fast_q31(
3024:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcA,
3025:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3026:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcB,
3027:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3028:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst);
3029:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3030:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3031:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /**
3032:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Convolution of Q7 sequences.
3033:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
3034:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
3035:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
3036:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
3037:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
3038:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
3039:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
3040:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3041:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_conv_opt_q7(
3042:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcA,
3043:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3044:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcB,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 73


3045:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3046:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
3047:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch1,
3048:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch2);
3049:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3050:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3051:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3052:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Convolution of Q7 sequences.
3053:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3054:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3055:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3056:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3057:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3058:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3059:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_conv_q7(
3060:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcA,
3061:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3062:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcB,
3063:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3064:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst);
3065:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3066:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3067:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3068:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Partial convolution of floating-point sequences.
3069:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3070:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3071:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3072:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3073:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3074:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3075:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3076:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3077:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3078:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_conv_partial_f32(
3079:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcA,
3080:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3081:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcB,
3082:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3083:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
3084:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t firstIndex,
3085:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numPoints);
3086:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3087:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3088:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3089:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences.
3090:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3091:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3092:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3093:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3094:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3095:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3096:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3097:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen
3098:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
3099:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3100:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3101:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_conv_partial_opt_q15(
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 74


3102:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
3103:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3104:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
3105:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3106:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
3107:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t firstIndex,
3108:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numPoints,
3109:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch1,
3110:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch2);
3111:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3112:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3113:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3114:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences.
3115:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3116:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3117:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3118:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3119:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3120:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3121:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3122:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3123:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3124:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_conv_partial_q15(
3125:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
3126:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3127:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
3128:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3129:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
3130:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t firstIndex,
3131:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numPoints);
3132:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3133:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3134:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3135:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3136:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3137:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3138:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3139:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3140:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3141:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3142:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3143:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3144:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3145:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_conv_partial_fast_q15(
3146:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
3147:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3148:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
3149:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3150:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
3151:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t firstIndex,
3152:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numPoints);
3153:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3154:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3155:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3156:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3157:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3158:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 75


3159:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3160:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3161:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3162:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3163:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3164:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen
3165:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
3166:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3167:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3168:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_conv_partial_fast_opt_q15(
3169:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
3170:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3171:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
3172:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3173:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
3174:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t firstIndex,
3175:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numPoints,
3176:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch1,
3177:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch2);
3178:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3179:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3180:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3181:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Partial convolution of Q31 sequences.
3182:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3183:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3184:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3185:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3186:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3187:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3188:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3189:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3190:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3191:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_conv_partial_q31(
3192:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcA,
3193:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3194:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcB,
3195:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3196:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
3197:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t firstIndex,
3198:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numPoints);
3199:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3200:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3201:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3202:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Partial convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
3203:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3204:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3205:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3206:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3207:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3208:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3209:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3210:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3211:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3212:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_conv_partial_fast_q31(
3213:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcA,
3214:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3215:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcB,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 76


3216:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3217:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
3218:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t firstIndex,
3219:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numPoints);
3220:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3221:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3222:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3223:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Partial convolution of Q7 sequences
3224:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3225:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3226:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3227:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3228:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3229:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3230:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3231:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) 
3232:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen)
3233:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3234:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3235:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_conv_partial_opt_q7(
3236:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcA,
3237:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3238:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcB,
3239:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3240:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
3241:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t firstIndex,
3242:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numPoints,
3243:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch1,
3244:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch2);
3245:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3246:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3247:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
3248:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Partial convolution of Q7 sequences.
3249:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3250:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3251:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3252:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3253:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3254:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3255:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3256:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3257:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3258:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_conv_partial_q7(
3259:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcA,
3260:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
3261:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcB,
3262:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
3263:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
3264:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t firstIndex,
3265:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numPoints);
3266:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3267:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3268:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3269:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR decimator.
3270:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3271:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3272:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 77


3273:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3274:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3275:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pCoeffs;             /**< points to the coefficient array. The array is of length numTap
3276:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pState;              /**< points to the state variable array. The array is of length num
3277:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_decimate_instance_q15;
3278:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3279:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3280:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR decimator.
3281:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3282:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3283:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3284:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3285:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3286:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pCoeffs;             /**< points to the coefficient array. The array is of length numTap
3287:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pState;              /**< points to the state variable array. The array is of length num
3288:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_decimate_instance_q31;
3289:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3290:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3291:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR decimator.
3292:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3293:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3294:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3295:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3296:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3297:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCoeffs;         /**< points to the coefficient array. The array is of length numTap
3298:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;          /**< points to the state variable array. The array is of length num
3299:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_decimate_instance_f32;
3300:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3301:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3302:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3303:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point FIR decimator.
3304:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR decimator structure.
3305:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3306:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3307:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3308:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3309:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_decimate_f32(
3310:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_decimate_instance_f32 * S,
3311:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
3312:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
3313:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3314:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3315:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3316:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3317:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the floating-point FIR decimator.
3318:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR decimator structure.
3319:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3320:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     M          decimation factor.
3321:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3322:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3323:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3324:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3325:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3326:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3327:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_fir_decimate_init_f32(
3328:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_decimate_instance_f32 * S,
3329:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 78


3330:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t M,
3331:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCoeffs,
3332:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState,
3333:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3334:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3335:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3336:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3337:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q15 FIR decimator.
3338:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
3339:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3340:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3341:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3342:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3343:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_decimate_q15(
3344:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_decimate_instance_q15 * S,
3345:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
3346:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
3347:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3348:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3349:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3350:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3351:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q15 FIR decimator (fast variant) for Cortex-M3 and Cortex-M
3352:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
3353:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3354:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3355:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3356:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3357:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_decimate_fast_q15(
3358:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_decimate_instance_q15 * S,
3359:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
3360:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
3361:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3362:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3363:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3364:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3365:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q15 FIR decimator.
3366:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR decimator structure.
3367:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3368:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     M          decimation factor.
3369:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3370:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3371:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3372:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3373:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3374:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3375:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_fir_decimate_init_q15(
3376:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_decimate_instance_q15 * S,
3377:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
3378:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t M,
3379:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pCoeffs,
3380:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState,
3381:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3382:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3383:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3384:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3385:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q31 FIR decimator.
3386:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S     points to an instance of the Q31 FIR decimator structure.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 79


3387:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc  points to the block of input data.
3388:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst  points to the block of output data
3389:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] blockSize number of input samples to process per call.
3390:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3391:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_decimate_q31(
3392:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_decimate_instance_q31 * S,
3393:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
3394:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
3395:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3396:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3397:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3398:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q31 FIR decimator (fast variant) for Cortex-M3 and Cortex-M
3399:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR decimator structure.
3400:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3401:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3402:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3403:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3404:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_decimate_fast_q31(
3405:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_decimate_instance_q31 * S,
3406:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
3407:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
3408:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3409:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3410:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3411:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3412:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q31 FIR decimator.
3413:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR decimator structure.
3414:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3415:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     M          decimation factor.
3416:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3417:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3418:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3419:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3420:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3421:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3422:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_fir_decimate_init_q31(
3423:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_decimate_instance_q31 * S,
3424:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
3425:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t M,
3426:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pCoeffs,
3427:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pState,
3428:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3429:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3430:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3431:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3432:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR interpolator.
3433:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3434:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3435:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3436:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t L;                      /**< upsample factor. */
3437:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t phaseLength;           /**< length of each polyphase filter component. */
3438:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pCoeffs;                 /**< points to the coefficient array. The array is of length L*
3439:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pState;                  /**< points to the state variable array. The array is of length
3440:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_interpolate_instance_q15;
3441:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3442:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3443:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR interpolator.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 80


3444:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3445:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3446:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3447:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t L;                      /**< upsample factor. */
3448:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t phaseLength;           /**< length of each polyphase filter component. */
3449:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pCoeffs;                 /**< points to the coefficient array. The array is of length L*
3450:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pState;                  /**< points to the state variable array. The array is of length
3451:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_interpolate_instance_q31;
3452:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3453:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3454:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR interpolator.
3455:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3456:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3457:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3458:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t L;                     /**< upsample factor. */
3459:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t phaseLength;          /**< length of each polyphase filter component. */
3460:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCoeffs;            /**< points to the coefficient array. The array is of length L*p
3461:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;             /**< points to the state variable array. The array is of length 
3462:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_interpolate_instance_f32;
3463:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3464:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3465:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3466:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q15 FIR interpolator.
3467:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
3468:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3469:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3470:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3471:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3472:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_interpolate_q15(
3473:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_interpolate_instance_q15 * S,
3474:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
3475:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
3476:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3477:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3478:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3479:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3480:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q15 FIR interpolator.
3481:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR interpolator structure.
3482:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     L          upsample factor.
3483:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3484:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3485:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3486:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3487:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3488:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3489:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3490:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_fir_interpolate_init_q15(
3491:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_interpolate_instance_q15 * S,
3492:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t L,
3493:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
3494:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pCoeffs,
3495:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState,
3496:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3497:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3498:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3499:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3500:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q31 FIR interpolator.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 81


3501:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
3502:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3503:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3504:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3505:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3506:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_interpolate_q31(
3507:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_interpolate_instance_q31 * S,
3508:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
3509:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
3510:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3511:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3512:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3513:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3514:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q31 FIR interpolator.
3515:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR interpolator structure.
3516:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     L          upsample factor.
3517:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3518:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3519:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3520:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3521:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3522:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3523:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3524:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_fir_interpolate_init_q31(
3525:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_interpolate_instance_q31 * S,
3526:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t L,
3527:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
3528:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pCoeffs,
3529:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pState,
3530:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3531:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3532:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3533:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3534:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point FIR interpolator.
3535:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR interpolator structure.
3536:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3537:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3538:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3539:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3540:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_interpolate_f32(
3541:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_interpolate_instance_f32 * S,
3542:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
3543:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
3544:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3545:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3546:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3547:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3548:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the floating-point FIR interpolator.
3549:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR interpolator structu
3550:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     L          upsample factor.
3551:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3552:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3553:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3554:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3555:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3556:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3557:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 82


3558:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_fir_interpolate_init_f32(
3559:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_interpolate_instance_f32 * S,
3560:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t L,
3561:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
3562:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCoeffs,
3563:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState,
3564:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3565:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3566:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3567:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3568:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the high precision Q31 Biquad cascade filter.
3569:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3570:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3571:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3572:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t numStages;       /**< number of 2nd order stages in the filter.  Overall order is 2*num
3573:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q63_t *pState;           /**< points to the array of state coefficients.  The array is of lengt
3574:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pCoeffs;          /**< points to the array of coefficients.  The array is of length 5*nu
3575:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t postShift;       /**< additional shift, in bits, applied to each output sample. */
3576:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_biquad_cas_df1_32x64_ins_q31;
3577:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3578:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3579:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3580:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the high precision Q31 Biquad cascade filter s
3581:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3582:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3583:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3584:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3585:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cas_df1_32x64_q31(
3586:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_biquad_cas_df1_32x64_ins_q31 * S,
3587:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
3588:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
3589:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3590:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3591:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3592:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3593:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the high precision Q31 Biquad cascade filte
3594:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3595:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3596:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3597:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     postShift  shift to be applied to the output. Varies according to the coefficie
3598:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3599:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cas_df1_32x64_init_q31(
3600:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_biquad_cas_df1_32x64_ins_q31 * S,
3601:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t numStages,
3602:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pCoeffs,
3603:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q63_t * pState,
3604:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t postShift);
3605:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3606:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3607:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3608:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3609:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3610:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3611:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3612:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3613:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;         /**< points to the array of state coefficients.  The array is of len
3614:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 83


3615:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_biquad_cascade_df2T_instance_f32;
3616:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3617:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3618:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3619:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3620:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3621:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3622:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3623:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;         /**< points to the array of state coefficients.  The array is of len
3624:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3625:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_biquad_cascade_stereo_df2T_instance_f32;
3626:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3627:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3628:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3629:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3630:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3631:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3632:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3633:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float64_t *pState;         /**< points to the array of state coefficients.  The array is of len
3634:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float64_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3635:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_biquad_cascade_df2T_instance_f64;
3636:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3637:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3638:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3639:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3640:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3641:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3642:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3643:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3644:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3645:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df2T_f32(
3646:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_biquad_cascade_df2T_instance_f32 * S,
3647:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
3648:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
3649:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3650:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3651:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3652:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3653:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3654:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3655:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3656:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3657:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3658:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3659:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_stereo_df2T_f32(
3660:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_biquad_cascade_stereo_df2T_instance_f32 * S,
3661:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
3662:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
3663:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3664:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3665:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3666:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3667:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3668:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3669:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3670:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3671:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 84


3672:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3673:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df2T_f64(
3674:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_biquad_cascade_df2T_instance_f64 * S,
3675:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float64_t * pSrc,
3676:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float64_t * pDst,
3677:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3678:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3679:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3680:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3681:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3682:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3683:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3684:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3685:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3686:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3687:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df2T_init_f32(
3688:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_biquad_cascade_df2T_instance_f32 * S,
3689:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t numStages,
3690:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCoeffs,
3691:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState);
3692:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3693:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3694:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3695:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3696:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3697:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3698:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3699:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3700:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3701:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_stereo_df2T_init_f32(
3702:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_biquad_cascade_stereo_df2T_instance_f32 * S,
3703:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t numStages,
3704:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCoeffs,
3705:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState);
3706:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3707:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3708:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3709:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3710:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3711:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3712:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3713:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3714:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3715:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_biquad_cascade_df2T_init_f64(
3716:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_biquad_cascade_df2T_instance_f64 * S,
3717:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t numStages,
3718:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float64_t * pCoeffs,
3719:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float64_t * pState);
3720:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3721:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3722:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3723:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR lattice filter.
3724:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3725:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3726:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3727:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3728:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pState;                       /**< points to the state variable array. The array is of l
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 85


3729:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pCoeffs;                      /**< points to the coefficient array. The array is of leng
3730:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_lattice_instance_q15;
3731:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3732:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3733:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR lattice filter.
3734:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3735:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3736:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3737:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3738:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pState;                       /**< points to the state variable array. The array is of l
3739:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pCoeffs;                      /**< points to the coefficient array. The array is of leng
3740:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_lattice_instance_q31;
3741:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3742:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3743:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR lattice filter.
3744:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3745:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3746:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3747:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3748:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;                   /**< points to the state variable array. The array is of l
3749:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCoeffs;                  /**< points to the coefficient array. The array is of leng
3750:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_lattice_instance_f32;
3751:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3752:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3753:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3754:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Initialization function for the Q15 FIR lattice filter.
3755:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] S          points to an instance of the Q15 FIR lattice structure.
3756:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] numStages  number of filter stages.
3757:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3758:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages.
3759:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3760:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_lattice_init_q15(
3761:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_lattice_instance_q15 * S,
3762:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numStages,
3763:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pCoeffs,
3764:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState);
3765:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3766:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3767:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3768:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q15 FIR lattice filter.
3769:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR lattice structure.
3770:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3771:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3772:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3773:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3774:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_lattice_q15(
3775:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_lattice_instance_q15 * S,
3776:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
3777:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
3778:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3779:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3780:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3781:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3782:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Initialization function for the Q31 FIR lattice filter.
3783:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 FIR lattice structure.
3784:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] numStages  number of filter stages.
3785:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 86


3786:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pState     points to the state buffer.   The array is of length numStages.
3787:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3788:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_lattice_init_q31(
3789:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_lattice_instance_q31 * S,
3790:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numStages,
3791:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pCoeffs,
3792:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pState);
3793:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3794:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3795:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3796:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q31 FIR lattice filter.
3797:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR lattice structure.
3798:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3799:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3800:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3801:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3802:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_lattice_q31(
3803:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_lattice_instance_q31 * S,
3804:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
3805:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
3806:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3807:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3808:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3809:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
3810:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @brief Initialization function for the floating-point FIR lattice filter.
3811:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in] S          points to an instance of the floating-point FIR lattice structure.
3812:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in] numStages  number of filter stages.
3813:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3814:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in] pState     points to the state buffer.  The array is of length numStages.
3815:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
3816:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_lattice_init_f32(
3817:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_lattice_instance_f32 * S,
3818:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numStages,
3819:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCoeffs,
3820:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState);
3821:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3822:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3823:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3824:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point FIR lattice filter.
3825:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR lattice structure.
3826:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3827:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3828:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3829:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3830:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_lattice_f32(
3831:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_fir_lattice_instance_f32 * S,
3832:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
3833:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
3834:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3835:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3836:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3837:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3838:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 IIR lattice filter.
3839:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3840:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3841:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3842:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 87


3843:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pState;                       /**< points to the state variable array. The array is of l
3844:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pkCoeffs;                     /**< points to the reflection coefficient array. The array
3845:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pvCoeffs;                     /**< points to the ladder coefficient array. The array is 
3846:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_iir_lattice_instance_q15;
3847:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3848:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3849:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 IIR lattice filter.
3850:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3851:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3852:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3853:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3854:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pState;                       /**< points to the state variable array. The array is of l
3855:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pkCoeffs;                     /**< points to the reflection coefficient array. The array
3856:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pvCoeffs;                     /**< points to the ladder coefficient array. The array is 
3857:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_iir_lattice_instance_q31;
3858:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3859:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3860:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point IIR lattice filter.
3861:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3862:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3863:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3864:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3865:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;                   /**< points to the state variable array. The array is of l
3866:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pkCoeffs;                 /**< points to the reflection coefficient array. The array
3867:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pvCoeffs;                 /**< points to the ladder coefficient array. The array is 
3868:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_iir_lattice_instance_f32;
3869:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3870:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3871:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3872:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point IIR lattice filter.
3873:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point IIR lattice structure.
3874:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3875:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3876:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3877:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3878:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_iir_lattice_f32(
3879:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_iir_lattice_instance_f32 * S,
3880:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
3881:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
3882:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3883:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3884:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3885:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3886:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Initialization function for the floating-point IIR lattice filter.
3887:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] S          points to an instance of the floating-point IIR lattice structure.
3888:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] numStages  number of stages in the filter.
3889:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length num
3890:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStag
3891:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize-
3892:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
3893:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3894:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_iir_lattice_init_f32(
3895:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_iir_lattice_instance_f32 * S,
3896:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numStages,
3897:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pkCoeffs,
3898:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pvCoeffs,
3899:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 88


3900:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3901:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3902:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3903:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3904:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q31 IIR lattice filter.
3905:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 IIR lattice structure.
3906:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3907:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3908:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3909:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3910:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_iir_lattice_q31(
3911:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_iir_lattice_instance_q31 * S,
3912:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
3913:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
3914:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3915:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3916:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3917:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3918:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Initialization function for the Q31 IIR lattice filter.
3919:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 IIR lattice structure.
3920:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] numStages  number of stages in the filter.
3921:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length num
3922:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStag
3923:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize.
3924:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
3925:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3926:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_iir_lattice_init_q31(
3927:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_iir_lattice_instance_q31 * S,
3928:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numStages,
3929:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pkCoeffs,
3930:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pvCoeffs,
3931:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pState,
3932:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3933:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3934:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3935:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3936:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q15 IIR lattice filter.
3937:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 IIR lattice structure.
3938:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3939:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3940:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3941:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3942:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_iir_lattice_q15(
3943:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_iir_lattice_instance_q15 * S,
3944:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
3945:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
3946:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3947:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3948:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3949:..\CMSIS_DSP_LIB\Include/arm_math.h **** /**
3950:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @brief Initialization function for the Q15 IIR lattice filter.
3951:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in] S          points to an instance of the fixed-point Q15 IIR lattice structure.
3952:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in] numStages  number of stages in the filter.
3953:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in] pkCoeffs   points to reflection coefficient buffer.  The array is of length numStages
3954:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in] pvCoeffs   points to ladder coefficient buffer.  The array is of length numStages+1.
3955:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in] pState     points to state buffer.  The array is of length numStages+blockSize.
3956:..\CMSIS_DSP_LIB\Include/arm_math.h ****  * @param[in] blockSize  number of samples to process per call.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 89


3957:..\CMSIS_DSP_LIB\Include/arm_math.h ****  */
3958:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_iir_lattice_init_q15(
3959:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_iir_lattice_instance_q15 * S,
3960:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numStages,
3961:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pkCoeffs,
3962:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pvCoeffs,
3963:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState,
3964:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3965:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3966:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3967:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3968:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point LMS filter.
3969:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3970:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
3971:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
3972:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
3973:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;   /**< points to the state variable array. The array is of length numTaps+bl
3974:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCoeffs;  /**< points to the coefficient array. The array is of length numTaps. */
3975:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t mu;        /**< step size that controls filter coefficient updates. */
3976:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_lms_instance_f32;
3977:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3978:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3979:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3980:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for floating-point LMS filter.
3981:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point LMS filter structure.
3982:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3983:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
3984:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
3985:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
3986:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3987:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
3988:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_f32(
3989:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_lms_instance_f32 * S,
3990:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
3991:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pRef,
3992:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pOut,
3993:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pErr,
3994:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
3995:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3996:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
3997:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
3998:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Initialization function for floating-point LMS filter.
3999:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] S          points to an instance of the floating-point LMS filter structure.
4000:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4001:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.
4002:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4003:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4004:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4005:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4006:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_init_f32(
4007:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_lms_instance_f32 * S,
4008:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
4009:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCoeffs,
4010:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState,
4011:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t mu,
4012:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4013:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 90


4014:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4015:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4016:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 LMS filter.
4017:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4018:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
4019:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4020:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
4021:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pState;       /**< points to the state variable array. The array is of length numTaps+bl
4022:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps. */
4023:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t mu;            /**< step size that controls filter coefficient updates. */
4024:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t postShift;  /**< bit shift applied to coefficients. */
4025:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_lms_instance_q15;
4026:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4027:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4028:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4029:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Initialization function for the Q15 LMS filter.
4030:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] S          points to an instance of the Q15 LMS filter structure.
4031:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4032:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.
4033:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pState     points to the state buffer.
4034:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4035:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4036:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4037:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4038:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_init_q15(
4039:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_lms_instance_q15 * S,
4040:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
4041:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pCoeffs,
4042:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState,
4043:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t mu,
4044:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize,
4045:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t postShift);
4046:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4047:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4048:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4049:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for Q15 LMS filter.
4050:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 LMS filter structure.
4051:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4052:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4053:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4054:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4055:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4056:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4057:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_q15(
4058:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_lms_instance_q15 * S,
4059:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
4060:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pRef,
4061:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pOut,
4062:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pErr,
4063:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4064:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4065:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4066:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4067:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 LMS filter.
4068:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4069:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
4070:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 91


4071:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
4072:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pState;       /**< points to the state variable array. The array is of length numTaps+bl
4073:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps. */
4074:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t mu;            /**< step size that controls filter coefficient updates. */
4075:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t postShift;  /**< bit shift applied to coefficients. */
4076:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_lms_instance_q31;
4077:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4078:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4079:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4080:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for Q31 LMS filter.
4081:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 LMS filter structure.
4082:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4083:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4084:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4085:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4086:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4087:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4088:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_q31(
4089:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_lms_instance_q31 * S,
4090:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
4091:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pRef,
4092:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pOut,
4093:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pErr,
4094:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4095:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4096:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4097:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4098:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Initialization function for Q31 LMS filter.
4099:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 LMS filter structure.
4100:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4101:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4102:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4103:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4104:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4105:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4106:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4107:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_init_q31(
4108:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_lms_instance_q31 * S,
4109:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
4110:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pCoeffs,
4111:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pState,
4112:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t mu,
4113:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize,
4114:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t postShift);
4115:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4116:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4117:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4118:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point normalized LMS filter.
4119:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4120:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
4121:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4122:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;     /**< number of coefficients in the filter. */
4123:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;    /**< points to the state variable array. The array is of length numTaps+b
4124:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTaps. */
4125:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t mu;         /**< step size that control filter coefficient updates. */
4126:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t energy;     /**< saves previous frame energy. */
4127:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t x0;         /**< saves previous input sample. */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 92


4128:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_lms_norm_instance_f32;
4129:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4130:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4131:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4132:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for floating-point normalized LMS filter.
4133:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point normalized LMS filter struc
4134:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4135:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4136:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4137:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4138:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4139:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4140:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_norm_f32(
4141:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_lms_norm_instance_f32 * S,
4142:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
4143:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pRef,
4144:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pOut,
4145:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pErr,
4146:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4147:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4148:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4149:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4150:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Initialization function for floating-point normalized LMS filter.
4151:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] S          points to an instance of the floating-point LMS filter structure.
4152:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4153:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4154:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4155:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4156:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4157:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4158:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_norm_init_f32(
4159:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_lms_norm_instance_f32 * S,
4160:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
4161:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCoeffs,
4162:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState,
4163:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t mu,
4164:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4165:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4166:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4167:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4168:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 normalized LMS filter.
4169:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4170:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
4171:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4172:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;     /**< number of coefficients in the filter. */
4173:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pState;        /**< points to the state variable array. The array is of length numTaps+b
4174:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTaps. */
4175:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t mu;             /**< step size that controls filter coefficient updates. */
4176:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t postShift;    /**< bit shift applied to coefficients. */
4177:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *recipTable;    /**< points to the reciprocal initial value table. */
4178:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t energy;         /**< saves previous frame energy. */
4179:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t x0;             /**< saves previous input sample. */
4180:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_lms_norm_instance_q31;
4181:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4182:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4183:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4184:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for Q31 normalized LMS filter.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 93


4185:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 normalized LMS filter structure.
4186:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4187:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4188:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4189:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4190:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4191:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4192:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_norm_q31(
4193:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_lms_norm_instance_q31 * S,
4194:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
4195:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pRef,
4196:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pOut,
4197:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pErr,
4198:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4199:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4200:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4201:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4202:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Initialization function for Q31 normalized LMS filter.
4203:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 normalized LMS filter structure.
4204:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4205:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4206:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4207:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4208:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4209:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4210:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4211:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_norm_init_q31(
4212:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_lms_norm_instance_q31 * S,
4213:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
4214:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pCoeffs,
4215:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pState,
4216:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t mu,
4217:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize,
4218:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t postShift);
4219:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4220:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4221:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4222:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 normalized LMS filter.
4223:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4224:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
4225:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4226:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;     /**< Number of coefficients in the filter. */
4227:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pState;        /**< points to the state variable array. The array is of length numTaps+b
4228:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTaps. */
4229:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t mu;             /**< step size that controls filter coefficient updates. */
4230:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint8_t postShift;    /**< bit shift applied to coefficients. */
4231:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *recipTable;    /**< Points to the reciprocal initial value table. */
4232:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t energy;         /**< saves previous frame energy. */
4233:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t x0;             /**< saves previous input sample. */
4234:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_lms_norm_instance_q15;
4235:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4236:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4237:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4238:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for Q15 normalized LMS filter.
4239:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 normalized LMS filter structure.
4240:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4241:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 94


4242:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4243:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4244:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4245:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4246:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_norm_q15(
4247:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_lms_norm_instance_q15 * S,
4248:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
4249:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pRef,
4250:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pOut,
4251:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pErr,
4252:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4253:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4254:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4255:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4256:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Initialization function for Q15 normalized LMS filter.
4257:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] S          points to an instance of the Q15 normalized LMS filter structure.
4258:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4259:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4260:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4261:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4262:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4263:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4264:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4265:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_lms_norm_init_q15(
4266:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_lms_norm_instance_q15 * S,
4267:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
4268:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pCoeffs,
4269:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState,
4270:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t mu,
4271:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize,
4272:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint8_t postShift);
4273:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4274:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4275:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4276:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Correlation of floating-point sequences.
4277:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4278:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4279:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4280:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4281:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4282:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4283:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_correlate_f32(
4284:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcA,
4285:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
4286:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrcB,
4287:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
4288:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst);
4289:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4290:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4291:..\CMSIS_DSP_LIB\Include/arm_math.h ****    /**
4292:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Correlation of Q15 sequences
4293:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA     points to the first input sequence.
4294:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen   length of the first input sequence.
4295:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB     points to the second input sequence.
4296:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen   length of the second input sequence.
4297:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1
4298:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 95


4299:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4300:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_correlate_opt_q15(
4301:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
4302:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
4303:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
4304:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
4305:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
4306:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch);
4307:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4308:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4309:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4310:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Correlation of Q15 sequences.
4311:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4312:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4313:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4314:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4315:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4316:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4317:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4318:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_correlate_q15(
4319:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
4320:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
4321:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
4322:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
4323:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst);
4324:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4325:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4326:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4327:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
4328:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4329:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4330:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4331:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4332:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4333:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4334:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4335:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_correlate_fast_q15(
4336:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
4337:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
4338:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
4339:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
4340:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst);
4341:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4342:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4343:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4344:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
4345:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA     points to the first input sequence.
4346:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen   length of the first input sequence.
4347:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB     points to the second input sequence.
4348:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen   length of the second input sequence.
4349:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1
4350:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, 
4351:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4352:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_correlate_fast_opt_q15(
4353:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcA,
4354:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
4355:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrcB,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 96


4356:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
4357:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
4358:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch);
4359:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4360:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4361:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4362:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Correlation of Q31 sequences.
4363:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4364:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4365:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4366:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4367:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4368:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4369:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_correlate_q31(
4370:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcA,
4371:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
4372:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcB,
4373:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
4374:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst);
4375:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4376:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4377:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4378:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Correlation of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
4379:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4380:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4381:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4382:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4383:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4384:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4385:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_correlate_fast_q31(
4386:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcA,
4387:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
4388:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrcB,
4389:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
4390:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst);
4391:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4392:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4393:..\CMSIS_DSP_LIB\Include/arm_math.h ****  /**
4394:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Correlation of Q7 sequences.
4395:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
4396:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
4397:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
4398:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
4399:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length 2 * max(srcALen, srcBLen) - 
4400:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
4401:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
4402:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4403:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_correlate_opt_q7(
4404:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcA,
4405:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
4406:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcB,
4407:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
4408:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
4409:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch1,
4410:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratch2);
4411:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4412:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 97


4413:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4414:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Correlation of Q7 sequences.
4415:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4416:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4417:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4418:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4419:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4420:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4421:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_correlate_q7(
4422:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcA,
4423:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcALen,
4424:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrcB,
4425:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t srcBLen,
4426:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst);
4427:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4428:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4429:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4430:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the floating-point sparse FIR filter.
4431:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4432:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
4433:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4434:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4435:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4436:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pState;            /**< points to the state buffer array. The array is of length max
4437:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pCoeffs;           /**< points to the coefficient array. The array is of length numT
4438:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4439:..\CMSIS_DSP_LIB\Include/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4440:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_sparse_instance_f32;
4441:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4442:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4443:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q31 sparse FIR filter.
4444:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4445:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
4446:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4447:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4448:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4449:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pState;                /**< points to the state buffer array. The array is of length max
4450:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t *pCoeffs;               /**< points to the coefficient array. The array is of length numT
4451:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4452:..\CMSIS_DSP_LIB\Include/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4453:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_sparse_instance_q31;
4454:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4455:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4456:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q15 sparse FIR filter.
4457:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4458:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
4459:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4460:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4461:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4462:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pState;                /**< points to the state buffer array. The array is of length max
4463:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t *pCoeffs;               /**< points to the coefficient array. The array is of length numT
4464:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4465:..\CMSIS_DSP_LIB\Include/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4466:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_sparse_instance_q15;
4467:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4468:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4469:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Instance structure for the Q7 sparse FIR filter.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 98


4470:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4471:..\CMSIS_DSP_LIB\Include/arm_math.h ****   typedef struct
4472:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4473:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4474:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4475:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q7_t *pState;                 /**< points to the state buffer array. The array is of length max
4476:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q7_t *pCoeffs;                /**< points to the coefficient array. The array is of length numT
4477:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4478:..\CMSIS_DSP_LIB\Include/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4479:..\CMSIS_DSP_LIB\Include/arm_math.h ****   } arm_fir_sparse_instance_q7;
4480:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4481:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4482:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4483:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the floating-point sparse FIR filter.
4484:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S           points to an instance of the floating-point sparse FIR structure.
4485:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the block of input data.
4486:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
4487:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
4488:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize   number of input samples to process per call.
4489:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4490:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_sparse_f32(
4491:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_sparse_instance_f32 * S,
4492:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
4493:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
4494:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pScratchIn,
4495:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4496:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4497:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4498:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4499:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the floating-point sparse FIR filter.
4500:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point sparse FIR structure.
4501:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4502:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4503:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4504:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4505:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4506:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4507:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4508:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_sparse_init_f32(
4509:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_sparse_instance_f32 * S,
4510:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
4511:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCoeffs,
4512:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pState,
4513:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t * pTapDelay,
4514:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t maxDelay,
4515:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4516:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4517:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4518:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4519:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q31 sparse FIR filter.
4520:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S           points to an instance of the Q31 sparse FIR structure.
4521:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the block of input data.
4522:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
4523:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
4524:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize   number of input samples to process per call.
4525:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4526:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_sparse_q31(
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 99


4527:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_sparse_instance_q31 * S,
4528:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
4529:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
4530:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pScratchIn,
4531:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4532:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4533:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4534:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4535:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q31 sparse FIR filter.
4536:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 sparse FIR structure.
4537:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4538:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4539:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4540:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4541:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4542:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4543:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4544:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_sparse_init_q31(
4545:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_sparse_instance_q31 * S,
4546:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
4547:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pCoeffs,
4548:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pState,
4549:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t * pTapDelay,
4550:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t maxDelay,
4551:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4552:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4553:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4554:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4555:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q15 sparse FIR filter.
4556:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S            points to an instance of the Q15 sparse FIR structure.
4557:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc         points to the block of input data.
4558:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst         points to the block of output data
4559:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
4560:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
4561:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize    number of input samples to process per call.
4562:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4563:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_sparse_q15(
4564:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_sparse_instance_q15 * S,
4565:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
4566:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
4567:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pScratchIn,
4568:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pScratchOut,
4569:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4570:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4571:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4572:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4573:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q15 sparse FIR filter.
4574:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 sparse FIR structure.
4575:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4576:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4577:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4578:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4579:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4580:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4581:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4582:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_sparse_init_q15(
4583:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_sparse_instance_q15 * S,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 100


4584:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
4585:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pCoeffs,
4586:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pState,
4587:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t * pTapDelay,
4588:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t maxDelay,
4589:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4590:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4591:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4592:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4593:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Processing function for the Q7 sparse FIR filter.
4594:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  S            points to an instance of the Q7 sparse FIR structure.
4595:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc         points to the block of input data.
4596:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst         points to the block of output data
4597:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
4598:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
4599:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize    number of input samples to process per call.
4600:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4601:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_sparse_q7(
4602:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_sparse_instance_q7 * S,
4603:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
4604:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pDst,
4605:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pScratchIn,
4606:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pScratchOut,
4607:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4608:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4609:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4610:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4611:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Initialization function for the Q7 sparse FIR filter.
4612:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q7 sparse FIR structure.
4613:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4614:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4615:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4616:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4617:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4618:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4619:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4620:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_fir_sparse_init_q7(
4621:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_fir_sparse_instance_q7 * S,
4622:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t numTaps,
4623:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pCoeffs,
4624:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pState,
4625:..\CMSIS_DSP_LIB\Include/arm_math.h ****   int32_t * pTapDelay,
4626:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint16_t maxDelay,
4627:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
4628:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4629:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4630:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4631:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Floating-point sin_cos function.
4632:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  theta   input value in degrees
4633:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pSinVal  points to the processed sine output.
4634:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pCosVal  points to the processed cos output.
4635:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4636:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_sin_cos_f32(
4637:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t theta,
4638:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSinVal,
4639:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pCosVal);
4640:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 101


4641:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4642:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4643:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Q31 sin_cos function.
4644:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  theta    scaled input value in degrees
4645:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pSinVal  points to the processed sine output.
4646:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pCosVal  points to the processed cosine output.
4647:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4648:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_sin_cos_q31(
4649:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t theta,
4650:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSinVal,
4651:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pCosVal);
4652:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4653:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4654:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4655:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Floating-point complex conjugate.
4656:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4657:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the output vector
4658:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4659:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4660:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cmplx_conj_f32(
4661:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
4662:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
4663:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numSamples);
4664:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4665:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4666:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Q31 complex conjugate.
4667:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4668:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the output vector
4669:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4670:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4671:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cmplx_conj_q31(
4672:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
4673:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
4674:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numSamples);
4675:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4676:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4677:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4678:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Q15 complex conjugate.
4679:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4680:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the output vector
4681:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4682:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4683:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cmplx_conj_q15(
4684:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
4685:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
4686:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numSamples);
4687:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4688:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4689:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4690:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Floating-point complex magnitude squared
4691:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4692:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the real output vector
4693:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4694:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4695:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cmplx_mag_squared_f32(
4696:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pSrc,
4697:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 102


4698:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numSamples);
4699:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4700:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4701:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4702:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Q31 complex magnitude squared
4703:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4704:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the real output vector
4705:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4706:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4707:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cmplx_mag_squared_q31(
4708:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
4709:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
4710:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numSamples);
4711:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4712:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4713:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4714:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Q15 complex magnitude squared
4715:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4716:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst        points to the real output vector
4717:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4718:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4719:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_cmplx_mag_squared_q15(
4720:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pSrc,
4721:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
4722:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t numSamples);
4723:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4724:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4725:..\CMSIS_DSP_LIB\Include/arm_math.h ****  /**
4726:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @ingroup groupController
4727:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4728:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4729:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4730:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @defgroup PID PID Motor Control
4731:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4732:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * A Proportional Integral Derivative (PID) controller is a generic feedback control
4733:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * loop mechanism widely used in industrial control systems.
4734:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * A PID controller is the most commonly used type of feedback controller.
4735:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4736:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * This set of functions implements (PID) controllers
4737:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * for Q15, Q31, and floating-point data types.  The functions operate on a single sample
4738:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * of data and each call to the function returns a single processed value.
4739:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>S</code> points to an instance of the PID control data structure.  <code>in</code>
4740:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * is the input sample value. The functions return the output value.
4741:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4742:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Algorithm:
4743:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <pre>
4744:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *    y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]
4745:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *    A0 = Kp + Ki + Kd
4746:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *    A1 = (-Kp ) - (2 * Kd )
4747:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *    A2 = Kd  </pre>
4748:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4749:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
4750:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * where \c Kp is proportional constant, \c Ki is Integral constant and \c Kd is Derivative const
4751:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4752:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
4753:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \image html PID.gif "Proportional Integral Derivative Controller"
4754:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 103


4755:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
4756:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The PID controller calculates an "error" value as the difference between
4757:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * the measured output and the reference input.
4758:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The controller attempts to minimize the error by adjusting the process control inputs.
4759:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The proportional value determines the reaction to the current error,
4760:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * the integral value determines the reaction based on the sum of recent errors,
4761:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * and the derivative value determines the reaction based on the rate at which the error has been
4762:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4763:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Instance Structure
4764:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The Gains A0, A1, A2 and state variables for a PID controller are stored together in an instan
4765:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * A separate instance structure must be defined for each PID Controller.
4766:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * There are separate instance structure declarations for each of the 3 supported data types.
4767:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4768:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Reset Functions
4769:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * There is also an associated reset function for each data type which clears the state array.
4770:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4771:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Initialization Functions
4772:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * There is also an associated initialization function for each data type.
4773:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The initialization function performs the following operations:
4774:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Initializes the Gains A0, A1, A2 from Kp,Ki, Kd gains.
4775:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * - Zeros out the values in the state buffer.
4776:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4777:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
4778:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Instance structure cannot be placed into a const data section and it is recommended to use the
4779:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4780:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Fixed-Point Behavior
4781:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Care must be taken when using the fixed-point versions of the PID Controller functions.
4782:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used in each function m
4783:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
4784:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4785:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4786:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4787:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @addtogroup PID
4788:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @{
4789:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4790:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4791:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4792:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Process function for the floating-point PID Control.
4793:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S   is an instance of the floating-point PID Control structure
4794:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     in  input sample to process
4795:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return out processed output sample.
4796:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4797:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE float32_t arm_pid_f32(
4798:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_pid_instance_f32 * S,
4799:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t in)
4800:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4801:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t out;
4802:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4803:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]  */
4804:..\CMSIS_DSP_LIB\Include/arm_math.h ****     out = (S->A0 * in) +
4805:..\CMSIS_DSP_LIB\Include/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
4806:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4807:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Update state */
4808:..\CMSIS_DSP_LIB\Include/arm_math.h ****     S->state[1] = S->state[0];
4809:..\CMSIS_DSP_LIB\Include/arm_math.h ****     S->state[0] = in;
4810:..\CMSIS_DSP_LIB\Include/arm_math.h ****     S->state[2] = out;
4811:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 104


4812:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* return to application */
4813:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return (out);
4814:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4815:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
4816:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4817:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4818:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Process function for the Q31 PID Control.
4819:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S  points to an instance of the Q31 PID Control structure
4820:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     in  input sample to process
4821:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return out processed output sample.
4822:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4823:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
4824:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
4825:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function is implemented using an internal 64-bit accumulator.
4826:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The accumulator has a 2.62 format and maintains full precision of the intermediate multiplicat
4827:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Thus, if the accumulator result overflows it wraps around rather than clip.
4828:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * In order to avoid overflows completely the input signal must be scaled down by 2 bits as there
4829:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * After all multiply-accumulates are performed, the 2.62 accumulator is truncated to 1.32 format
4830:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4831:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q31_t arm_pid_q31(
4832:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_pid_instance_q31 * S,
4833:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t in)
4834:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4835:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q63_t acc;
4836:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t out;
4837:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4838:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* acc = A0 * x[n]  */
4839:..\CMSIS_DSP_LIB\Include/arm_math.h ****     acc = (q63_t) S->A0 * in;
4840:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4841:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* acc += A1 * x[n-1] */
4842:..\CMSIS_DSP_LIB\Include/arm_math.h ****     acc += (q63_t) S->A1 * S->state[0];
4843:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4844:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* acc += A2 * x[n-2]  */
4845:..\CMSIS_DSP_LIB\Include/arm_math.h ****     acc += (q63_t) S->A2 * S->state[1];
4846:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4847:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* convert output to 1.31 format to add y[n-1] */
4848:..\CMSIS_DSP_LIB\Include/arm_math.h ****     out = (q31_t) (acc >> 31u);
4849:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4850:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* out += y[n-1] */
4851:..\CMSIS_DSP_LIB\Include/arm_math.h ****     out += S->state[2];
4852:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4853:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Update state */
4854:..\CMSIS_DSP_LIB\Include/arm_math.h ****     S->state[1] = S->state[0];
4855:..\CMSIS_DSP_LIB\Include/arm_math.h ****     S->state[0] = in;
4856:..\CMSIS_DSP_LIB\Include/arm_math.h ****     S->state[2] = out;
4857:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4858:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* return to application */
4859:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return (out);
4860:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
4861:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4862:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4863:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4864:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Process function for the Q15 PID Control.
4865:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S   points to an instance of the Q15 PID Control structure
4866:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     in  input sample to process
4867:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return out processed output sample.
4868:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 105


4869:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
4870:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
4871:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function is implemented using a 64-bit internal accumulator.
4872:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Both Gains and state variables are represented in 1.15 format and multiplications yield a 2.30
4873:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The 2.30 intermediate results are accumulated in a 64-bit accumulator in 34.30 format.
4874:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * There is no risk of internal overflow with this approach and the full precision of intermediat
4875:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * After all additions have been performed, the accumulator is truncated to 34.15 format by disca
4876:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Lastly, the accumulator is saturated to yield a result in 1.15 format.
4877:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4878:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q15_t arm_pid_q15(
4879:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_pid_instance_q15 * S,
4880:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t in)
4881:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4882:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q63_t acc;
4883:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t out;
4884:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4885:..\CMSIS_DSP_LIB\Include/arm_math.h **** #ifndef ARM_MATH_CM0_FAMILY
4886:..\CMSIS_DSP_LIB\Include/arm_math.h ****     __SIMD32_TYPE *vstate;
4887:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4888:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Implementation of PID controller */
4889:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4890:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* acc = A0 * x[n]  */
4891:..\CMSIS_DSP_LIB\Include/arm_math.h ****     acc = (q31_t) __SMUAD((uint32_t)S->A0, (uint32_t)in);
4892:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4893:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* acc += A1 * x[n-1] + A2 * x[n-2]  */
4894:..\CMSIS_DSP_LIB\Include/arm_math.h ****     vstate = __SIMD32_CONST(S->state);
4895:..\CMSIS_DSP_LIB\Include/arm_math.h ****     acc = (q63_t)__SMLALD((uint32_t)S->A1, (uint32_t)*vstate, (uint64_t)acc);
4896:..\CMSIS_DSP_LIB\Include/arm_math.h **** #else
4897:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* acc = A0 * x[n]  */
4898:..\CMSIS_DSP_LIB\Include/arm_math.h ****     acc = ((q31_t) S->A0) * in;
4899:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4900:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* acc += A1 * x[n-1] + A2 * x[n-2]  */
4901:..\CMSIS_DSP_LIB\Include/arm_math.h ****     acc += (q31_t) S->A1 * S->state[0];
4902:..\CMSIS_DSP_LIB\Include/arm_math.h ****     acc += (q31_t) S->A2 * S->state[1];
4903:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
4904:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4905:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* acc += y[n-1] */
4906:..\CMSIS_DSP_LIB\Include/arm_math.h ****     acc += (q31_t) S->state[2] << 15;
4907:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4908:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* saturate the output */
4909:..\CMSIS_DSP_LIB\Include/arm_math.h ****     out = (q15_t) (__SSAT((acc >> 15), 16));
4910:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4911:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Update state */
4912:..\CMSIS_DSP_LIB\Include/arm_math.h ****     S->state[1] = S->state[0];
4913:..\CMSIS_DSP_LIB\Include/arm_math.h ****     S->state[0] = in;
4914:..\CMSIS_DSP_LIB\Include/arm_math.h ****     S->state[2] = out;
4915:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4916:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* return to application */
4917:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return (out);
4918:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
4919:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4920:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4921:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @} end of PID group
4922:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4923:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4924:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4925:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 106


4926:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point matrix inverse.
4927:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  src   points to the instance of the input floating-point matrix structure.
4928:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] dst   points to the instance of the output floating-point matrix structure.
4929:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match.
4930:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * If the input matrix is singular (does not have an inverse), then the algorithm terminates and 
4931:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4932:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_inverse_f32(
4933:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f32 * src,
4934:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_f32 * dst);
4935:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4936:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4937:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4938:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point matrix inverse.
4939:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  src   points to the instance of the input floating-point matrix structure.
4940:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] dst   points to the instance of the output floating-point matrix structure.
4941:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match.
4942:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * If the input matrix is singular (does not have an inverse), then the algorithm terminates and 
4943:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4944:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_status arm_mat_inverse_f64(
4945:..\CMSIS_DSP_LIB\Include/arm_math.h ****   const arm_matrix_instance_f64 * src,
4946:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_matrix_instance_f64 * dst);
4947:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4948:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4949:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4950:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4951:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @ingroup groupController
4952:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4953:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4954:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4955:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @defgroup clarke Vector Clarke Transform
4956:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Forward Clarke transform converts the instantaneous stator phases into a two-coordinate time i
4957:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Generally the Clarke transform uses three-phase currents <code>Ia, Ib and Ic</code> to calcula
4958:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * in the two-phase orthogonal stator axis <code>Ialpha</code> and <code>Ibeta</code>.
4959:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * When <code>Ialpha</code> is superposed with <code>Ia</code> as shown in the figure below
4960:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \image html clarke.gif Stator current space vector and its components in (a,b).
4961:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * and <code>Ia + Ib + Ic = 0</code>, in this condition <code>Ialpha</code> and <code>Ibeta</code
4962:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * can be calculated using only <code>Ia</code> and <code>Ib</code>.
4963:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
4964:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
4965:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
4966:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Algorithm
4967:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \image html clarkeFormula.gif
4968:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * where <code>Ia</code> and <code>Ib</code> are the instantaneous stator phases and
4969:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>pIalpha</code> and <code>pIbeta</code> are the two coordinates of time invariant vector.
4970:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Fixed-Point Behavior
4971:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Clarke transform.
4972:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
4973:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
4974:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4975:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4976:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4977:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @addtogroup clarke
4978:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @{
4979:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4980:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4981:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
4982:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 107


4983:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Floating-point Clarke transform
4984:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ia       input three-phase coordinate <code>a</code>
4985:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ib       input three-phase coordinate <code>b</code>
4986:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
4987:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
4988:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
4989:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE void arm_clarke_f32(
4990:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t Ia,
4991:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t Ib,
4992:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pIalpha,
4993:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pIbeta)
4994:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
4995:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculate pIalpha using the equation, pIalpha = Ia */
4996:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIalpha = Ia;
4997:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
4998:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculate pIbeta using the equation, pIbeta = (1/sqrt(3)) * Ia + (2/sqrt(3)) * Ib */
4999:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIbeta = ((float32_t) 0.57735026919 * Ia + (float32_t) 1.15470053838 * Ib);
5000:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5001:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5002:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5003:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5004:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Clarke transform for Q31 version
5005:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ia       input three-phase coordinate <code>a</code>
5006:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ib       input three-phase coordinate <code>b</code>
5007:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5008:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5009:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5010:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5011:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
5012:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
5013:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5014:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * There is saturation on the addition, hence there is no risk of overflow.
5015:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5016:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE void arm_clarke_q31(
5017:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t Ia,
5018:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t Ib,
5019:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pIalpha,
5020:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pIbeta)
5021:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5022:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5023:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5024:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculating pIalpha from Ia by equation pIalpha = Ia */
5025:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIalpha = Ia;
5026:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5027:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (1/(sqrt(3)) * Ia) */
5028:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product1 = (q31_t) (((q63_t) Ia * 0x24F34E8B) >> 30);
5029:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5030:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (2/sqrt(3) * Ib) */
5031:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product2 = (q31_t) (((q63_t) Ib * 0x49E69D16) >> 30);
5032:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5033:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* pIbeta is calculated by adding the intermediate products */
5034:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIbeta = __QADD(product1, product2);
5035:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5036:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5037:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5038:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @} end of clarke group
5039:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 108


5040:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5041:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5042:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Converts the elements of the Q7 vector to Q31 vector.
5043:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       input pointer
5044:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       output pointer
5045:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
5046:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5047:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_q7_to_q31(
5048:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
5049:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pDst,
5050:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
5051:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5052:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5053:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5054:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5055:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @ingroup groupController
5056:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5057:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5058:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5059:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @defgroup inv_clarke Vector Inverse Clarke Transform
5060:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Inverse Clarke transform converts the two-coordinate time invariant vector into instantaneous 
5061:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5062:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5063:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5064:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Algorithm
5065:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \image html clarkeInvFormula.gif
5066:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * where <code>pIa</code> and <code>pIb</code> are the instantaneous stator phases and
5067:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>Ialpha</code> and <code>Ibeta</code> are the two coordinates of time invariant vector.
5068:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Fixed-Point Behavior
5069:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Clarke transform.
5070:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5071:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5072:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5073:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5074:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5075:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @addtogroup inv_clarke
5076:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @{
5077:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5078:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5079:..\CMSIS_DSP_LIB\Include/arm_math.h ****    /**
5080:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Floating-point Inverse Clarke transform
5081:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ialpha  input two-phase orthogonal vector axis alpha
5082:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ibeta   input two-phase orthogonal vector axis beta
5083:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIa     points to output three-phase coordinate <code>a</code>
5084:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIb     points to output three-phase coordinate <code>b</code>
5085:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5086:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE void arm_inv_clarke_f32(
5087:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t Ialpha,
5088:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t Ibeta,
5089:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pIa,
5090:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pIb)
5091:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5092:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculating pIa from Ialpha by equation pIa = Ialpha */
5093:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIa = Ialpha;
5094:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5095:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculating pIb from Ialpha and Ibeta by equation pIb = -(1/2) * Ialpha + (sqrt(3)/2) * Ibet
5096:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIb = -0.5f * Ialpha + 0.8660254039f * Ibeta;
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 109


5097:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5098:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5099:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5100:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5101:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Inverse Clarke transform for Q31 version
5102:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ialpha  input two-phase orthogonal vector axis alpha
5103:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ibeta   input two-phase orthogonal vector axis beta
5104:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIa     points to output three-phase coordinate <code>a</code>
5105:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIb     points to output three-phase coordinate <code>b</code>
5106:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5107:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5108:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
5109:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
5110:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5111:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * There is saturation on the subtraction, hence there is no risk of overflow.
5112:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5113:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE void arm_inv_clarke_q31(
5114:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t Ialpha,
5115:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t Ibeta,
5116:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pIa,
5117:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pIb)
5118:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5119:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5120:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5121:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculating pIa from Ialpha by equation pIa = Ialpha */
5122:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIa = Ialpha;
5123:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5124:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (1/(2*sqrt(3)) * Ia) */
5125:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product1 = (q31_t) (((q63_t) (Ialpha) * (0x40000000)) >> 31);
5126:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5127:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (1/sqrt(3) * pIb) */
5128:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product2 = (q31_t) (((q63_t) (Ibeta) * (0x6ED9EBA1)) >> 31);
5129:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5130:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* pIb is calculated by subtracting the products */
5131:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIb = __QSUB(product2, product1);
5132:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5133:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5134:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5135:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @} end of inv_clarke group
5136:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5137:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5138:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5139:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Converts the elements of the Q7 vector to Q15 vector.
5140:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       input pointer
5141:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       output pointer
5142:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
5143:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5144:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_q7_to_q15(
5145:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
5146:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pDst,
5147:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
5148:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5149:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5150:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5151:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5152:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @ingroup groupController
5153:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 110


5154:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5155:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5156:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @defgroup park Vector Park Transform
5157:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5158:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Forward Park transform converts the input two-coordinate vector to flux and torque components.
5159:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The Park transform can be used to realize the transformation of the <code>Ialpha</code> and th
5160:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * from the stationary to the moving reference frame and control the spatial relationship between
5161:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * the stator vector current and rotor flux vector.
5162:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * If we consider the d axis aligned with the rotor flux, the diagram below shows the
5163:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * current vector and the relationship from the two reference frames:
5164:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \image html park.gif "Stator current space vector and its component in (a,b) and in the d,q ro
5165:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5166:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5167:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5168:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Algorithm
5169:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \image html parkFormula.gif
5170:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * where <code>Ialpha</code> and <code>Ibeta</code> are the stator vector components,
5171:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>pId</code> and <code>pIq</code> are rotor vector components and <code>cosVal</code> and 
5172:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * cosine and sine values of theta (rotor flux position).
5173:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Fixed-Point Behavior
5174:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Park transform.
5175:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5176:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5177:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5178:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5179:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5180:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @addtogroup park
5181:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @{
5182:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5183:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5184:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5185:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Floating-point Park transform
5186:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ialpha  input two-phase vector coordinate alpha
5187:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ibeta   input two-phase vector coordinate beta
5188:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pId     points to output   rotor reference frame d
5189:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIq     points to output   rotor reference frame q
5190:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  sinVal  sine value of rotation angle theta
5191:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  cosVal  cosine value of rotation angle theta
5192:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5193:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function implements the forward Park transform.
5194:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5195:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5196:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE void arm_park_f32(
5197:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t Ialpha,
5198:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t Ibeta,
5199:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pId,
5200:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pIq,
5201:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t sinVal,
5202:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t cosVal)
5203:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5204:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculate pId using the equation, pId = Ialpha * cosVal + Ibeta * sinVal */
5205:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pId = Ialpha * cosVal + Ibeta * sinVal;
5206:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5207:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculate pIq using the equation, pIq = - Ialpha * sinVal + Ibeta * cosVal */
5208:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIq = -Ialpha * sinVal + Ibeta * cosVal;
5209:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5210:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 111


5211:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5212:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5213:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Park transform for Q31 version
5214:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ialpha  input two-phase vector coordinate alpha
5215:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Ibeta   input two-phase vector coordinate beta
5216:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pId     points to output rotor reference frame d
5217:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIq     points to output rotor reference frame q
5218:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  sinVal  sine value of rotation angle theta
5219:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  cosVal  cosine value of rotation angle theta
5220:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5221:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5222:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
5223:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
5224:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5225:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * There is saturation on the addition and subtraction, hence there is no risk of overflow.
5226:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5227:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE void arm_park_q31(
5228:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t Ialpha,
5229:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t Ibeta,
5230:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pId,
5231:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pIq,
5232:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t sinVal,
5233:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t cosVal)
5234:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5235:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5236:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t product3, product4;                    /* Temporary variables used to store intermediate 
5237:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5238:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (Ialpha * cosVal) */
5239:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product1 = (q31_t) (((q63_t) (Ialpha) * (cosVal)) >> 31);
5240:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5241:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (Ibeta * sinVal) */
5242:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product2 = (q31_t) (((q63_t) (Ibeta) * (sinVal)) >> 31);
5243:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5244:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5245:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (Ialpha * sinVal) */
5246:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product3 = (q31_t) (((q63_t) (Ialpha) * (sinVal)) >> 31);
5247:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5248:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (Ibeta * cosVal) */
5249:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product4 = (q31_t) (((q63_t) (Ibeta) * (cosVal)) >> 31);
5250:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5251:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculate pId by adding the two intermediate products 1 and 2 */
5252:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pId = __QADD(product1, product2);
5253:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5254:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculate pIq by subtracting the two intermediate products 3 from 4 */
5255:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIq = __QSUB(product4, product3);
5256:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5257:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5258:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5259:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @} end of park group
5260:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5261:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5262:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5263:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Converts the elements of the Q7 vector to floating-point vector.
5264:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       is input pointer
5265:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       is output pointer
5266:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  is the number of samples to process
5267:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 112


5268:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_q7_to_float(
5269:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pSrc,
5270:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
5271:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
5272:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5273:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5274:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5275:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @ingroup groupController
5276:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5277:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5278:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5279:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @defgroup inv_park Vector Inverse Park transform
5280:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Inverse Park transform converts the input flux and torque components to two-coordinate vector.
5281:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5282:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5283:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5284:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Algorithm
5285:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \image html parkInvFormula.gif
5286:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * where <code>pIalpha</code> and <code>pIbeta</code> are the stator vector components,
5287:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>Id</code> and <code>Iq</code> are rotor vector components and <code>cosVal</code> and <c
5288:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * cosine and sine values of theta (rotor flux position).
5289:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Fixed-Point Behavior
5290:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Park transform.
5291:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5292:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5293:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5294:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5295:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5296:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @addtogroup inv_park
5297:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @{
5298:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5299:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5300:..\CMSIS_DSP_LIB\Include/arm_math.h ****    /**
5301:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Floating-point Inverse Park transform
5302:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Id       input coordinate of rotor reference frame d
5303:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Iq       input coordinate of rotor reference frame q
5304:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5305:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5306:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  sinVal   sine value of rotation angle theta
5307:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  cosVal   cosine value of rotation angle theta
5308:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5309:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE void arm_inv_park_f32(
5310:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t Id,
5311:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t Iq,
5312:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pIalpha,
5313:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pIbeta,
5314:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t sinVal,
5315:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t cosVal)
5316:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5317:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculate pIalpha using the equation, pIalpha = Id * cosVal - Iq * sinVal */
5318:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIalpha = Id * cosVal - Iq * sinVal;
5319:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5320:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculate pIbeta using the equation, pIbeta = Id * sinVal + Iq * cosVal */
5321:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIbeta = Id * sinVal + Iq * cosVal;
5322:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5323:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5324:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 113


5325:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5326:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Inverse Park transform for   Q31 version
5327:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Id       input coordinate of rotor reference frame d
5328:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  Iq       input coordinate of rotor reference frame q
5329:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5330:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5331:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  sinVal   sine value of rotation angle theta
5332:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  cosVal   cosine value of rotation angle theta
5333:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5334:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5335:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
5336:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
5337:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5338:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * There is saturation on the addition, hence there is no risk of overflow.
5339:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5340:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE void arm_inv_park_q31(
5341:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t Id,
5342:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t Iq,
5343:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pIalpha,
5344:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pIbeta,
5345:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t sinVal,
5346:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t cosVal)
5347:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5348:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5349:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t product3, product4;                    /* Temporary variables used to store intermediate 
5350:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5351:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (Id * cosVal) */
5352:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product1 = (q31_t) (((q63_t) (Id) * (cosVal)) >> 31);
5353:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5354:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (Iq * sinVal) */
5355:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product2 = (q31_t) (((q63_t) (Iq) * (sinVal)) >> 31);
5356:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5357:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5358:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (Id * sinVal) */
5359:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product3 = (q31_t) (((q63_t) (Id) * (sinVal)) >> 31);
5360:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5361:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Intermediate product is calculated by (Iq * cosVal) */
5362:..\CMSIS_DSP_LIB\Include/arm_math.h ****     product4 = (q31_t) (((q63_t) (Iq) * (cosVal)) >> 31);
5363:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5364:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculate pIalpha by using the two intermediate products 1 and 2 */
5365:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIalpha = __QSUB(product1, product2);
5366:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5367:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculate pIbeta by using the two intermediate products 3 and 4 */
5368:..\CMSIS_DSP_LIB\Include/arm_math.h ****     *pIbeta = __QADD(product4, product3);
5369:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5370:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5371:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5372:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @} end of Inverse park group
5373:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5374:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5375:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5376:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5377:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Converts the elements of the Q31 vector to floating-point vector.
5378:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  pSrc       is input pointer
5379:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pDst       is output pointer
5380:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  blockSize  is the number of samples to process
5381:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 114


5382:..\CMSIS_DSP_LIB\Include/arm_math.h ****   void arm_q31_to_float(
5383:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pSrc,
5384:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pDst,
5385:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t blockSize);
5386:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5387:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5388:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @ingroup groupInterpolation
5389:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5390:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5391:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5392:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @defgroup LinearInterpolate Linear Interpolation
5393:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5394:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Linear interpolation is a method of curve fitting using linear polynomials.
5395:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Linear interpolation works by effectively drawing a straight line between two neighboring samp
5396:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5397:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
5398:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \image html LinearInterp.gif "Linear interpolation"
5399:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5400:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
5401:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * A  Linear Interpolate function calculates an output value(y), for the input(x)
5402:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * using linear interpolation of the input values x0, x1( nearest input values) and the output va
5403:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5404:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par Algorithm:
5405:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <pre>
5406:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *       y = y0 + (x - x0) * ((y1 - y0)/(x1-x0))
5407:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *       where x0, x1 are nearest values of input x
5408:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *             y0, y1 are nearest values to output y
5409:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * </pre>
5410:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5411:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
5412:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * This set of functions implements Linear interpolation process
5413:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * for Q7, Q15, Q31, and floating-point data types.  The functions operate on a single
5414:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * sample of data and each call to the function returns a single processed value.
5415:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>S</code> points to an instance of the Linear Interpolate function data structure.
5416:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>x</code> is the input sample value. The functions returns the output value.
5417:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5418:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
5419:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * if x is outside of the table boundary, Linear interpolation returns first value of the table
5420:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * if x is below input range and returns last value of table if x is above range.
5421:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5422:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5423:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5424:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @addtogroup LinearInterpolate
5425:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @{
5426:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5427:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5428:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5429:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Process function for the floating-point Linear Interpolation Function.
5430:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in,out] S  is an instance of the floating-point Linear Interpolation structure
5431:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]     x  input sample to process
5432:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return y processed output sample.
5433:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5434:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5435:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE float32_t arm_linear_interp_f32(
5436:..\CMSIS_DSP_LIB\Include/arm_math.h ****   arm_linear_interp_instance_f32 * S,
5437:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t x)
5438:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 115


5439:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t y;
5440:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t x0, x1;                            /* Nearest input values */
5441:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t y0, y1;                            /* Nearest output values */
5442:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t xSpacing = S->xSpacing;            /* spacing between input values */
5443:..\CMSIS_DSP_LIB\Include/arm_math.h ****     int32_t i;                                   /* Index variable */
5444:..\CMSIS_DSP_LIB\Include/arm_math.h ****     float32_t *pYData = S->pYData;               /* pointer to output table */
5445:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5446:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Calculation of index */
5447:..\CMSIS_DSP_LIB\Include/arm_math.h ****     i = (int32_t) ((x - S->x1) / xSpacing);
5448:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5449:..\CMSIS_DSP_LIB\Include/arm_math.h ****     if(i < 0)
5450:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5451:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Iniatilize output for below specified range as least output value of table */
5452:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y = pYData[0];
5453:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5454:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else if((uint32_t)i >= S->nValues)
5455:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5456:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Iniatilize output for above specified range as last output value of table */
5457:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y = pYData[S->nValues - 1];
5458:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5459:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else
5460:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5461:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Calculation of nearest input values */
5462:..\CMSIS_DSP_LIB\Include/arm_math.h ****       x0 = S->x1 +  i      * xSpacing;
5463:..\CMSIS_DSP_LIB\Include/arm_math.h ****       x1 = S->x1 + (i + 1) * xSpacing;
5464:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5465:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Read of nearest output values */
5466:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y0 = pYData[i];
5467:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y1 = pYData[i + 1];
5468:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5469:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Calculation of output */
5470:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y = y0 + (x - x0) * ((y1 - y0) / (x1 - x0));
5471:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5472:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5473:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5474:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* returns output value */
5475:..\CMSIS_DSP_LIB\Include/arm_math.h ****     return (y);
5476:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5477:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5478:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5479:..\CMSIS_DSP_LIB\Include/arm_math.h ****    /**
5480:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5481:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Process function for the Q31 Linear Interpolation Function.
5482:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pYData   pointer to Q31 Linear Interpolation table
5483:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] x        input sample to process
5484:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] nValues  number of table values
5485:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return y processed output sample.
5486:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5487:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
5488:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 b
5489:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * This function can support maximum of table size 2^12.
5490:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5491:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5492:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q31_t arm_linear_interp_q31(
5493:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t * pYData,
5494:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t x,
5495:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t nValues)
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 116


5496:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5497:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t y;                                     /* output */
5498:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t y0, y1;                                /* Nearest output values */
5499:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t fract;                                 /* fractional part */
5500:..\CMSIS_DSP_LIB\Include/arm_math.h ****     int32_t index;                               /* Index to read nearest output values */
5501:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5502:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Input is in 12.20 format */
5503:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* 12 bits for the table index */
5504:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Index value calculation */
5505:..\CMSIS_DSP_LIB\Include/arm_math.h ****     index = ((x & (q31_t)0xFFF00000) >> 20);
5506:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5507:..\CMSIS_DSP_LIB\Include/arm_math.h ****     if(index >= (int32_t)(nValues - 1))
5508:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5509:..\CMSIS_DSP_LIB\Include/arm_math.h ****       return (pYData[nValues - 1]);
5510:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5511:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else if(index < 0)
5512:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5513:..\CMSIS_DSP_LIB\Include/arm_math.h ****       return (pYData[0]);
5514:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5515:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else
5516:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5517:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* 20 bits for the fractional part */
5518:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* shift left by 11 to keep fract in 1.31 format */
5519:..\CMSIS_DSP_LIB\Include/arm_math.h ****       fract = (x & 0x000FFFFF) << 11;
5520:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5521:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Read two nearest output values from the index in 1.31(q31) format */
5522:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y0 = pYData[index];
5523:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y1 = pYData[index + 1];
5524:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5525:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Calculation of y0 * (1-fract) and y is in 2.30 format */
5526:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y = ((q31_t) ((q63_t) y0 * (0x7FFFFFFF - fract) >> 32));
5527:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5528:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Calculation of y0 * (1-fract) + y1 *fract and y is in 2.30 format */
5529:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y += ((q31_t) (((q63_t) y1 * fract) >> 32));
5530:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5531:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Convert y to 1.31 format */
5532:..\CMSIS_DSP_LIB\Include/arm_math.h ****       return (y << 1u);
5533:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5534:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5535:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5536:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5537:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5538:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5539:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Process function for the Q15 Linear Interpolation Function.
5540:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pYData   pointer to Q15 Linear Interpolation table
5541:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] x        input sample to process
5542:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] nValues  number of table values
5543:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return y processed output sample.
5544:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5545:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
5546:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 b
5547:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * This function can support maximum of table size 2^12.
5548:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5549:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5550:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q15_t arm_linear_interp_q15(
5551:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t * pYData,
5552:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t x,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 117


5553:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t nValues)
5554:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5555:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q63_t y;                                     /* output */
5556:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q15_t y0, y1;                                /* Nearest output values */
5557:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t fract;                                 /* fractional part */
5558:..\CMSIS_DSP_LIB\Include/arm_math.h ****     int32_t index;                               /* Index to read nearest output values */
5559:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5560:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Input is in 12.20 format */
5561:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* 12 bits for the table index */
5562:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Index value calculation */
5563:..\CMSIS_DSP_LIB\Include/arm_math.h ****     index = ((x & (int32_t)0xFFF00000) >> 20);
5564:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5565:..\CMSIS_DSP_LIB\Include/arm_math.h ****     if(index >= (int32_t)(nValues - 1))
5566:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5567:..\CMSIS_DSP_LIB\Include/arm_math.h ****       return (pYData[nValues - 1]);
5568:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5569:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else if(index < 0)
5570:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5571:..\CMSIS_DSP_LIB\Include/arm_math.h ****       return (pYData[0]);
5572:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5573:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else
5574:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5575:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* 20 bits for the fractional part */
5576:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* fract is in 12.20 format */
5577:..\CMSIS_DSP_LIB\Include/arm_math.h ****       fract = (x & 0x000FFFFF);
5578:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5579:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Read two nearest output values from the index */
5580:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y0 = pYData[index];
5581:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y1 = pYData[index + 1];
5582:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5583:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Calculation of y0 * (1-fract) and y is in 13.35 format */
5584:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y = ((q63_t) y0 * (0xFFFFF - fract));
5585:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5586:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Calculation of (y0 * (1-fract) + y1 * fract) and y is in 13.35 format */
5587:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y += ((q63_t) y1 * (fract));
5588:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5589:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* convert y to 1.15 format */
5590:..\CMSIS_DSP_LIB\Include/arm_math.h ****       return (q15_t) (y >> 20);
5591:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5592:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5593:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5594:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5595:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5596:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5597:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Process function for the Q7 Linear Interpolation Function.
5598:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] pYData   pointer to Q7 Linear Interpolation table
5599:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] x        input sample to process
5600:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] nValues  number of table values
5601:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return y processed output sample.
5602:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5603:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * \par
5604:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 b
5605:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * This function can support maximum of table size 2^12.
5606:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5607:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE q7_t arm_linear_interp_q7(
5608:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q7_t * pYData,
5609:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t x,
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 118


5610:..\CMSIS_DSP_LIB\Include/arm_math.h ****   uint32_t nValues)
5611:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5612:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t y;                                     /* output */
5613:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q7_t y0, y1;                                 /* Nearest output values */
5614:..\CMSIS_DSP_LIB\Include/arm_math.h ****     q31_t fract;                                 /* fractional part */
5615:..\CMSIS_DSP_LIB\Include/arm_math.h ****     uint32_t index;                              /* Index to read nearest output values */
5616:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5617:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Input is in 12.20 format */
5618:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* 12 bits for the table index */
5619:..\CMSIS_DSP_LIB\Include/arm_math.h ****     /* Index value calculation */
5620:..\CMSIS_DSP_LIB\Include/arm_math.h ****     if (x < 0)
5621:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5622:..\CMSIS_DSP_LIB\Include/arm_math.h ****       return (pYData[0]);
5623:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5624:..\CMSIS_DSP_LIB\Include/arm_math.h ****     index = (x >> 20) & 0xfff;
5625:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5626:..\CMSIS_DSP_LIB\Include/arm_math.h ****     if(index >= (nValues - 1))
5627:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5628:..\CMSIS_DSP_LIB\Include/arm_math.h ****       return (pYData[nValues - 1]);
5629:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5630:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else
5631:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5632:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* 20 bits for the fractional part */
5633:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* fract is in 12.20 format */
5634:..\CMSIS_DSP_LIB\Include/arm_math.h ****       fract = (x & 0x000FFFFF);
5635:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5636:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Read two nearest output values from the index and are in 1.7(q7) format */
5637:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y0 = pYData[index];
5638:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y1 = pYData[index + 1];
5639:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5640:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Calculation of y0 * (1-fract ) and y is in 13.27(q27) format */
5641:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y = ((y0 * (0xFFFFF - fract)));
5642:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5643:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* Calculation of y1 * fract + y0 * (1-fract) and y is in 13.27(q27) format */
5644:..\CMSIS_DSP_LIB\Include/arm_math.h ****       y += (y1 * fract);
5645:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5646:..\CMSIS_DSP_LIB\Include/arm_math.h ****       /* convert y to 1.7(q7) format */
5647:..\CMSIS_DSP_LIB\Include/arm_math.h ****       return (q7_t) (y >> 20);
5648:..\CMSIS_DSP_LIB\Include/arm_math.h ****      }
5649:..\CMSIS_DSP_LIB\Include/arm_math.h ****   }
5650:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5651:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5652:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @} end of LinearInterpolate group
5653:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5654:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5655:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5656:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric sine function for floating-point data.
5657:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] x  input value in radians.
5658:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  sin(x).
5659:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5660:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t arm_sin_f32(
5661:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t x);
5662:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5663:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5664:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5665:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric sine function for Q31 data.
5666:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] x  Scaled input value in radians.
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 119


5667:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  sin(x).
5668:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5669:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t arm_sin_q31(
5670:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t x);
5671:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5672:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5673:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5674:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric sine function for Q15 data.
5675:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] x  Scaled input value in radians.
5676:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  sin(x).
5677:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5678:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t arm_sin_q15(
5679:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t x);
5680:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5681:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5682:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5683:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric cosine function for floating-point data.
5684:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] x  input value in radians.
5685:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  cos(x).
5686:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5687:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t arm_cos_f32(
5688:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t x);
5689:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5690:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5691:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5692:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief Fast approximation to the trigonometric cosine function for Q31 data.
5693:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] x  Scaled input value in radians.
5694:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  cos(x).
5695:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5696:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t arm_cos_q31(
5697:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q31_t x);
5698:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5699:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5700:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5701:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric cosine function for Q15 data.
5702:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in] x  Scaled input value in radians.
5703:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return  cos(x).
5704:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5705:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t arm_cos_q15(
5706:..\CMSIS_DSP_LIB\Include/arm_math.h ****   q15_t x);
5707:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5708:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5709:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5710:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @ingroup groupFastMath
5711:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5712:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5713:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5714:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5715:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @defgroup SQRT Square Root
5716:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *
5717:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * Computes the square root of a number.
5718:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * There are separate functions for Q15, Q31, and floating-point data types.
5719:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * The square root function is computed using the Newton-Raphson algorithm.
5720:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * This is an iterative algorithm of the form:
5721:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <pre>
5722:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *      x1 = x0 - f(x0)/f'(x0)
5723:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * </pre>
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 120


5724:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * where <code>x1</code> is the current estimate,
5725:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>x0</code> is the previous estimate, and
5726:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>f'(x0)</code> is the derivative of <code>f()</code> evaluated at <code>x0</code>.
5727:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * For the square root function, the algorithm reduces to:
5728:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <pre>
5729:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *     x0 = in/2                         [initial guess]
5730:..\CMSIS_DSP_LIB\Include/arm_math.h ****    *     x1 = 1/2 * ( x0 + in / x0)        [each iteration]
5731:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * </pre>
5732:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5733:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5734:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5735:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5736:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @addtogroup SQRT
5737:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @{
5738:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5739:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5740:..\CMSIS_DSP_LIB\Include/arm_math.h ****   /**
5741:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @brief  Floating-point square root function.
5742:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[in]  in    input value.
5743:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @param[out] pOut  square root of input value.
5744:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * @return The function returns ARM_MATH_SUCCESS if input value is positive value or ARM_MATH_ARG
5745:..\CMSIS_DSP_LIB\Include/arm_math.h ****    * <code>in</code> is negative value and returns zero output for negative values.
5746:..\CMSIS_DSP_LIB\Include/arm_math.h ****    */
5747:..\CMSIS_DSP_LIB\Include/arm_math.h ****   static __INLINE arm_status arm_sqrt_f32(
5748:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t in,
5749:..\CMSIS_DSP_LIB\Include/arm_math.h ****   float32_t * pOut)
5750:..\CMSIS_DSP_LIB\Include/arm_math.h ****   {
5751:..\CMSIS_DSP_LIB\Include/arm_math.h ****     if(in >= 0.0f)
 671              		.loc 2 5751 0
 672 0178 0021     		movs	r1, #0
 673 017a FFF7FEFF 		bl	__aeabi_fcmpge
 674              	.LVL74:
 675 017e 20B1     		cbz	r0, .L78
5752:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5753:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5754:..\CMSIS_DSP_LIB\Include/arm_math.h **** #if   (__FPU_USED == 1) && defined ( __CC_ARM   )
5755:..\CMSIS_DSP_LIB\Include/arm_math.h ****       *pOut = __sqrtf(in);
5756:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif (__FPU_USED == 1) && (defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050))
5757:..\CMSIS_DSP_LIB\Include/arm_math.h ****       *pOut = __builtin_sqrtf(in);
5758:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif (__FPU_USED == 1) && defined(__GNUC__)
5759:..\CMSIS_DSP_LIB\Include/arm_math.h ****       *pOut = __builtin_sqrtf(in);
5760:..\CMSIS_DSP_LIB\Include/arm_math.h **** #elif (__FPU_USED == 1) && defined ( __ICCARM__ ) && (__VER__ >= 6040000)
5761:..\CMSIS_DSP_LIB\Include/arm_math.h ****       __ASM("VSQRT.F32 %0,%1" : "=t"(*pOut) : "t"(in));
5762:..\CMSIS_DSP_LIB\Include/arm_math.h **** #else
5763:..\CMSIS_DSP_LIB\Include/arm_math.h ****       *pOut = sqrtf(in);
 676              		.loc 2 5763 0
 677 0180 2046     		mov	r0, r4
 678 0182 FFF7FEFF 		bl	sqrtf
 679              	.LVL75:
 680 0186 0446     		mov	r4, r0
 681              	.LVL76:
 682 0188 00E0     		b	.L42
 683              	.LVL77:
 684              	.L78:
5764:..\CMSIS_DSP_LIB\Include/arm_math.h **** #endif
5765:..\CMSIS_DSP_LIB\Include/arm_math.h **** 
5766:..\CMSIS_DSP_LIB\Include/arm_math.h ****       return (ARM_MATH_SUCCESS);
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 121


5767:..\CMSIS_DSP_LIB\Include/arm_math.h ****     }
5768:..\CMSIS_DSP_LIB\Include/arm_math.h ****     else
5769:..\CMSIS_DSP_LIB\Include/arm_math.h ****     {
5770:..\CMSIS_DSP_LIB\Include/arm_math.h ****       *pOut = 0.0f;
 685              		.loc 2 5770 0
 686 018a 0024     		movs	r4, #0
 687              	.LVL78:
 688              	.L42:
 689              	.LBE5:
 690              	.LBE4:
 387:CLCD_2x16_control.c **** 
 388:CLCD_2x16_control.c ****             /*********************************************************
 389:CLCD_2x16_control.c ****             * direction of srcA_buf_f32 and srcB_buf_f32
 390:CLCD_2x16_control.c ****             **********************************************************/
 391:CLCD_2x16_control.c ****             dir = atan2(rms[1], rms[0]);
 691              		.loc 1 391 0
 692 018c 0798     		ldr	r0, [sp, #28]	@ float
 693 018e FFF7FEFF 		bl	__aeabi_f2d
 694              	.LVL79:
 695 0192 0646     		mov	r6, r0
 696 0194 0F46     		mov	r7, r1
 697              	.LVL80:
 698 0196 0698     		ldr	r0, [sp, #24]	@ float
 699 0198 FFF7FEFF 		bl	__aeabi_f2d
 700              	.LVL81:
 701 019c 0246     		mov	r2, r0
 702 019e 0B46     		mov	r3, r1
 703 01a0 3046     		mov	r0, r6
 704 01a2 3946     		mov	r1, r7
 705 01a4 FFF7FEFF 		bl	atan2
 706              	.LVL82:
 392:CLCD_2x16_control.c ****             dir_deg = (dir / 3.14159) * 180;
 707              		.loc 1 392 0
 708 01a8 39A3     		adr	r3, .L81
 709 01aa D3E90023 		ldrd	r2, [r3]
 710 01ae FFF7FEFF 		bl	__aeabi_ddiv
 711              	.LVL83:
 712 01b2 0022     		movs	r2, #0
 713 01b4 404B     		ldr	r3, .L81+40
 714 01b6 FFF7FEFF 		bl	__aeabi_dmul
 715              	.LVL84:
 716 01ba 0646     		mov	r6, r0
 717 01bc 0D46     		mov	r5, r1
 718              	.LVL85:
 393:CLCD_2x16_control.c ****             if (abs((int)phi_deg) <= 90)
 719              		.loc 1 393 0
 720 01be DDE90001 		ldrd	r0, [sp]
 721              	.LVL86:
 722 01c2 FFF7FEFF 		bl	__aeabi_d2iz
 723              	.LVL87:
 724 01c6 5A30     		adds	r0, r0, #90
 725 01c8 B428     		cmp	r0, #180
 726 01ca 01D8     		bhi	.L44
 394:CLCD_2x16_control.c ****                 dir_deg *= (-1);        /* (-) means left side */
 727              		.loc 1 394 0
 728 01cc 05F10045 		add	r5, r5, #-2147483648
 729              	.LVL88:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 122


 730              	.L44:
 395:CLCD_2x16_control.c ****             
 396:CLCD_2x16_control.c ****             update_level_flag = 1;      /* flag for LEVEL diaplay */
 397:CLCD_2x16_control.c ****             update_gain_flag = 1;       /* flag for PGA Gain */
 398:CLCD_2x16_control.c ****             xSemaphoreGive(xMutex_RX_BUF);
 731              		.loc 1 398 0
 732 01d0 354B     		ldr	r3, .L81+24
 733 01d2 1868     		ldr	r0, [r3]
 734 01d4 0021     		movs	r1, #0
 735 01d6 0A46     		mov	r2, r1
 736 01d8 0B46     		mov	r3, r1
 737 01da FFF7FEFF 		bl	xQueueGenericSend
 738              	.LVL89:
 399:CLCD_2x16_control.c **** 
 400:CLCD_2x16_control.c ****             MON_Write(0u);      /* Debug */
 739              		.loc 1 400 0
 740 01de 0020     		movs	r0, #0
 741 01e0 FFF7FEFF 		bl	MON_Write
 742              	.LVL90:
 397:CLCD_2x16_control.c ****             xSemaphoreGive(xMutex_RX_BUF);
 743              		.loc 1 397 0
 744 01e4 0127     		movs	r7, #1
 396:CLCD_2x16_control.c ****             update_gain_flag = 1;       /* flag for PGA Gain */
 745              		.loc 1 396 0
 746 01e6 B846     		mov	r8, r7
 747              	.LVL91:
 748              	.L40:
 401:CLCD_2x16_control.c ****         }    
 402:CLCD_2x16_control.c **** 
 403:CLCD_2x16_control.c ****         if (update_level_flag)
 749              		.loc 1 403 0
 750 01e8 B8F1000F 		cmp	r8, #0
 751 01ec 00F01481 		beq	.L45
 404:CLCD_2x16_control.c ****         {
 405:CLCD_2x16_control.c ****             if (mode == DISTANCE)
 752              		.loc 1 405 0
 753 01f0 294B     		ldr	r3, .L81+8
 754 01f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 755 01f4 012B     		cmp	r3, #1
 756 01f6 40F0B280 		bne	.L79
 757 01fa 2BE0     		b	.L72
 758              	.LVL92:
 759              	.L51:
 406:CLCD_2x16_control.c ****             {
 407:CLCD_2x16_control.c ****                 n_bar = 0xff;
 408:CLCD_2x16_control.c ****                 for (i = 0; i < DIR_MAX; i++)
 409:CLCD_2x16_control.c ****                 {
 410:CLCD_2x16_control.c ****                     if ((dir_deg >= dir_tab[i].angle_min)
 760              		.loc 1 410 0
 761 01fc 08EB4803 		add	r3, r8, r8, lsl #1
 762 0200 5B00     		lsls	r3, r3, #1
 763 0202 264A     		ldr	r2, .L81+12
 764 0204 1344     		add	r3, r3, r2
 765 0206 B3F93C00 		ldrsh	r0, [r3, #60]
 766 020a FFF7FEFF 		bl	__aeabi_i2d
 767              	.LVL93:
 768 020e 3246     		mov	r2, r6
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 123


 769 0210 2B46     		mov	r3, r5
 770 0212 FFF7FEFF 		bl	__aeabi_dcmple
 771              	.LVL94:
 772 0216 C0B1     		cbz	r0, .L48
 411:CLCD_2x16_control.c ****                         && (dir_deg < dir_tab[i].angle_max))
 773              		.loc 1 411 0
 774 0218 08EB4802 		add	r2, r8, r8, lsl #1
 775 021c 5200     		lsls	r2, r2, #1
 776 021e 274B     		ldr	r3, .L81+44
 777 0220 1344     		add	r3, r3, r2
 778 0222 B3F90200 		ldrsh	r0, [r3, #2]
 779 0226 FFF7FEFF 		bl	__aeabi_i2d
 780              	.LVL95:
 781 022a 3246     		mov	r2, r6
 782 022c 2B46     		mov	r3, r5
 783 022e FFF7FEFF 		bl	__aeabi_dcmpgt
 784              	.LVL96:
 785 0232 50B1     		cbz	r0, .L48
 412:CLCD_2x16_control.c ****                     {
 413:CLCD_2x16_control.c ****                         bar_position = dir_tab[i].mark_position;
 786              		.loc 1 413 0
 787 0234 194A     		ldr	r2, .L81+12
 788 0236 4FEA4801 		lsl	r1, r8, #1
 789 023a 01EB0803 		add	r3, r1, r8
 790 023e 5B00     		lsls	r3, r3, #1
 791 0240 1344     		add	r3, r3, r2
 792 0242 93F840B0 		ldrb	fp, [r3, #64]	@ zero_extendqisi2
 793              	.LVL97:
 414:CLCD_2x16_control.c ****                         n_bar = dir_tab[i].n_mark;
 794              		.loc 1 414 0
 795 0246 93F841A0 		ldrb	r10, [r3, #65]	@ zero_extendqisi2
 796              	.LVL98:
 797              	.L48:
 408:CLCD_2x16_control.c ****                 {
 798              		.loc 1 408 0 discriminator 2
 799 024a 08F10108 		add	r8, r8, #1
 800              	.LVL99:
 801 024e 5FFA88F8 		uxtb	r8, r8
 802              	.LVL100:
 803 0252 03E0     		b	.L46
 804              	.LVL101:
 805              	.L72:
 806 0254 4FF00008 		mov	r8, #0
 807              	.LVL102:
 808 0258 4FF0FF0A 		mov	r10, #255
 809              	.L46:
 810              	.LVL103:
 408:CLCD_2x16_control.c ****                 {
 811              		.loc 1 408 0 is_stmt 0 discriminator 1
 812 025c B8F10C0F 		cmp	r8, #12
 813 0260 CCD9     		bls	.L51
 415:CLCD_2x16_control.c ****                     }
 416:CLCD_2x16_control.c ****                 }
 417:CLCD_2x16_control.c ****                 if ((car_flag) && (n_bar < BAR_MAX))
 814              		.loc 1 417 0 is_stmt 1
 815 0262 9DF82A30 		ldrb	r3, [sp, #42]	@ zero_extendqisi2
 816 0266 6BB3     		cbz	r3, .L52
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 124


 817              		.loc 1 417 0 is_stmt 0 discriminator 1
 818 0268 BAF10C0F 		cmp	r10, #12
 819 026c 2AD8     		bhi	.L52
 418:CLCD_2x16_control.c ****                 {
 419:CLCD_2x16_control.c ****                     I2C_CLCD_Position(0u, bar_position);
 820              		.loc 1 419 0 is_stmt 1
 821 026e 0020     		movs	r0, #0
 822 0270 5946     		mov	r1, fp
 823 0272 FFF7FEFF 		bl	I2C_CLCD_Position
 824              	.LVL104:
 420:CLCD_2x16_control.c ****                     sprintf(str, "%s", bar[n_bar]);
 825              		.loc 1 420 0
 826 0276 0BA8     		add	r0, sp, #44
 827 0278 1149     		ldr	r1, .L81+48
 828 027a 01EB0A11 		add	r1, r1, r10, lsl #4
 829 027e FFF7FEFF 		bl	strcpy
 830              	.LVL105:
 421:CLCD_2x16_control.c ****                     I2C_CLCD_PrintString(str);
 831              		.loc 1 421 0
 832 0282 0BA8     		add	r0, sp, #44
 833 0284 FFF7FEFF 		bl	I2C_CLCD_PrintString
 834              	.LVL106:
 835 0288 23E0     		b	.L53
 836              	.L82:
 837 028a 00BFAFF3 		.align	3
 837      0080
 838              	.L81:
 839 0290 6E861BF0 		.word	-266631570
 840 0294 F9210940 		.word	1074340345
 841 0298 00000000 		.word	.LANCHOR0
 842 029c 00000000 		.word	.LANCHOR1
 843 02a0 00000000 		.word	xQueue_KEY
 844 02a4 00000000 		.word	xQueue_RXD
 845 02a8 00000000 		.word	xMutex_RX_BUF
 846 02ac 00000000 		.word	ANT1_buf_f32
 847 02b0 00000000 		.word	ANT2_buf_f32
 848 02b4 00000000 		.word	dst_buf_f32
 849 02b8 00806640 		.word	1080459264
 850 02bc 3C000000 		.word	.LANCHOR1+60
 851 02c0 8C000000 		.word	.LANCHOR1+140
 852              	.L52:
 422:CLCD_2x16_control.c ****                 }
 423:CLCD_2x16_control.c ****                 else
 424:CLCD_2x16_control.c ****                 {
 425:CLCD_2x16_control.c ****                     I2C_CLCD_Position(0u, 0u);
 853              		.loc 1 425 0
 854 02c4 0020     		movs	r0, #0
 855 02c6 0146     		mov	r1, r0
 856 02c8 FFF7FEFF 		bl	I2C_CLCD_Position
 857              	.LVL107:
 426:CLCD_2x16_control.c ****                     //I2C_CLCD_PrintString("   |      |      |  ");
 427:CLCD_2x16_control.c ****                     I2C_CLCD_PrintString("|      |      |  ");
 858              		.loc 1 427 0
 859 02cc 9C48     		ldr	r0, .L83+16
 860 02ce FFF7FEFF 		bl	I2C_CLCD_PrintString
 861              	.LVL108:
 862              	.L53:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 125


 428:CLCD_2x16_control.c ****                 }
 429:CLCD_2x16_control.c ****                 
 430:CLCD_2x16_control.c ****                 /* Distance to the target */
 431:CLCD_2x16_control.c ****                 //I2C_CLCD_Position(1u, 10u);
 432:CLCD_2x16_control.c ****                 I2C_CLCD_Position(1u, 10u);
 863              		.loc 1 432 0
 864 02d2 0120     		movs	r0, #1
 865 02d4 0A21     		movs	r1, #10
 866 02d6 FFF7FEFF 		bl	I2C_CLCD_Position
 867              	.LVL109:
 433:CLCD_2x16_control.c ****                 if (car_flag)
 868              		.loc 1 433 0
 869 02da 9DF82A30 		ldrb	r3, [sp, #42]	@ zero_extendqisi2
 870 02de 93B3     		cbz	r3, .L54
 434:CLCD_2x16_control.c ****                 {
 435:CLCD_2x16_control.c ****                     //(2017.01.18) moved PGA position after the MIX
 436:CLCD_2x16_control.c ****                     //rms_pga = rms_mixed / pga_gain[gain].magnification;
 437:CLCD_2x16_control.c ****                     //(2017.06.09) added RF BIAS control
 438:CLCD_2x16_control.c ****                     rms_pga = (rms_mixed * pga_gain[gain].rec_rf_gain) / pga_gain[gain].magnificati
 871              		.loc 1 438 0
 872 02e0 984B     		ldr	r3, .L83+20
 873 02e2 B3F90280 		ldrsh	r8, [r3, #2]
 874              	.LVL110:
 875 02e6 DFF87492 		ldr	r9, .L83+44
 876 02ea 4FEA480A 		lsl	r10, r8, #1
 877              	.LVL111:
 878 02ee 0AEB0803 		add	r3, r10, r8
 879 02f2 5B00     		lsls	r3, r3, #1
 880 02f4 4B44     		add	r3, r3, r9
 881 02f6 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 882 02f8 FFF7FEFF 		bl	__aeabi_i2f
 883              	.LVL112:
 884 02fc 2146     		mov	r1, r4
 885 02fe FFF7FEFF 		bl	__aeabi_fmul
 886              	.LVL113:
 887 0302 0390     		str	r0, [sp, #12]	@ float
 888 0304 D044     		add	r8, r8, r10
 889 0306 4FEA4808 		lsl	r8, r8, #1
 890 030a C844     		add	r8, r8, r9
 891 030c 98F80100 		ldrb	r0, [r8, #1]	@ zero_extendqisi2
 892 0310 FFF7FEFF 		bl	__aeabi_i2f
 893              	.LVL114:
 894 0314 0146     		mov	r1, r0
 895 0316 0398     		ldr	r0, [sp, #12]	@ float
 896 0318 FFF7FEFF 		bl	__aeabi_fdiv
 897              	.LVL115:
 898 031c FFF7FEFF 		bl	__aeabi_f2d
 899              	.LVL116:
 439:CLCD_2x16_control.c ****                     distance = (FOP / pow(rms_pga, PORMS));
 900              		.loc 1 439 0
 901 0320 83A3     		adr	r3, .L83
 902 0322 D3E90023 		ldrd	r2, [r3]
 903 0326 FFF7FEFF 		bl	pow
 904              	.LVL117:
 905 032a 0246     		mov	r2, r0
 906 032c 0B46     		mov	r3, r1
 907 032e 82A1     		adr	r1, .L83+8
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 126


 908 0330 D1E90001 		ldrd	r0, [r1]
 909 0334 FFF7FEFF 		bl	__aeabi_ddiv
 910              	.LVL118:
 911 0338 0246     		mov	r2, r0
 912 033a 0B46     		mov	r3, r1
 913              	.LVL119:
 440:CLCD_2x16_control.c ****                     
 441:CLCD_2x16_control.c ****                     sprintf(str, "%+3.1f", distance);
 914              		.loc 1 441 0
 915 033c 0BA8     		add	r0, sp, #44
 916 033e 8249     		ldr	r1, .L83+24
 917 0340 FFF7FEFF 		bl	sprintf
 918              	.LVL120:
 919 0344 05E0     		b	.L55
 920              	.LVL121:
 921              	.L54:
 442:CLCD_2x16_control.c ****                 }
 443:CLCD_2x16_control.c ****                 else
 444:CLCD_2x16_control.c ****                     sprintf(str, "lost ");
 922              		.loc 1 444 0
 923 0346 814B     		ldr	r3, .L83+28
 924 0348 93E80300 		ldmia	r3, {r0, r1}
 925 034c 0B90     		str	r0, [sp, #44]
 926 034e ADF83010 		strh	r1, [sp, #48]	@ movhi
 927              	.LVL122:
 928              	.L55:
 445:CLCD_2x16_control.c ****                 I2C_CLCD_PrintString(str);
 929              		.loc 1 445 0
 930 0352 0BA8     		add	r0, sp, #44
 931 0354 FFF7FEFF 		bl	I2C_CLCD_PrintString
 932              	.LVL123:
 446:CLCD_2x16_control.c **** 
 447:CLCD_2x16_control.c ****                 /* ANT1 + ANT2 rms */
 448:CLCD_2x16_control.c ****                 //I2C_CLCD_Position(2u, 6u);
 449:CLCD_2x16_control.c ****                 //sprintf(str, "%6.1f", rms_mixed);
 450:CLCD_2x16_control.c ****                 //I2C_CLCD_PrintString(str);
 451:CLCD_2x16_control.c **** 
 452:CLCD_2x16_control.c ****                 /* PGA Gain */
 453:CLCD_2x16_control.c ****                 //CLCD_set_PGA_gain();
 454:CLCD_2x16_control.c ****             }
 455:CLCD_2x16_control.c ****             else if (mode == SIGNAL)
 456:CLCD_2x16_control.c ****             {
 457:CLCD_2x16_control.c ****                 /* ANT1, ANT2 level */
 458:CLCD_2x16_control.c ****                 I2C_CLCD_Position(0u, 6u);
 459:CLCD_2x16_control.c ****                 sprintf(str, "%6.1f", rms[0]);
 460:CLCD_2x16_control.c ****                 I2C_CLCD_PrintString(str);
 461:CLCD_2x16_control.c ****                 I2C_CLCD_Position(1u, 6u);
 462:CLCD_2x16_control.c ****                 sprintf(str, "%6.1f", rms[1]);
 463:CLCD_2x16_control.c ****                 I2C_CLCD_PrintString(str);
 464:CLCD_2x16_control.c ****                 /* PGA Gain */
 465:CLCD_2x16_control.c ****                 //CLCD_set_PGA_gain();
 466:CLCD_2x16_control.c **** 
 467:CLCD_2x16_control.c ****                 /* ANT1 - ANT2 phase */
 468:CLCD_2x16_control.c ****                 //I2C_CLCD_Position(3u, 8u);
 469:CLCD_2x16_control.c ****                 I2C_CLCD_Position(2u, 8u);
 470:CLCD_2x16_control.c ****                 if (car_flag)
 471:CLCD_2x16_control.c ****                     sprintf(str, "%+3.1f", phi_deg);
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 127


 472:CLCD_2x16_control.c ****                 else
 473:CLCD_2x16_control.c ****                     sprintf(str, "lost   ");
 474:CLCD_2x16_control.c ****                 I2C_CLCD_PrintString(str);
 475:CLCD_2x16_control.c ****             }
 476:CLCD_2x16_control.c ****             else if (mode == DIRECTION)
 477:CLCD_2x16_control.c ****             {
 478:CLCD_2x16_control.c ****                 /* Direction to the target */
 479:CLCD_2x16_control.c ****                 I2C_CLCD_Position(0u, 7u);
 480:CLCD_2x16_control.c ****                 if (car_flag)
 481:CLCD_2x16_control.c ****                     sprintf(str, "%+3.1f", dir_deg);
 482:CLCD_2x16_control.c ****                 else
 483:CLCD_2x16_control.c ****                     sprintf(str, "lost     ");
 484:CLCD_2x16_control.c ****                 I2C_CLCD_PrintString(str);
 485:CLCD_2x16_control.c **** 
 486:CLCD_2x16_control.c ****                 /* PGA Gain */
 487:CLCD_2x16_control.c ****                 CLCD_set_PGA_gain();
 488:CLCD_2x16_control.c ****             }
 489:CLCD_2x16_control.c ****             update_level_flag = 0;
 933              		.loc 1 489 0
 934 0358 4FF00008 		mov	r8, #0
 935 035c 5CE0     		b	.L45
 936              	.LVL124:
 937              	.L79:
 455:CLCD_2x16_control.c ****             {
 938              		.loc 1 455 0
 939 035e 022B     		cmp	r3, #2
 940 0360 3BD1     		bne	.L56
 458:CLCD_2x16_control.c ****                 sprintf(str, "%6.1f", rms[0]);
 941              		.loc 1 458 0
 942 0362 0020     		movs	r0, #0
 943 0364 0621     		movs	r1, #6
 944 0366 FFF7FEFF 		bl	I2C_CLCD_Position
 945              	.LVL125:
 459:CLCD_2x16_control.c ****                 I2C_CLCD_PrintString(str);
 946              		.loc 1 459 0
 947 036a DFF8F881 		ldr	r8, .L83+52
 948              	.LVL126:
 949 036e 0698     		ldr	r0, [sp, #24]	@ float
 950 0370 FFF7FEFF 		bl	__aeabi_f2d
 951              	.LVL127:
 952 0374 0246     		mov	r2, r0
 953 0376 0B46     		mov	r3, r1
 954 0378 0BA8     		add	r0, sp, #44
 955 037a 4146     		mov	r1, r8
 956 037c FFF7FEFF 		bl	sprintf
 957              	.LVL128:
 460:CLCD_2x16_control.c ****                 I2C_CLCD_Position(1u, 6u);
 958              		.loc 1 460 0
 959 0380 0BA8     		add	r0, sp, #44
 960 0382 FFF7FEFF 		bl	I2C_CLCD_PrintString
 961              	.LVL129:
 461:CLCD_2x16_control.c ****                 sprintf(str, "%6.1f", rms[1]);
 962              		.loc 1 461 0
 963 0386 0120     		movs	r0, #1
 964 0388 0621     		movs	r1, #6
 965 038a FFF7FEFF 		bl	I2C_CLCD_Position
 966              	.LVL130:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 128


 462:CLCD_2x16_control.c ****                 I2C_CLCD_PrintString(str);
 967              		.loc 1 462 0
 968 038e 0798     		ldr	r0, [sp, #28]	@ float
 969 0390 FFF7FEFF 		bl	__aeabi_f2d
 970              	.LVL131:
 971 0394 0246     		mov	r2, r0
 972 0396 0B46     		mov	r3, r1
 973 0398 0BA8     		add	r0, sp, #44
 974 039a 4146     		mov	r1, r8
 975 039c FFF7FEFF 		bl	sprintf
 976              	.LVL132:
 463:CLCD_2x16_control.c ****                 /* PGA Gain */
 977              		.loc 1 463 0
 978 03a0 0BA8     		add	r0, sp, #44
 979 03a2 FFF7FEFF 		bl	I2C_CLCD_PrintString
 980              	.LVL133:
 469:CLCD_2x16_control.c ****                 if (car_flag)
 981              		.loc 1 469 0
 982 03a6 0220     		movs	r0, #2
 983 03a8 0821     		movs	r1, #8
 984 03aa FFF7FEFF 		bl	I2C_CLCD_Position
 985              	.LVL134:
 470:CLCD_2x16_control.c ****                     sprintf(str, "%+3.1f", phi_deg);
 986              		.loc 1 470 0
 987 03ae 9DF82A30 		ldrb	r3, [sp, #42]	@ zero_extendqisi2
 988 03b2 33B1     		cbz	r3, .L57
 471:CLCD_2x16_control.c ****                 else
 989              		.loc 1 471 0
 990 03b4 0BA8     		add	r0, sp, #44
 991 03b6 6449     		ldr	r1, .L83+24
 992 03b8 DDE90023 		ldrd	r2, [sp]
 993 03bc FFF7FEFF 		bl	sprintf
 994              	.LVL135:
 995 03c0 05E0     		b	.L58
 996              	.L57:
 473:CLCD_2x16_control.c ****                 I2C_CLCD_PrintString(str);
 997              		.loc 1 473 0
 998 03c2 0BAB     		add	r3, sp, #44
 999 03c4 624A     		ldr	r2, .L83+32
 1000 03c6 92E80300 		ldmia	r2, {r0, r1}
 1001 03ca 83E80300 		stmia	r3, {r0, r1}
 1002              	.L58:
 474:CLCD_2x16_control.c ****             }
 1003              		.loc 1 474 0
 1004 03ce 0BA8     		add	r0, sp, #44
 1005 03d0 FFF7FEFF 		bl	I2C_CLCD_PrintString
 1006              	.LVL136:
 1007              		.loc 1 489 0
 1008 03d4 4FF00008 		mov	r8, #0
 1009 03d8 1EE0     		b	.L45
 1010              	.LVL137:
 1011              	.L56:
 476:CLCD_2x16_control.c ****             {
 1012              		.loc 1 476 0
 1013 03da 032B     		cmp	r3, #3
 1014 03dc 1AD1     		bne	.L73
 479:CLCD_2x16_control.c ****                 if (car_flag)
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 129


 1015              		.loc 1 479 0
 1016 03de 0020     		movs	r0, #0
 1017 03e0 0721     		movs	r1, #7
 1018 03e2 FFF7FEFF 		bl	I2C_CLCD_Position
 1019              	.LVL138:
 480:CLCD_2x16_control.c ****                     sprintf(str, "%+3.1f", dir_deg);
 1020              		.loc 1 480 0
 1021 03e6 9DF82A30 		ldrb	r3, [sp, #42]	@ zero_extendqisi2
 1022 03ea 33B1     		cbz	r3, .L59
 481:CLCD_2x16_control.c ****                 else
 1023              		.loc 1 481 0
 1024 03ec 0BA8     		add	r0, sp, #44
 1025 03ee 5649     		ldr	r1, .L83+24
 1026 03f0 3246     		mov	r2, r6
 1027 03f2 2B46     		mov	r3, r5
 1028 03f4 FFF7FEFF 		bl	sprintf
 1029              	.LVL139:
 1030 03f8 04E0     		b	.L60
 1031              	.L59:
 483:CLCD_2x16_control.c ****                 I2C_CLCD_PrintString(str);
 1032              		.loc 1 483 0
 1033 03fa 564A     		ldr	r2, .L83+36
 1034 03fc 0BAB     		add	r3, sp, #44
 1035 03fe 07CA     		ldmia	r2, {r0, r1, r2}
 1036 0400 03C3     		stmia	r3!, {r0, r1}
 1037 0402 1A80     		strh	r2, [r3]	@ movhi
 1038              	.L60:
 484:CLCD_2x16_control.c **** 
 1039              		.loc 1 484 0
 1040 0404 0BA8     		add	r0, sp, #44
 1041 0406 FFF7FEFF 		bl	I2C_CLCD_PrintString
 1042              	.LVL140:
 487:CLCD_2x16_control.c ****             }
 1043              		.loc 1 487 0
 1044 040a FFF7FEFF 		bl	CLCD_set_PGA_gain
 1045              	.LVL141:
 1046              		.loc 1 489 0
 1047 040e 4FF00008 		mov	r8, #0
 1048              	.LVL142:
 1049 0412 01E0     		b	.L45
 1050              	.LVL143:
 1051              	.L73:
 1052 0414 4FF00008 		mov	r8, #0
 1053              	.LVL144:
 1054              	.L45:
 490:CLCD_2x16_control.c ****         }
 491:CLCD_2x16_control.c **** 
 492:CLCD_2x16_control.c ****         /* Get click count of ROT */
 493:CLCD_2x16_control.c ****         if (uxQueueMessagesWaiting(xQueue_ROT) > 0)
 1055              		.loc 1 493 0
 1056 0418 4F4B     		ldr	r3, .L83+40
 1057 041a 1868     		ldr	r0, [r3]
 1058 041c FFF7FEFF 		bl	uxQueueMessagesWaiting
 1059              	.LVL145:
 1060 0420 0028     		cmp	r0, #0
 1061 0422 37D0     		beq	.L61
 494:CLCD_2x16_control.c ****         {
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 130


 495:CLCD_2x16_control.c ****             xQueueReceive(xQueue_ROT, &click, 0);
 1062              		.loc 1 495 0
 1063 0424 4C4B     		ldr	r3, .L83+40
 1064 0426 1868     		ldr	r0, [r3]
 1065 0428 0DF11701 		add	r1, sp, #23
 1066 042c 0022     		movs	r2, #0
 1067 042e 1346     		mov	r3, r2
 1068 0430 FFF7FEFF 		bl	xQueueGenericReceive
 1069              	.LVL146:
 496:CLCD_2x16_control.c ****             //if ((mode == SIGNAL) || (mode == DIRECTION) || (mode == DISTANCE))
 497:CLCD_2x16_control.c ****             if (mode == DIRECTION)
 1070              		.loc 1 497 0
 1071 0434 434B     		ldr	r3, .L83+20
 1072 0436 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1073 0438 032B     		cmp	r3, #3
 1074 043a 2BD1     		bne	.L61
 498:CLCD_2x16_control.c ****             {
 499:CLCD_2x16_control.c ****                 /* the target PGA gain */
 500:CLCD_2x16_control.c ****                 gain += click ;
 1075              		.loc 1 500 0
 1076 043c 9DF91710 		ldrsb	r1, [sp, #23]
 1077 0440 404A     		ldr	r2, .L83+20
 1078 0442 5388     		ldrh	r3, [r2, #2]
 1079 0444 0B44     		add	r3, r3, r1
 1080 0446 9BB2     		uxth	r3, r3
 1081 0448 5380     		strh	r3, [r2, #2]	@ movhi
 501:CLCD_2x16_control.c ****                 if (gain < 0)
 1082              		.loc 1 501 0
 1083 044a 13F4004F 		tst	r3, #32768
 1084 044e 02D0     		beq	.L62
 502:CLCD_2x16_control.c ****                     gain = 0;
 1085              		.loc 1 502 0
 1086 0450 0022     		movs	r2, #0
 1087 0452 3C4B     		ldr	r3, .L83+20
 1088 0454 5A80     		strh	r2, [r3, #2]	@ movhi
 1089              	.L62:
 503:CLCD_2x16_control.c ****                 if ((uint16)gain > (GAIN_MAX - 1))
 1090              		.loc 1 503 0
 1091 0456 3B4B     		ldr	r3, .L83+20
 1092 0458 5B88     		ldrh	r3, [r3, #2]
 1093 045a 092B     		cmp	r3, #9
 1094 045c 02D9     		bls	.L63
 504:CLCD_2x16_control.c ****                     gain = GAIN_MAX - 1;
 1095              		.loc 1 504 0
 1096 045e 0922     		movs	r2, #9
 1097 0460 384B     		ldr	r3, .L83+20
 1098 0462 5A80     		strh	r2, [r3, #2]	@ movhi
 1099              	.L63:
 505:CLCD_2x16_control.c ****                 /*set PGA gain*/
 506:CLCD_2x16_control.c ****                 PGA_1_SetGain(pga_gain[gain].pga_gain);
 1100              		.loc 1 506 0
 1101 0464 DFF8F490 		ldr	r9, .L83+44
 1102 0468 DFF8D8A0 		ldr	r10, .L83+20
 1103 046c BAF90230 		ldrsh	r3, [r10, #2]
 1104 0470 03EB4303 		add	r3, r3, r3, lsl #1
 1105 0474 5B00     		lsls	r3, r3, #1
 1106 0476 19F80300 		ldrb	r0, [r9, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 131


 1107 047a FFF7FEFF 		bl	PGA_1_SetGain
 1108              	.LVL147:
 507:CLCD_2x16_control.c ****                 PGA_2_SetGain(pga_gain[gain].pga_gain);
 1109              		.loc 1 507 0
 1110 047e BAF90230 		ldrsh	r3, [r10, #2]
 1111 0482 03EB4303 		add	r3, r3, r3, lsl #1
 1112 0486 5B00     		lsls	r3, r3, #1
 1113 0488 19F80300 		ldrb	r0, [r9, r3]	@ zero_extendqisi2
 1114 048c FFF7FEFF 		bl	PGA_2_SetGain
 1115              	.LVL148:
 508:CLCD_2x16_control.c ****                 // update Vth and Vbias
 509:CLCD_2x16_control.c ****                 set_Vth_Vbias();
 1116              		.loc 1 509 0
 1117 0490 FFF7FEFF 		bl	set_Vth_Vbias
 1118              	.LVL149:
 1119              	.L61:
 510:CLCD_2x16_control.c **** 
 511:CLCD_2x16_control.c ****                 /* PGA Gain */
 512:CLCD_2x16_control.c ****                 //CLCD_set_PGA_gain();
 513:CLCD_2x16_control.c ****             }
 514:CLCD_2x16_control.c **** #if 0
 515:CLCD_2x16_control.c ****             else if (mode == THRESHOLD)
 516:CLCD_2x16_control.c ****             {
 517:CLCD_2x16_control.c ****                 Adj_Vth += click;
 518:CLCD_2x16_control.c ****                 set_Vth_Vbias();
 519:CLCD_2x16_control.c ****                 // set CLCD
 520:CLCD_2x16_control.c ****                 I2C_CLCD_Position(1u, 12u);
 521:CLCD_2x16_control.c ****                 sprintf(str, "%3d", pga_gain[gain].threshold);
 522:CLCD_2x16_control.c ****                 I2C_CLCD_PrintString(str);
 523:CLCD_2x16_control.c ****                 I2C_CLCD_Position(2u, 12u);
 524:CLCD_2x16_control.c ****                 sprintf(str, "%3d", Adj_Vth);
 525:CLCD_2x16_control.c ****                 I2C_CLCD_PrintString(str);
 526:CLCD_2x16_control.c ****                 I2C_CLCD_Position(3u, 12u);
 527:CLCD_2x16_control.c ****                 sprintf(str, "%3d", Vth);
 528:CLCD_2x16_control.c ****                 I2C_CLCD_PrintString(str);
 529:CLCD_2x16_control.c ****             }
 530:CLCD_2x16_control.c ****             else if (mode == IF_BIAS)
 531:CLCD_2x16_control.c ****             {
 532:CLCD_2x16_control.c ****                 Adj_Vbias += (click * 10);
 533:CLCD_2x16_control.c ****                 set_Vth_Vbias();
 534:CLCD_2x16_control.c ****                 // set CLCD
 535:CLCD_2x16_control.c ****                 I2C_CLCD_Position(1u, 11u);
 536:CLCD_2x16_control.c ****                 sprintf(str, "%4d", pga_gain[gain].bias);
 537:CLCD_2x16_control.c ****                 I2C_CLCD_PrintString(str);
 538:CLCD_2x16_control.c ****                 I2C_CLCD_Position(2u, 11u);
 539:CLCD_2x16_control.c ****                 sprintf(str, "%4d", Adj_Vbias);
 540:CLCD_2x16_control.c ****                 I2C_CLCD_PrintString(str);
 541:CLCD_2x16_control.c ****                 I2C_CLCD_Position(3u, 11u);
 542:CLCD_2x16_control.c ****                 sprintf(str, "%4d", Vbias);
 543:CLCD_2x16_control.c ****                 I2C_CLCD_PrintString(str);
 544:CLCD_2x16_control.c ****             }
 545:CLCD_2x16_control.c **** #endif
 546:CLCD_2x16_control.c ****         }
 547:CLCD_2x16_control.c **** 
 548:CLCD_2x16_control.c **** #define PGA_AGC
 549:CLCD_2x16_control.c **** #ifdef PGA_AGC
 550:CLCD_2x16_control.c ****         /* PGA AGC */
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 132


 551:CLCD_2x16_control.c ****         if (update_gain_flag)
 1120              		.loc 1 551 0
 1121 0494 07BB     		cbnz	r7, .L74
 1122 0496 47E0     		b	.L65
 1123              	.LVL150:
 1124              	.L67:
 552:CLCD_2x16_control.c ****         {
 553:CLCD_2x16_control.c ****             for (i = 0; i < AGC_MAX; i++)
 554:CLCD_2x16_control.c ****             {
 555:CLCD_2x16_control.c ****                 if (((uint32)rms_mixed >= pga_agc[i].rms_mv_min)
 1125              		.loc 1 555 0
 1126 0498 2046     		mov	r0, r4
 1127 049a FFF7FEFF 		bl	__aeabi_f2uiz
 1128              	.LVL151:
 1129 049e 07EB4703 		add	r3, r7, r7, lsl #1
 1130 04a2 5B00     		lsls	r3, r3, #1
 1131 04a4 2D49     		ldr	r1, .L83+44
 1132 04a6 0B44     		add	r3, r3, r1
 1133 04a8 B3F85C31 		ldrh	r3, [r3, #348]
 1134 04ac 9842     		cmp	r0, r3
 1135 04ae 10D3     		bcc	.L66
 556:CLCD_2x16_control.c ****                     && ((uint32)rms_mixed < pga_agc[i].rms_mv_max))
 1136              		.loc 1 556 0
 1137 04b0 07EB4701 		add	r1, r7, r7, lsl #1
 1138 04b4 4900     		lsls	r1, r1, #1
 1139 04b6 2A4B     		ldr	r3, .L83+48
 1140 04b8 0B44     		add	r3, r3, r1
 1141 04ba 5B88     		ldrh	r3, [r3, #2]
 1142 04bc 9842     		cmp	r0, r3
 1143 04be 08D2     		bcs	.L66
 557:CLCD_2x16_control.c ****                 {
 558:CLCD_2x16_control.c ****                     gain += pga_agc[i].gain_ctl;
 1144              		.loc 1 558 0
 1145 04c0 0A46     		mov	r2, r1
 1146 04c2 274B     		ldr	r3, .L83+48
 1147 04c4 1A44     		add	r2, r2, r3
 1148 04c6 1F49     		ldr	r1, .L83+20
 1149 04c8 92F90420 		ldrsb	r2, [r2, #4]
 1150 04cc 4B88     		ldrh	r3, [r1, #2]
 1151 04ce 1344     		add	r3, r3, r2
 1152 04d0 4B80     		strh	r3, [r1, #2]	@ movhi
 1153              	.L66:
 553:CLCD_2x16_control.c ****             {
 1154              		.loc 1 553 0 discriminator 2
 1155 04d2 0137     		adds	r7, r7, #1
 1156              	.LVL152:
 1157 04d4 FFB2     		uxtb	r7, r7
 1158              	.LVL153:
 1159 04d6 00E0     		b	.L64
 1160              	.LVL154:
 1161              	.L74:
 1162 04d8 0027     		movs	r7, #0
 1163              	.LVL155:
 1164              	.L64:
 553:CLCD_2x16_control.c ****             {
 1165              		.loc 1 553 0 is_stmt 0 discriminator 1
 1166 04da 082F     		cmp	r7, #8
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 133


 1167 04dc DCD9     		bls	.L67
 559:CLCD_2x16_control.c ****                 }
 560:CLCD_2x16_control.c ****             }
 561:CLCD_2x16_control.c ****             if (gain < 0)
 1168              		.loc 1 561 0 is_stmt 1
 1169 04de 194B     		ldr	r3, .L83+20
 1170 04e0 B3F90230 		ldrsh	r3, [r3, #2]
 1171 04e4 002B     		cmp	r3, #0
 1172 04e6 02DA     		bge	.L68
 562:CLCD_2x16_control.c ****                 gain = 0;
 1173              		.loc 1 562 0
 1174 04e8 0022     		movs	r2, #0
 1175 04ea 164B     		ldr	r3, .L83+20
 1176 04ec 5A80     		strh	r2, [r3, #2]	@ movhi
 1177              	.L68:
 563:CLCD_2x16_control.c ****             if ((uint16)gain > (GAIN_MAX - 1))
 1178              		.loc 1 563 0
 1179 04ee 154B     		ldr	r3, .L83+20
 1180 04f0 5B88     		ldrh	r3, [r3, #2]
 1181 04f2 092B     		cmp	r3, #9
 1182 04f4 02D9     		bls	.L69
 564:CLCD_2x16_control.c ****                 gain = GAIN_MAX - 1;
 1183              		.loc 1 564 0
 1184 04f6 0922     		movs	r2, #9
 1185 04f8 124B     		ldr	r3, .L83+20
 1186 04fa 5A80     		strh	r2, [r3, #2]	@ movhi
 1187              	.L69:
 565:CLCD_2x16_control.c ****             /* set PGA gain */
 566:CLCD_2x16_control.c ****             PGA_1_SetGain(pga_gain[gain].pga_gain);
 1188              		.loc 1 566 0
 1189 04fc 174F     		ldr	r7, .L83+44
 1190              	.LVL156:
 1191 04fe DFF84490 		ldr	r9, .L83+20
 1192 0502 B9F90230 		ldrsh	r3, [r9, #2]
 1193 0506 03EB4303 		add	r3, r3, r3, lsl #1
 1194 050a 5B00     		lsls	r3, r3, #1
 1195 050c F85C     		ldrb	r0, [r7, r3]	@ zero_extendqisi2
 1196 050e FFF7FEFF 		bl	PGA_1_SetGain
 1197              	.LVL157:
 567:CLCD_2x16_control.c ****             PGA_2_SetGain(pga_gain[gain].pga_gain);
 1198              		.loc 1 567 0
 1199 0512 B9F90230 		ldrsh	r3, [r9, #2]
 1200 0516 03EB4303 		add	r3, r3, r3, lsl #1
 1201 051a 5B00     		lsls	r3, r3, #1
 1202 051c F85C     		ldrb	r0, [r7, r3]	@ zero_extendqisi2
 1203 051e FFF7FEFF 		bl	PGA_2_SetGain
 1204              	.LVL158:
 568:CLCD_2x16_control.c ****             // update Vth and Vbias
 569:CLCD_2x16_control.c ****             set_Vth_Vbias();
 1205              		.loc 1 569 0
 1206 0522 FFF7FEFF 		bl	set_Vth_Vbias
 1207              	.LVL159:
 570:CLCD_2x16_control.c **** 
 571:CLCD_2x16_control.c ****             update_gain_flag = 0;
 1208              		.loc 1 571 0
 1209 0526 0027     		movs	r7, #0
 1210              	.LVL160:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 134


 1211              	.L65:
 572:CLCD_2x16_control.c ****         }
 573:CLCD_2x16_control.c **** #endif
 574:CLCD_2x16_control.c ****         
 575:CLCD_2x16_control.c ****         vTaskDelay(xDelay);
 1212              		.loc 1 575 0
 1213 0528 0520     		movs	r0, #5
 1214 052a FFF7FEFF 		bl	vTaskDelay
 1215              	.LVL161:
 1216 052e 85E5     		b	.L33
 1217              	.L84:
 1218              		.align	3
 1219              	.L83:
 1220 0530 04560E2D 		.word	755914244
 1221 0534 B29DD73F 		.word	1071095218
 1222 0538 295C8FC2 		.word	-1030792151
 1223 053c F5E83040 		.word	1076947189
 1224 0540 C0000000 		.word	.LC11
 1225 0544 00000000 		.word	.LANCHOR0
 1226 0548 D4000000 		.word	.LC12
 1227 054c DC000000 		.word	.LC13
 1228 0550 EC000000 		.word	.LC15
 1229 0554 F4000000 		.word	.LC16
 1230 0558 00000000 		.word	xQueue_ROT
 1231 055c 00000000 		.word	.LANCHOR1
 1232 0560 5C010000 		.word	.LANCHOR1+348
 1233 0564 E4000000 		.word	.LC14
 1234              		.cfi_endproc
 1235              	.LFE123:
 1236              		.size	Task_CLCD, .-Task_CLCD
 1237              		.global	bar
 1238              		.global	dir_tab
 1239              		.global	pga_agc
 1240              		.global	pga_gain
 1241              		.global	Adj_Vbias
 1242              		.global	Adj_Vth
 1243              		.global	Vbias
 1244              		.global	Vth
 1245              		.global	gain
 1246              		.global	mode
 1247              		.section	.rodata
 1248              		.align	2
 1249              		.set	.LANCHOR1,. + 0
 1250              		.type	pga_gain, %object
 1251              		.size	pga_gain, 60
 1252              	pga_gain:
 1253 0000 00       		.byte	0
 1254 0001 01       		.byte	1
 1255 0002 01       		.byte	1
 1256 0003 3C       		.byte	60
 1257 0004 D905     		.short	1497
 1258 0006 01       		.byte	1
 1259 0007 02       		.byte	2
 1260 0008 01       		.byte	1
 1261 0009 3C       		.byte	60
 1262 000a D905     		.short	1497
 1263 000c 02       		.byte	2
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 135


 1264 000d 04       		.byte	4
 1265 000e 01       		.byte	1
 1266 000f 3C       		.byte	60
 1267 0010 D905     		.short	1497
 1268 0012 03       		.byte	3
 1269 0013 08       		.byte	8
 1270 0014 01       		.byte	1
 1271 0015 3C       		.byte	60
 1272 0016 D905     		.short	1497
 1273 0018 04       		.byte	4
 1274 0019 10       		.byte	16
 1275 001a 01       		.byte	1
 1276 001b 3C       		.byte	60
 1277 001c D905     		.short	1497
 1278 001e 05       		.byte	5
 1279 001f 18       		.byte	24
 1280 0020 01       		.byte	1
 1281 0021 3C       		.byte	60
 1282 0022 D905     		.short	1497
 1283 0024 06       		.byte	6
 1284 0025 20       		.byte	32
 1285 0026 01       		.byte	1
 1286 0027 3C       		.byte	60
 1287 0028 D905     		.short	1497
 1288 002a 07       		.byte	7
 1289 002b 30       		.byte	48
 1290 002c 01       		.byte	1
 1291 002d 3C       		.byte	60
 1292 002e D905     		.short	1497
 1293 0030 08       		.byte	8
 1294 0031 32       		.byte	50
 1295 0032 01       		.byte	1
 1296 0033 3C       		.byte	60
 1297 0034 D905     		.short	1497
 1298 0036 08       		.byte	8
 1299 0037 32       		.byte	50
 1300 0038 01       		.byte	1
 1301 0039 3C       		.byte	60
 1302 003a D905     		.short	1497
 1303              		.type	dir_tab, %object
 1304              		.size	dir_tab, 78
 1305              	dir_tab:
 1306 003c A5FF     		.short	-91
 1307 003e B3FF     		.short	-77
 1308 0040 00       		.byte	0
 1309 0041 00       		.byte	0
 1310 0042 B3FF     		.short	-77
 1311 0044 C1FF     		.short	-63
 1312 0046 00       		.byte	0
 1313 0047 01       		.byte	1
 1314 0048 C1FF     		.short	-63
 1315 004a CFFF     		.short	-49
 1316 004c 00       		.byte	0
 1317 004d 02       		.byte	2
 1318 004e CFFF     		.short	-49
 1319 0050 DDFF     		.short	-35
 1320 0052 00       		.byte	0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 136


 1321 0053 03       		.byte	3
 1322 0054 DDFF     		.short	-35
 1323 0056 EBFF     		.short	-21
 1324 0058 00       		.byte	0
 1325 0059 04       		.byte	4
 1326 005a EBFF     		.short	-21
 1327 005c F9FF     		.short	-7
 1328 005e 00       		.byte	0
 1329 005f 05       		.byte	5
 1330 0060 F9FF     		.short	-7
 1331 0062 0700     		.short	7
 1332 0064 00       		.byte	0
 1333 0065 06       		.byte	6
 1334 0066 0700     		.short	7
 1335 0068 1500     		.short	21
 1336 006a 00       		.byte	0
 1337 006b 07       		.byte	7
 1338 006c 1500     		.short	21
 1339 006e 2300     		.short	35
 1340 0070 00       		.byte	0
 1341 0071 08       		.byte	8
 1342 0072 2300     		.short	35
 1343 0074 3100     		.short	49
 1344 0076 00       		.byte	0
 1345 0077 09       		.byte	9
 1346 0078 3100     		.short	49
 1347 007a 3F00     		.short	63
 1348 007c 00       		.byte	0
 1349 007d 0A       		.byte	10
 1350 007e 3F00     		.short	63
 1351 0080 4D00     		.short	77
 1352 0082 00       		.byte	0
 1353 0083 0B       		.byte	11
 1354 0084 4D00     		.short	77
 1355 0086 5B00     		.short	91
 1356 0088 00       		.byte	0
 1357 0089 0C       		.byte	12
 1358 008a 0000     		.space	2
 1359              		.type	bar, %object
 1360              		.size	bar, 208
 1361              	bar:
 1362 008c 7C       		.byte	124
 1363 008d FF       		.byte	-1
 1364 008e FF       		.byte	-1
 1365 008f FF       		.byte	-1
 1366 0090 FF       		.byte	-1
 1367 0091 FF       		.byte	-1
 1368 0092 FF       		.byte	-1
 1369 0093 7C       		.byte	124
 1370 0094 20       		.byte	32
 1371 0095 20       		.byte	32
 1372 0096 20       		.byte	32
 1373 0097 20       		.byte	32
 1374 0098 20       		.byte	32
 1375 0099 20       		.byte	32
 1376 009a 7C       		.byte	124
 1377 009b 00       		.byte	0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 137


 1378 009c 7C       		.byte	124
 1379 009d 20       		.byte	32
 1380 009e FF       		.byte	-1
 1381 009f FF       		.byte	-1
 1382 00a0 FF       		.byte	-1
 1383 00a1 FF       		.byte	-1
 1384 00a2 FF       		.byte	-1
 1385 00a3 7C       		.byte	124
 1386 00a4 20       		.byte	32
 1387 00a5 20       		.byte	32
 1388 00a6 20       		.byte	32
 1389 00a7 20       		.byte	32
 1390 00a8 20       		.byte	32
 1391 00a9 20       		.byte	32
 1392 00aa 7C       		.byte	124
 1393 00ab 00       		.byte	0
 1394 00ac 7C       		.byte	124
 1395 00ad 20       		.byte	32
 1396 00ae 20       		.byte	32
 1397 00af FF       		.byte	-1
 1398 00b0 FF       		.byte	-1
 1399 00b1 FF       		.byte	-1
 1400 00b2 FF       		.byte	-1
 1401 00b3 7C       		.byte	124
 1402 00b4 20       		.byte	32
 1403 00b5 20       		.byte	32
 1404 00b6 20       		.byte	32
 1405 00b7 20       		.byte	32
 1406 00b8 20       		.byte	32
 1407 00b9 20       		.byte	32
 1408 00ba 7C       		.byte	124
 1409 00bb 00       		.byte	0
 1410 00bc 7C       		.byte	124
 1411 00bd 20       		.byte	32
 1412 00be 20       		.byte	32
 1413 00bf 20       		.byte	32
 1414 00c0 FF       		.byte	-1
 1415 00c1 FF       		.byte	-1
 1416 00c2 FF       		.byte	-1
 1417 00c3 7C       		.byte	124
 1418 00c4 20       		.byte	32
 1419 00c5 20       		.byte	32
 1420 00c6 20       		.byte	32
 1421 00c7 20       		.byte	32
 1422 00c8 20       		.byte	32
 1423 00c9 20       		.byte	32
 1424 00ca 7C       		.byte	124
 1425 00cb 00       		.byte	0
 1426 00cc 7C       		.byte	124
 1427 00cd 20       		.byte	32
 1428 00ce 20       		.byte	32
 1429 00cf 20       		.byte	32
 1430 00d0 20       		.byte	32
 1431 00d1 FF       		.byte	-1
 1432 00d2 FF       		.byte	-1
 1433 00d3 7C       		.byte	124
 1434 00d4 20       		.byte	32
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 138


 1435 00d5 20       		.byte	32
 1436 00d6 20       		.byte	32
 1437 00d7 20       		.byte	32
 1438 00d8 20       		.byte	32
 1439 00d9 20       		.byte	32
 1440 00da 7C       		.byte	124
 1441 00db 00       		.byte	0
 1442 00dc 7C       		.byte	124
 1443 00dd 20       		.byte	32
 1444 00de 20       		.byte	32
 1445 00df 20       		.byte	32
 1446 00e0 20       		.byte	32
 1447 00e1 20       		.byte	32
 1448 00e2 FF       		.byte	-1
 1449 00e3 7C       		.byte	124
 1450 00e4 20       		.byte	32
 1451 00e5 20       		.byte	32
 1452 00e6 20       		.byte	32
 1453 00e7 20       		.byte	32
 1454 00e8 20       		.byte	32
 1455 00e9 20       		.byte	32
 1456 00ea 7C       		.byte	124
 1457 00eb 00       		.byte	0
 1458 00ec 7C       		.byte	124
 1459 00ed 20       		.byte	32
 1460 00ee 20       		.byte	32
 1461 00ef 20       		.byte	32
 1462 00f0 20       		.byte	32
 1463 00f1 20       		.byte	32
 1464 00f2 20       		.byte	32
 1465 00f3 FF       		.byte	-1
 1466 00f4 20       		.byte	32
 1467 00f5 20       		.byte	32
 1468 00f6 20       		.byte	32
 1469 00f7 20       		.byte	32
 1470 00f8 20       		.byte	32
 1471 00f9 20       		.byte	32
 1472 00fa 7C       		.byte	124
 1473 00fb 00       		.byte	0
 1474 00fc 7C       		.byte	124
 1475 00fd 20       		.byte	32
 1476 00fe 20       		.byte	32
 1477 00ff 20       		.byte	32
 1478 0100 20       		.byte	32
 1479 0101 20       		.byte	32
 1480 0102 20       		.byte	32
 1481 0103 7C       		.byte	124
 1482 0104 FF       		.byte	-1
 1483 0105 20       		.byte	32
 1484 0106 20       		.byte	32
 1485 0107 20       		.byte	32
 1486 0108 20       		.byte	32
 1487 0109 20       		.byte	32
 1488 010a 7C       		.byte	124
 1489 010b 00       		.byte	0
 1490 010c 7C       		.byte	124
 1491 010d 20       		.byte	32
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 139


 1492 010e 20       		.byte	32
 1493 010f 20       		.byte	32
 1494 0110 20       		.byte	32
 1495 0111 20       		.byte	32
 1496 0112 20       		.byte	32
 1497 0113 7C       		.byte	124
 1498 0114 FF       		.byte	-1
 1499 0115 FF       		.byte	-1
 1500 0116 20       		.byte	32
 1501 0117 20       		.byte	32
 1502 0118 20       		.byte	32
 1503 0119 20       		.byte	32
 1504 011a 7C       		.byte	124
 1505 011b 00       		.byte	0
 1506 011c 7C       		.byte	124
 1507 011d 20       		.byte	32
 1508 011e 20       		.byte	32
 1509 011f 20       		.byte	32
 1510 0120 20       		.byte	32
 1511 0121 20       		.byte	32
 1512 0122 20       		.byte	32
 1513 0123 7C       		.byte	124
 1514 0124 FF       		.byte	-1
 1515 0125 FF       		.byte	-1
 1516 0126 FF       		.byte	-1
 1517 0127 20       		.byte	32
 1518 0128 20       		.byte	32
 1519 0129 20       		.byte	32
 1520 012a 7C       		.byte	124
 1521 012b 00       		.byte	0
 1522 012c 7C       		.byte	124
 1523 012d 20       		.byte	32
 1524 012e 20       		.byte	32
 1525 012f 20       		.byte	32
 1526 0130 20       		.byte	32
 1527 0131 20       		.byte	32
 1528 0132 20       		.byte	32
 1529 0133 7C       		.byte	124
 1530 0134 FF       		.byte	-1
 1531 0135 FF       		.byte	-1
 1532 0136 FF       		.byte	-1
 1533 0137 FF       		.byte	-1
 1534 0138 20       		.byte	32
 1535 0139 20       		.byte	32
 1536 013a 7C       		.byte	124
 1537 013b 00       		.byte	0
 1538 013c 7C       		.byte	124
 1539 013d 20       		.byte	32
 1540 013e 20       		.byte	32
 1541 013f 20       		.byte	32
 1542 0140 20       		.byte	32
 1543 0141 20       		.byte	32
 1544 0142 20       		.byte	32
 1545 0143 7C       		.byte	124
 1546 0144 FF       		.byte	-1
 1547 0145 FF       		.byte	-1
 1548 0146 FF       		.byte	-1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 140


 1549 0147 FF       		.byte	-1
 1550 0148 FF       		.byte	-1
 1551 0149 20       		.byte	32
 1552 014a 7C       		.byte	124
 1553 014b 00       		.byte	0
 1554 014c 7C       		.byte	124
 1555 014d 20       		.byte	32
 1556 014e 20       		.byte	32
 1557 014f 20       		.byte	32
 1558 0150 20       		.byte	32
 1559 0151 20       		.byte	32
 1560 0152 20       		.byte	32
 1561 0153 7C       		.byte	124
 1562 0154 FF       		.byte	-1
 1563 0155 FF       		.byte	-1
 1564 0156 FF       		.byte	-1
 1565 0157 FF       		.byte	-1
 1566 0158 FF       		.byte	-1
 1567 0159 FF       		.byte	-1
 1568 015a 7C       		.byte	124
 1569 015b 00       		.byte	0
 1570              		.type	pga_agc, %object
 1571              		.size	pga_agc, 54
 1572              	pga_agc:
 1573 015c 0000     		.short	0
 1574 015e 0A00     		.short	10
 1575 0160 04       		.byte	4
 1576 0161 00       		.space	1
 1577 0162 0A00     		.short	10
 1578 0164 1400     		.short	20
 1579 0166 03       		.byte	3
 1580 0167 00       		.space	1
 1581 0168 1400     		.short	20
 1582 016a 3200     		.short	50
 1583 016c 02       		.byte	2
 1584 016d 00       		.space	1
 1585 016e 3200     		.short	50
 1586 0170 6400     		.short	100
 1587 0172 01       		.byte	1
 1588 0173 00       		.space	1
 1589 0174 C800     		.short	200
 1590 0176 2C01     		.short	300
 1591 0178 00       		.byte	0
 1592 0179 00       		.space	1
 1593 017a 2C01     		.short	300
 1594 017c F401     		.short	500
 1595 017e 00       		.byte	0
 1596 017f 00       		.space	1
 1597 0180 F401     		.short	500
 1598 0182 2003     		.short	800
 1599 0184 FF       		.byte	-1
 1600 0185 00       		.space	1
 1601 0186 2003     		.short	800
 1602 0188 E803     		.short	1000
 1603 018a FE       		.byte	-2
 1604 018b 00       		.space	1
 1605 018c E803     		.short	1000
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 141


 1606 018e D007     		.short	2000
 1607 0190 FC       		.byte	-4
 1608 0191 00       		.space	1
 1609 0192 0000     		.data
 1610              		.align	1
 1611              		.set	.LANCHOR0,. + 0
 1612              		.type	mode, %object
 1613              		.size	mode, 1
 1614              	mode:
 1615 0000 01       		.byte	1
 1616 0001 00       		.space	1
 1617              		.type	gain, %object
 1618              		.size	gain, 2
 1619              	gain:
 1620 0002 0300     		.short	3
 1621              		.type	Vth, %object
 1622              		.size	Vth, 2
 1623              	Vth:
 1624 0004 3C00     		.short	60
 1625              		.type	Vbias, %object
 1626              		.size	Vbias, 2
 1627              	Vbias:
 1628 0006 D905     		.short	1497
 1629              		.section	.rodata.str1.4,"aMS",%progbits,1
 1630              		.align	2
 1631              	.LC0:
 1632 0000 20202020 		.ascii	"                    \000"
 1632      20202020 
 1632      20202020 
 1632      20202020 
 1632      20202020 
 1633 0015 000000   		.space	3
 1634              	.LC1:
 1635 0018 7C202020 		.ascii	"|      |      | \000"
 1635      2020207C 
 1635      20202020 
 1635      20207C20 
 1635      00
 1636 0029 000000   		.space	3
 1637              	.LC2:
 1638 002c 44697374 		.ascii	"Distance:      m\000"
 1638      616E6365 
 1638      3A202020 
 1638      2020206D 
 1638      00
 1639 003d 000000   		.space	3
 1640              	.LC3:
 1641 0040 414E5431 		.ascii	"ANT1:         mV\000"
 1641      3A202020 
 1641      20202020 
 1641      20206D56 
 1641      00
 1642 0051 000000   		.space	3
 1643              	.LC4:
 1644 0054 414E5432 		.ascii	"ANT2:         mV\000"
 1644      3A202020 
 1644      20202020 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 142


 1644      20206D56 
 1644      00
 1645 0065 000000   		.space	3
 1646              	.LC5:
 1647 0068 416E676C 		.ascii	"Angle:       deg\000"
 1647      653A2020 
 1647      20202020 
 1647      20646567 
 1647      00
 1648 0079 000000   		.space	3
 1649              	.LC6:
 1650 007c 4761696E 		.ascii	"Gain: x         \000"
 1650      3A207820 
 1650      20202020 
 1650      20202020 
 1650      00
 1651 008d 000000   		.space	3
 1652              	.LC7:
 1653 0090 25326420 		.ascii	"%2d      \000"
 1653      20202020 
 1653      2000
 1654 009a 0000     		.space	2
 1655              	.LC8:
 1656 009c 2520312E 		.ascii	"% 1.1f    \000"
 1656      31662020 
 1656      202000
 1657 00a7 00       		.space	1
 1658              	.LC9:
 1659 00a8 2520322E 		.ascii	"% 2.2f   \000"
 1659      32662020 
 1659      2000
 1660 00b2 0000     		.space	2
 1661              	.LC10:
 1662 00b4 2520332E 		.ascii	"% 3.3f  \000"
 1662      33662020 
 1662      00
 1663 00bd 000000   		.space	3
 1664              	.LC11:
 1665 00c0 7C202020 		.ascii	"|      |      |  \000"
 1665      2020207C 
 1665      20202020 
 1665      20207C20 
 1665      2000
 1666 00d2 0000     		.space	2
 1667              	.LC12:
 1668 00d4 252B332E 		.ascii	"%+3.1f\000"
 1668      316600
 1669 00db 00       		.space	1
 1670              	.LC13:
 1671 00dc 6C6F7374 		.ascii	"lost \000"
 1671      2000
 1672 00e2 0000     		.space	2
 1673              	.LC14:
 1674 00e4 25362E31 		.ascii	"%6.1f\000"
 1674      6600
 1675 00ea 0000     		.space	2
 1676              	.LC15:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 143


 1677 00ec 6C6F7374 		.ascii	"lost   \000"
 1677      20202000 
 1678              	.LC16:
 1679 00f4 6C6F7374 		.ascii	"lost     \000"
 1679      20202020 
 1679      2000
 1680 00fe 0000     		.bss
 1681              		.align	1
 1682              		.set	.LANCHOR2,. + 0
 1683              		.type	Adj_Vth, %object
 1684              		.size	Adj_Vth, 2
 1685              	Adj_Vth:
 1686 0000 0000     		.space	2
 1687              		.type	Adj_Vbias, %object
 1688              		.size	Adj_Vbias, 2
 1689              	Adj_Vbias:
 1690 0002 0000     		.space	2
 1691              		.text
 1692              	.Letext0:
 1693              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1694              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1695              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 1696              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1697              		.file 7 "..\\FreeRTOS/portmacro.h"
 1698              		.file 8 "..\\FreeRTOS/queue.h"
 1699              		.file 9 "..\\FreeRTOS/semphr.h"
 1700              		.file 10 "..\\CMSIS_DSP_LIB\\Include/core_cm3.h"
 1701              		.file 11 "..\\API/I2C_CLCD.h"
 1702              		.file 12 "Generated_Source\\PSoC5/Control_GAIN.h"
 1703              		.file 13 "Generated_Source\\PSoC5/DVDAC_2.h"
 1704              		.file 14 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9
 1705              		.file 15 "..\\FreeRTOS/task.h"
 1706              		.file 16 "Generated_Source\\PSoC5/MON.h"
 1707              		.file 17 "Generated_Source\\PSoC5/PGA_1.h"
 1708              		.file 18 "main.h"
 1709              		.file 19 "Generated_Source\\PSoC5/Status_Reg_1.h"
 1710              		.file 20 "<built-in>"
 1711              		.file 21 "Generated_Source\\PSoC5/PGA_2.h"
 1712              		.section	.debug_info,"",%progbits
 1713              	.Ldebug_info0:
 1714 0000 FA0E0000 		.4byte	0xefa
 1715 0004 0400     		.2byte	0x4
 1716 0006 00000000 		.4byte	.Ldebug_abbrev0
 1717 000a 04       		.byte	0x4
 1718 000b 01       		.uleb128 0x1
 1719 000c 0A050000 		.4byte	.LASF112
 1720 0010 01       		.byte	0x1
 1721 0011 04060000 		.4byte	.LASF113
 1722 0015 24040000 		.4byte	.LASF114
 1723 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1724 001d 00000000 		.4byte	0
 1725 0021 00000000 		.4byte	.Ldebug_line0
 1726 0025 02       		.uleb128 0x2
 1727 0026 08       		.byte	0x8
 1728 0027 04       		.byte	0x4
 1729 0028 40010000 		.4byte	.LASF0
 1730 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 144


 1731 002d 04       		.byte	0x4
 1732 002e 04       		.byte	0x4
 1733 002f 12030000 		.4byte	.LASF1
 1734 0033 02       		.uleb128 0x2
 1735 0034 01       		.byte	0x1
 1736 0035 06       		.byte	0x6
 1737 0036 E7000000 		.4byte	.LASF2
 1738 003a 02       		.uleb128 0x2
 1739 003b 01       		.byte	0x1
 1740 003c 08       		.byte	0x8
 1741 003d 5D030000 		.4byte	.LASF3
 1742 0041 02       		.uleb128 0x2
 1743 0042 02       		.byte	0x2
 1744 0043 05       		.byte	0x5
 1745 0044 74020000 		.4byte	.LASF4
 1746 0048 02       		.uleb128 0x2
 1747 0049 02       		.byte	0x2
 1748 004a 07       		.byte	0x7
 1749 004b 09020000 		.4byte	.LASF5
 1750 004f 03       		.uleb128 0x3
 1751 0050 A1040000 		.4byte	.LASF7
 1752 0054 03       		.byte	0x3
 1753 0055 3F       		.byte	0x3f
 1754 0056 5A000000 		.4byte	0x5a
 1755 005a 02       		.uleb128 0x2
 1756 005b 04       		.byte	0x4
 1757 005c 05       		.byte	0x5
 1758 005d 58000000 		.4byte	.LASF6
 1759 0061 03       		.uleb128 0x3
 1760 0062 7F010000 		.4byte	.LASF8
 1761 0066 03       		.byte	0x3
 1762 0067 41       		.byte	0x41
 1763 0068 6C000000 		.4byte	0x6c
 1764 006c 02       		.uleb128 0x2
 1765 006d 04       		.byte	0x4
 1766 006e 07       		.byte	0x7
 1767 006f C7010000 		.4byte	.LASF9
 1768 0073 02       		.uleb128 0x2
 1769 0074 08       		.byte	0x8
 1770 0075 05       		.byte	0x5
 1771 0076 D9000000 		.4byte	.LASF10
 1772 007a 02       		.uleb128 0x2
 1773 007b 08       		.byte	0x8
 1774 007c 07       		.byte	0x7
 1775 007d 61000000 		.4byte	.LASF11
 1776 0081 04       		.uleb128 0x4
 1777 0082 04       		.byte	0x4
 1778 0083 05       		.byte	0x5
 1779 0084 696E7400 		.ascii	"int\000"
 1780 0088 02       		.uleb128 0x2
 1781 0089 04       		.byte	0x4
 1782 008a 07       		.byte	0x7
 1783 008b 93010000 		.4byte	.LASF12
 1784 008f 03       		.uleb128 0x3
 1785 0090 55030000 		.4byte	.LASF13
 1786 0094 04       		.byte	0x4
 1787 0095 2C       		.byte	0x2c
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 145


 1788 0096 4F000000 		.4byte	0x4f
 1789 009a 03       		.uleb128 0x3
 1790 009b E2030000 		.4byte	.LASF14
 1791 009f 04       		.byte	0x4
 1792 00a0 2D       		.byte	0x2d
 1793 00a1 61000000 		.4byte	0x61
 1794 00a5 05       		.uleb128 0x5
 1795 00a6 3A010000 		.4byte	.LASF15
 1796 00aa 05       		.byte	0x5
 1797 00ab 3801     		.2byte	0x138
 1798 00ad 3A000000 		.4byte	0x3a
 1799 00b1 05       		.uleb128 0x5
 1800 00b2 6B030000 		.4byte	.LASF16
 1801 00b6 05       		.byte	0x5
 1802 00b7 3901     		.2byte	0x139
 1803 00b9 48000000 		.4byte	0x48
 1804 00bd 05       		.uleb128 0x5
 1805 00be 5C010000 		.4byte	.LASF17
 1806 00c2 05       		.byte	0x5
 1807 00c3 3A01     		.2byte	0x13a
 1808 00c5 6C000000 		.4byte	0x6c
 1809 00c9 05       		.uleb128 0x5
 1810 00ca 2F020000 		.4byte	.LASF18
 1811 00ce 05       		.byte	0x5
 1812 00cf 3B01     		.2byte	0x13b
 1813 00d1 33000000 		.4byte	0x33
 1814 00d5 05       		.uleb128 0x5
 1815 00d6 CD050000 		.4byte	.LASF19
 1816 00da 05       		.byte	0x5
 1817 00db 3C01     		.2byte	0x13c
 1818 00dd 41000000 		.4byte	0x41
 1819 00e1 05       		.uleb128 0x5
 1820 00e2 AB040000 		.4byte	.LASF20
 1821 00e6 05       		.byte	0x5
 1822 00e7 4901     		.2byte	0x149
 1823 00e9 ED000000 		.4byte	0xed
 1824 00ed 02       		.uleb128 0x2
 1825 00ee 01       		.byte	0x1
 1826 00ef 08       		.byte	0x8
 1827 00f0 1A040000 		.4byte	.LASF21
 1828 00f4 02       		.uleb128 0x2
 1829 00f5 04       		.byte	0x4
 1830 00f6 07       		.byte	0x7
 1831 00f7 A5020000 		.4byte	.LASF22
 1832 00fb 06       		.uleb128 0x6
 1833 00fc 04       		.byte	0x4
 1834 00fd 07       		.uleb128 0x7
 1835 00fe 04       		.byte	0x4
 1836 00ff ED000000 		.4byte	0xed
 1837 0103 07       		.uleb128 0x7
 1838 0104 04       		.byte	0x4
 1839 0105 09010000 		.4byte	0x109
 1840 0109 08       		.uleb128 0x8
 1841 010a ED000000 		.4byte	0xed
 1842 010e 07       		.uleb128 0x7
 1843 010f 04       		.byte	0x4
 1844 0110 14010000 		.4byte	0x114
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 146


 1845 0114 09       		.uleb128 0x9
 1846 0115 02       		.uleb128 0x2
 1847 0116 08       		.byte	0x8
 1848 0117 04       		.byte	0x4
 1849 0118 FC030000 		.4byte	.LASF23
 1850 011c 03       		.uleb128 0x3
 1851 011d 19000000 		.4byte	.LASF24
 1852 0121 06       		.byte	0x6
 1853 0122 9C       		.byte	0x9c
 1854 0123 25000000 		.4byte	0x25
 1855 0127 0A       		.uleb128 0xa
 1856 0128 01       		.byte	0x1
 1857 0129 02       		.byte	0x2
 1858 012a 7801     		.2byte	0x178
 1859 012c 5B010000 		.4byte	0x15b
 1860 0130 0B       		.uleb128 0xb
 1861 0131 78000000 		.4byte	.LASF25
 1862 0135 00       		.sleb128 0
 1863 0136 0B       		.uleb128 0xb
 1864 0137 18060000 		.4byte	.LASF26
 1865 013b 7F       		.sleb128 -1
 1866 013c 0B       		.uleb128 0xb
 1867 013d FC020000 		.4byte	.LASF27
 1868 0141 7E       		.sleb128 -2
 1869 0142 0B       		.uleb128 0xb
 1870 0143 7D040000 		.4byte	.LASF28
 1871 0147 7D       		.sleb128 -3
 1872 0148 0B       		.uleb128 0xb
 1873 0149 36030000 		.4byte	.LASF29
 1874 014d 7C       		.sleb128 -4
 1875 014e 0B       		.uleb128 0xb
 1876 014f 18030000 		.4byte	.LASF30
 1877 0153 7B       		.sleb128 -5
 1878 0154 0B       		.uleb128 0xb
 1879 0155 57020000 		.4byte	.LASF31
 1880 0159 7A       		.sleb128 -6
 1881 015a 00       		.byte	0
 1882 015b 05       		.uleb128 0x5
 1883 015c C2050000 		.4byte	.LASF32
 1884 0160 02       		.byte	0x2
 1885 0161 8001     		.2byte	0x180
 1886 0163 27010000 		.4byte	0x127
 1887 0167 05       		.uleb128 0x5
 1888 0168 B1040000 		.4byte	.LASF33
 1889 016c 02       		.byte	0x2
 1890 016d 9901     		.2byte	0x199
 1891 016f 2C000000 		.4byte	0x2c
 1892 0173 07       		.uleb128 0x7
 1893 0174 04       		.byte	0x4
 1894 0175 67010000 		.4byte	0x167
 1895 0179 03       		.uleb128 0x3
 1896 017a 47010000 		.4byte	.LASF34
 1897 017e 07       		.byte	0x7
 1898 017f 62       		.byte	0x62
 1899 0180 5A000000 		.4byte	0x5a
 1900 0184 03       		.uleb128 0x3
 1901 0185 30060000 		.4byte	.LASF35
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 147


 1902 0189 07       		.byte	0x7
 1903 018a 63       		.byte	0x63
 1904 018b 6C000000 		.4byte	0x6c
 1905 018f 03       		.uleb128 0x3
 1906 0190 B6020000 		.4byte	.LASF36
 1907 0194 07       		.byte	0x7
 1908 0195 69       		.byte	0x69
 1909 0196 9A000000 		.4byte	0x9a
 1910 019a 03       		.uleb128 0x3
 1911 019b 93000000 		.4byte	.LASF37
 1912 019f 08       		.byte	0x8
 1913 01a0 58       		.byte	0x58
 1914 01a1 FB000000 		.4byte	0xfb
 1915 01a5 03       		.uleb128 0x3
 1916 01a6 08040000 		.4byte	.LASF38
 1917 01aa 09       		.byte	0x9
 1918 01ab 4F       		.byte	0x4f
 1919 01ac 9A010000 		.4byte	0x19a
 1920 01b0 0C       		.uleb128 0xc
 1921 01b1 52010000 		.4byte	.LASF115
 1922 01b5 01       		.byte	0x1
 1923 01b6 12       		.byte	0x12
 1924 01b7 31       		.byte	0x31
 1925 01b8 DB010000 		.4byte	0x1db
 1926 01bc 0B       		.uleb128 0xb
 1927 01bd E0020000 		.4byte	.LASF39
 1928 01c1 00       		.sleb128 0
 1929 01c2 0B       		.uleb128 0xb
 1930 01c3 39000000 		.4byte	.LASF40
 1931 01c7 01       		.sleb128 1
 1932 01c8 0B       		.uleb128 0xb
 1933 01c9 CE030000 		.4byte	.LASF41
 1934 01cd 02       		.sleb128 2
 1935 01ce 0B       		.uleb128 0xb
 1936 01cf 88030000 		.4byte	.LASF42
 1937 01d3 03       		.sleb128 3
 1938 01d4 0B       		.uleb128 0xb
 1939 01d5 00000000 		.4byte	.LASF43
 1940 01d9 04       		.sleb128 4
 1941 01da 00       		.byte	0
 1942 01db 0D       		.uleb128 0xd
 1943 01dc 06       		.byte	0x6
 1944 01dd 01       		.byte	0x1
 1945 01de 43       		.byte	0x43
 1946 01df 20020000 		.4byte	0x220
 1947 01e3 0E       		.uleb128 0xe
 1948 01e4 05000000 		.4byte	.LASF44
 1949 01e8 01       		.byte	0x1
 1950 01e9 45       		.byte	0x45
 1951 01ea A5000000 		.4byte	0xa5
 1952 01ee 00       		.byte	0
 1953 01ef 0E       		.uleb128 0xe
 1954 01f0 B9010000 		.4byte	.LASF45
 1955 01f4 01       		.byte	0x1
 1956 01f5 46       		.byte	0x46
 1957 01f6 A5000000 		.4byte	0xa5
 1958 01fa 01       		.byte	0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 148


 1959 01fb 0E       		.uleb128 0xe
 1960 01fc E6040000 		.4byte	.LASF46
 1961 0200 01       		.byte	0x1
 1962 0201 47       		.byte	0x47
 1963 0202 A5000000 		.4byte	0xa5
 1964 0206 02       		.byte	0x2
 1965 0207 0E       		.uleb128 0xe
 1966 0208 4B030000 		.4byte	.LASF47
 1967 020c 01       		.byte	0x1
 1968 020d 48       		.byte	0x48
 1969 020e A5000000 		.4byte	0xa5
 1970 0212 03       		.byte	0x3
 1971 0213 0E       		.uleb128 0xe
 1972 0214 A6030000 		.4byte	.LASF48
 1973 0218 01       		.byte	0x1
 1974 0219 49       		.byte	0x49
 1975 021a B1000000 		.4byte	0xb1
 1976 021e 04       		.byte	0x4
 1977 021f 00       		.byte	0
 1978 0220 03       		.uleb128 0x3
 1979 0221 F4050000 		.4byte	.LASF49
 1980 0225 01       		.byte	0x1
 1981 0226 4A       		.byte	0x4a
 1982 0227 DB010000 		.4byte	0x1db
 1983 022b 0D       		.uleb128 0xd
 1984 022c 06       		.byte	0x6
 1985 022d 01       		.byte	0x1
 1986 022e 5F       		.byte	0x5f
 1987 022f 58020000 		.4byte	0x258
 1988 0233 0E       		.uleb128 0xe
 1989 0234 DD050000 		.4byte	.LASF50
 1990 0238 01       		.byte	0x1
 1991 0239 61       		.byte	0x61
 1992 023a B1000000 		.4byte	0xb1
 1993 023e 00       		.byte	0
 1994 023f 0E       		.uleb128 0xe
 1995 0240 AB050000 		.4byte	.LASF51
 1996 0244 01       		.byte	0x1
 1997 0245 62       		.byte	0x62
 1998 0246 B1000000 		.4byte	0xb1
 1999 024a 02       		.byte	0x2
 2000 024b 0E       		.uleb128 0xe
 2001 024c 8A010000 		.4byte	.LASF52
 2002 0250 01       		.byte	0x1
 2003 0251 63       		.byte	0x63
 2004 0252 C9000000 		.4byte	0xc9
 2005 0256 04       		.byte	0x4
 2006 0257 00       		.byte	0
 2007 0258 03       		.uleb128 0x3
 2008 0259 0D010000 		.4byte	.LASF53
 2009 025d 01       		.byte	0x1
 2010 025e 64       		.byte	0x64
 2011 025f 2B020000 		.4byte	0x22b
 2012 0263 0D       		.uleb128 0xd
 2013 0264 06       		.byte	0x6
 2014 0265 01       		.byte	0x1
 2015 0266 73       		.byte	0x73
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 149


 2016 0267 9C020000 		.4byte	0x29c
 2017 026b 0E       		.uleb128 0xe
 2018 026c AB030000 		.4byte	.LASF54
 2019 0270 01       		.byte	0x1
 2020 0271 75       		.byte	0x75
 2021 0272 D5000000 		.4byte	0xd5
 2022 0276 00       		.byte	0
 2023 0277 0E       		.uleb128 0xe
 2024 0278 D3050000 		.4byte	.LASF55
 2025 027c 01       		.byte	0x1
 2026 027d 76       		.byte	0x76
 2027 027e D5000000 		.4byte	0xd5
 2028 0282 02       		.byte	0x2
 2029 0283 0E       		.uleb128 0xe
 2030 0284 CB000000 		.4byte	.LASF56
 2031 0288 01       		.byte	0x1
 2032 0289 77       		.byte	0x77
 2033 028a A5000000 		.4byte	0xa5
 2034 028e 04       		.byte	0x4
 2035 028f 0E       		.uleb128 0xe
 2036 0290 FE000000 		.4byte	.LASF57
 2037 0294 01       		.byte	0x1
 2038 0295 78       		.byte	0x78
 2039 0296 A5000000 		.4byte	0xa5
 2040 029a 05       		.byte	0x5
 2041 029b 00       		.byte	0
 2042 029c 03       		.uleb128 0x3
 2043 029d 89000000 		.4byte	.LASF58
 2044 02a1 01       		.byte	0x1
 2045 02a2 79       		.byte	0x79
 2046 02a3 63020000 		.4byte	0x263
 2047 02a7 0F       		.uleb128 0xf
 2048 02a8 2D010000 		.4byte	.LASF116
 2049 02ac 02       		.byte	0x2
 2050 02ad 7316     		.2byte	0x1673
 2051 02af 5B010000 		.4byte	0x15b
 2052 02b3 03       		.byte	0x3
 2053 02b4 D0020000 		.4byte	0x2d0
 2054 02b8 10       		.uleb128 0x10
 2055 02b9 696E00   		.ascii	"in\000"
 2056 02bc 02       		.byte	0x2
 2057 02bd 7416     		.2byte	0x1674
 2058 02bf 67010000 		.4byte	0x167
 2059 02c3 11       		.uleb128 0x11
 2060 02c4 8C020000 		.4byte	.LASF59
 2061 02c8 02       		.byte	0x2
 2062 02c9 7516     		.2byte	0x1675
 2063 02cb 73010000 		.4byte	0x173
 2064 02cf 00       		.byte	0
 2065 02d0 12       		.uleb128 0x12
 2066 02d1 AE010000 		.4byte	.LASF60
 2067 02d5 01       		.byte	0x1
 2068 02d6 9D       		.byte	0x9d
 2069 02d7 00000000 		.4byte	.LFB119
 2070 02db 14000000 		.4byte	.LFE119-.LFB119
 2071 02df 01       		.uleb128 0x1
 2072 02e0 9C       		.byte	0x9c
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 150


 2073 02e1 1B030000 		.4byte	0x31b
 2074 02e5 13       		.uleb128 0x13
 2075 02e6 72617700 		.ascii	"raw\000"
 2076 02ea 01       		.byte	0x1
 2077 02eb 9D       		.byte	0x9d
 2078 02ec A5000000 		.4byte	0xa5
 2079 02f0 00000000 		.4byte	.LLST0
 2080 02f4 14       		.uleb128 0x14
 2081 02f5 08000000 		.4byte	.LVL1
 2082 02f9 0D0D0000 		.4byte	0xd0d
 2083 02fd 07030000 		.4byte	0x307
 2084 0301 15       		.uleb128 0x15
 2085 0302 01       		.uleb128 0x1
 2086 0303 51       		.byte	0x51
 2087 0304 01       		.uleb128 0x1
 2088 0305 30       		.byte	0x30
 2089 0306 00       		.byte	0
 2090 0307 16       		.uleb128 0x16
 2091 0308 0E000000 		.4byte	.LVL2
 2092 030c 230D0000 		.4byte	0xd23
 2093 0310 15       		.uleb128 0x15
 2094 0311 01       		.uleb128 0x1
 2095 0312 50       		.byte	0x50
 2096 0313 05       		.uleb128 0x5
 2097 0314 03       		.byte	0x3
 2098 0315 00000000 		.4byte	.LC0
 2099 0319 00       		.byte	0
 2100 031a 00       		.byte	0
 2101 031b 12       		.uleb128 0x12
 2102 031c D9010000 		.4byte	.LASF61
 2103 0320 01       		.byte	0x1
 2104 0321 A3       		.byte	0xa3
 2105 0322 00000000 		.4byte	.LFB120
 2106 0326 90000000 		.4byte	.LFE120-.LFB120
 2107 032a 01       		.uleb128 0x1
 2108 032b 9C       		.byte	0x9c
 2109 032c 5F040000 		.4byte	0x45f
 2110 0330 14       		.uleb128 0x14
 2111 0331 1A000000 		.4byte	.LVL3
 2112 0335 0D0D0000 		.4byte	0xd0d
 2113 0339 48030000 		.4byte	0x348
 2114 033d 15       		.uleb128 0x15
 2115 033e 01       		.uleb128 0x1
 2116 033f 51       		.byte	0x51
 2117 0340 01       		.uleb128 0x1
 2118 0341 30       		.byte	0x30
 2119 0342 15       		.uleb128 0x15
 2120 0343 01       		.uleb128 0x1
 2121 0344 50       		.byte	0x50
 2122 0345 01       		.uleb128 0x1
 2123 0346 30       		.byte	0x30
 2124 0347 00       		.byte	0
 2125 0348 14       		.uleb128 0x14
 2126 0349 20000000 		.4byte	.LVL4
 2127 034d 230D0000 		.4byte	0xd23
 2128 0351 5F030000 		.4byte	0x35f
 2129 0355 15       		.uleb128 0x15
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 151


 2130 0356 01       		.uleb128 0x1
 2131 0357 50       		.byte	0x50
 2132 0358 05       		.uleb128 0x5
 2133 0359 03       		.byte	0x3
 2134 035a 18000000 		.4byte	.LC1
 2135 035e 00       		.byte	0
 2136 035f 14       		.uleb128 0x14
 2137 0360 28000000 		.4byte	.LVL5
 2138 0364 0D0D0000 		.4byte	0xd0d
 2139 0368 77030000 		.4byte	0x377
 2140 036c 15       		.uleb128 0x15
 2141 036d 01       		.uleb128 0x1
 2142 036e 51       		.byte	0x51
 2143 036f 01       		.uleb128 0x1
 2144 0370 30       		.byte	0x30
 2145 0371 15       		.uleb128 0x15
 2146 0372 01       		.uleb128 0x1
 2147 0373 50       		.byte	0x50
 2148 0374 01       		.uleb128 0x1
 2149 0375 31       		.byte	0x31
 2150 0376 00       		.byte	0
 2151 0377 14       		.uleb128 0x14
 2152 0378 2E000000 		.4byte	.LVL6
 2153 037c 230D0000 		.4byte	0xd23
 2154 0380 8E030000 		.4byte	0x38e
 2155 0384 15       		.uleb128 0x15
 2156 0385 01       		.uleb128 0x1
 2157 0386 50       		.byte	0x50
 2158 0387 05       		.uleb128 0x5
 2159 0388 03       		.byte	0x3
 2160 0389 2C000000 		.4byte	.LC2
 2161 038d 00       		.byte	0
 2162 038e 14       		.uleb128 0x14
 2163 038f 38000000 		.4byte	.LVL7
 2164 0393 0D0D0000 		.4byte	0xd0d
 2165 0397 A6030000 		.4byte	0x3a6
 2166 039b 15       		.uleb128 0x15
 2167 039c 01       		.uleb128 0x1
 2168 039d 51       		.byte	0x51
 2169 039e 01       		.uleb128 0x1
 2170 039f 30       		.byte	0x30
 2171 03a0 15       		.uleb128 0x15
 2172 03a1 01       		.uleb128 0x1
 2173 03a2 50       		.byte	0x50
 2174 03a3 01       		.uleb128 0x1
 2175 03a4 30       		.byte	0x30
 2176 03a5 00       		.byte	0
 2177 03a6 14       		.uleb128 0x14
 2178 03a7 3E000000 		.4byte	.LVL8
 2179 03ab 230D0000 		.4byte	0xd23
 2180 03af BD030000 		.4byte	0x3bd
 2181 03b3 15       		.uleb128 0x15
 2182 03b4 01       		.uleb128 0x1
 2183 03b5 50       		.byte	0x50
 2184 03b6 05       		.uleb128 0x5
 2185 03b7 03       		.byte	0x3
 2186 03b8 40000000 		.4byte	.LC3
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 152


 2187 03bc 00       		.byte	0
 2188 03bd 14       		.uleb128 0x14
 2189 03be 46000000 		.4byte	.LVL9
 2190 03c2 0D0D0000 		.4byte	0xd0d
 2191 03c6 D5030000 		.4byte	0x3d5
 2192 03ca 15       		.uleb128 0x15
 2193 03cb 01       		.uleb128 0x1
 2194 03cc 51       		.byte	0x51
 2195 03cd 01       		.uleb128 0x1
 2196 03ce 30       		.byte	0x30
 2197 03cf 15       		.uleb128 0x15
 2198 03d0 01       		.uleb128 0x1
 2199 03d1 50       		.byte	0x50
 2200 03d2 01       		.uleb128 0x1
 2201 03d3 31       		.byte	0x31
 2202 03d4 00       		.byte	0
 2203 03d5 14       		.uleb128 0x14
 2204 03d6 4C000000 		.4byte	.LVL10
 2205 03da 230D0000 		.4byte	0xd23
 2206 03de EC030000 		.4byte	0x3ec
 2207 03e2 15       		.uleb128 0x15
 2208 03e3 01       		.uleb128 0x1
 2209 03e4 50       		.byte	0x50
 2210 03e5 05       		.uleb128 0x5
 2211 03e6 03       		.byte	0x3
 2212 03e7 54000000 		.4byte	.LC4
 2213 03eb 00       		.byte	0
 2214 03ec 14       		.uleb128 0x14
 2215 03ed 54000000 		.4byte	.LVL11
 2216 03f1 0D0D0000 		.4byte	0xd0d
 2217 03f5 04040000 		.4byte	0x404
 2218 03f9 15       		.uleb128 0x15
 2219 03fa 01       		.uleb128 0x1
 2220 03fb 51       		.byte	0x51
 2221 03fc 01       		.uleb128 0x1
 2222 03fd 30       		.byte	0x30
 2223 03fe 15       		.uleb128 0x15
 2224 03ff 01       		.uleb128 0x1
 2225 0400 50       		.byte	0x50
 2226 0401 01       		.uleb128 0x1
 2227 0402 32       		.byte	0x32
 2228 0403 00       		.byte	0
 2229 0404 14       		.uleb128 0x14
 2230 0405 5E000000 		.4byte	.LVL12
 2231 0409 0D0D0000 		.4byte	0xd0d
 2232 040d 1C040000 		.4byte	0x41c
 2233 0411 15       		.uleb128 0x15
 2234 0412 01       		.uleb128 0x1
 2235 0413 51       		.byte	0x51
 2236 0414 01       		.uleb128 0x1
 2237 0415 30       		.byte	0x30
 2238 0416 15       		.uleb128 0x15
 2239 0417 01       		.uleb128 0x1
 2240 0418 50       		.byte	0x50
 2241 0419 01       		.uleb128 0x1
 2242 041a 30       		.byte	0x30
 2243 041b 00       		.byte	0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 153


 2244 041c 14       		.uleb128 0x14
 2245 041d 64000000 		.4byte	.LVL13
 2246 0421 230D0000 		.4byte	0xd23
 2247 0425 33040000 		.4byte	0x433
 2248 0429 15       		.uleb128 0x15
 2249 042a 01       		.uleb128 0x1
 2250 042b 50       		.byte	0x50
 2251 042c 05       		.uleb128 0x5
 2252 042d 03       		.byte	0x3
 2253 042e 68000000 		.4byte	.LC5
 2254 0432 00       		.byte	0
 2255 0433 14       		.uleb128 0x14
 2256 0434 6C000000 		.4byte	.LVL14
 2257 0438 0D0D0000 		.4byte	0xd0d
 2258 043c 4B040000 		.4byte	0x44b
 2259 0440 15       		.uleb128 0x15
 2260 0441 01       		.uleb128 0x1
 2261 0442 51       		.byte	0x51
 2262 0443 01       		.uleb128 0x1
 2263 0444 30       		.byte	0x30
 2264 0445 15       		.uleb128 0x15
 2265 0446 01       		.uleb128 0x1
 2266 0447 50       		.byte	0x50
 2267 0448 01       		.uleb128 0x1
 2268 0449 31       		.byte	0x31
 2269 044a 00       		.byte	0
 2270 044b 16       		.uleb128 0x16
 2271 044c 72000000 		.4byte	.LVL15
 2272 0450 230D0000 		.4byte	0xd23
 2273 0454 15       		.uleb128 0x15
 2274 0455 01       		.uleb128 0x1
 2275 0456 50       		.byte	0x50
 2276 0457 05       		.uleb128 0x5
 2277 0458 03       		.byte	0x3
 2278 0459 7C000000 		.4byte	.LC6
 2279 045d 00       		.byte	0
 2280 045e 00       		.byte	0
 2281 045f 12       		.uleb128 0x12
 2282 0460 A0010000 		.4byte	.LASF62
 2283 0464 01       		.byte	0x1
 2284 0465 E3       		.byte	0xe3
 2285 0466 00000000 		.4byte	.LFB121
 2286 046a A4000000 		.4byte	.LFE121-.LFB121
 2287 046e 01       		.uleb128 0x1
 2288 046f 9C       		.byte	0x9c
 2289 0470 A1040000 		.4byte	0x4a1
 2290 0474 17       		.uleb128 0x17
 2291 0475 6100     		.ascii	"a\000"
 2292 0477 01       		.byte	0x1
 2293 0478 E5       		.byte	0xe5
 2294 0479 D5000000 		.4byte	0xd5
 2295 047d 21000000 		.4byte	.LLST1
 2296 0481 17       		.uleb128 0x17
 2297 0482 6200     		.ascii	"b\000"
 2298 0484 01       		.byte	0x1
 2299 0485 E5       		.byte	0xe5
 2300 0486 D5000000 		.4byte	0xd5
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 154


 2301 048a 3F000000 		.4byte	.LLST2
 2302 048e 18       		.uleb128 0x18
 2303 048f 3E000000 		.4byte	.LVL18
 2304 0493 3F0D0000 		.4byte	0xd3f
 2305 0497 18       		.uleb128 0x18
 2306 0498 96000000 		.4byte	.LVL21
 2307 049c 500D0000 		.4byte	0xd50
 2308 04a0 00       		.byte	0
 2309 04a1 19       		.uleb128 0x19
 2310 04a2 C1020000 		.4byte	.LASF63
 2311 04a6 01       		.byte	0x1
 2312 04a7 0301     		.2byte	0x103
 2313 04a9 00000000 		.4byte	.LFB122
 2314 04ad D0000000 		.4byte	.LFE122-.LFB122
 2315 04b1 01       		.uleb128 0x1
 2316 04b2 9C       		.byte	0x9c
 2317 04b3 63050000 		.4byte	0x563
 2318 04b7 1A       		.uleb128 0x1a
 2319 04b8 73747200 		.ascii	"str\000"
 2320 04bc 01       		.byte	0x1
 2321 04bd 0501     		.2byte	0x105
 2322 04bf 63050000 		.4byte	0x563
 2323 04c3 02       		.uleb128 0x2
 2324 04c4 91       		.byte	0x91
 2325 04c5 64       		.sleb128 -28
 2326 04c6 14       		.uleb128 0x14
 2327 04c7 14000000 		.4byte	.LVL22
 2328 04cb 0D0D0000 		.4byte	0xd0d
 2329 04cf DE040000 		.4byte	0x4de
 2330 04d3 15       		.uleb128 0x15
 2331 04d4 01       		.uleb128 0x1
 2332 04d5 51       		.byte	0x51
 2333 04d6 01       		.uleb128 0x1
 2334 04d7 38       		.byte	0x38
 2335 04d8 15       		.uleb128 0x15
 2336 04d9 01       		.uleb128 0x1
 2337 04da 50       		.byte	0x50
 2338 04db 01       		.uleb128 0x1
 2339 04dc 31       		.byte	0x31
 2340 04dd 00       		.byte	0
 2341 04de 14       		.uleb128 0x14
 2342 04df 3C000000 		.4byte	.LVL23
 2343 04e3 610D0000 		.4byte	0xd61
 2344 04e7 FB040000 		.4byte	0x4fb
 2345 04eb 15       		.uleb128 0x15
 2346 04ec 01       		.uleb128 0x1
 2347 04ed 51       		.byte	0x51
 2348 04ee 05       		.uleb128 0x5
 2349 04ef 03       		.byte	0x3
 2350 04f0 90000000 		.4byte	.LC7
 2351 04f4 15       		.uleb128 0x15
 2352 04f5 01       		.uleb128 0x1
 2353 04f6 50       		.byte	0x50
 2354 04f7 02       		.uleb128 0x2
 2355 04f8 91       		.byte	0x91
 2356 04f9 64       		.sleb128 -28
 2357 04fa 00       		.byte	0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 155


 2358 04fb 14       		.uleb128 0x14
 2359 04fc 60000000 		.4byte	.LVL27
 2360 0500 610D0000 		.4byte	0xd61
 2361 0504 18050000 		.4byte	0x518
 2362 0508 15       		.uleb128 0x15
 2363 0509 01       		.uleb128 0x1
 2364 050a 51       		.byte	0x51
 2365 050b 05       		.uleb128 0x5
 2366 050c 03       		.byte	0x3
 2367 050d 9C000000 		.4byte	.LC8
 2368 0511 15       		.uleb128 0x15
 2369 0512 01       		.uleb128 0x1
 2370 0513 50       		.byte	0x50
 2371 0514 02       		.uleb128 0x2
 2372 0515 91       		.byte	0x91
 2373 0516 64       		.sleb128 -28
 2374 0517 00       		.byte	0
 2375 0518 14       		.uleb128 0x14
 2376 0519 84000000 		.4byte	.LVL31
 2377 051d 610D0000 		.4byte	0xd61
 2378 0521 35050000 		.4byte	0x535
 2379 0525 15       		.uleb128 0x15
 2380 0526 01       		.uleb128 0x1
 2381 0527 51       		.byte	0x51
 2382 0528 05       		.uleb128 0x5
 2383 0529 03       		.byte	0x3
 2384 052a A8000000 		.4byte	.LC9
 2385 052e 15       		.uleb128 0x15
 2386 052f 01       		.uleb128 0x1
 2387 0530 50       		.byte	0x50
 2388 0531 02       		.uleb128 0x2
 2389 0532 91       		.byte	0x91
 2390 0533 64       		.sleb128 -28
 2391 0534 00       		.byte	0
 2392 0535 14       		.uleb128 0x14
 2393 0536 A8000000 		.4byte	.LVL35
 2394 053a 610D0000 		.4byte	0xd61
 2395 053e 52050000 		.4byte	0x552
 2396 0542 15       		.uleb128 0x15
 2397 0543 01       		.uleb128 0x1
 2398 0544 51       		.byte	0x51
 2399 0545 05       		.uleb128 0x5
 2400 0546 03       		.byte	0x3
 2401 0547 B4000000 		.4byte	.LC10
 2402 054b 15       		.uleb128 0x15
 2403 054c 01       		.uleb128 0x1
 2404 054d 50       		.byte	0x50
 2405 054e 02       		.uleb128 0x2
 2406 054f 91       		.byte	0x91
 2407 0550 64       		.sleb128 -28
 2408 0551 00       		.byte	0
 2409 0552 16       		.uleb128 0x16
 2410 0553 AE000000 		.4byte	.LVL36
 2411 0557 230D0000 		.4byte	0xd23
 2412 055b 15       		.uleb128 0x15
 2413 055c 01       		.uleb128 0x1
 2414 055d 50       		.byte	0x50
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 156


 2415 055e 02       		.uleb128 0x2
 2416 055f 91       		.byte	0x91
 2417 0560 64       		.sleb128 -28
 2418 0561 00       		.byte	0
 2419 0562 00       		.byte	0
 2420 0563 1B       		.uleb128 0x1b
 2421 0564 ED000000 		.4byte	0xed
 2422 0568 73050000 		.4byte	0x573
 2423 056c 1C       		.uleb128 0x1c
 2424 056d F4000000 		.4byte	0xf4
 2425 0571 13       		.byte	0x13
 2426 0572 00       		.byte	0
 2427 0573 19       		.uleb128 0x19
 2428 0574 A1050000 		.4byte	.LASF64
 2429 0578 01       		.byte	0x1
 2430 0579 1C01     		.2byte	0x11c
 2431 057b 00000000 		.4byte	.LFB123
 2432 057f 68050000 		.4byte	.LFE123-.LFB123
 2433 0583 01       		.uleb128 0x1
 2434 0584 9C       		.byte	0x9c
 2435 0585 760B0000 		.4byte	0xb76
 2436 0589 1D       		.uleb128 0x1d
 2437 058a EA010000 		.4byte	.LASF65
 2438 058e 01       		.byte	0x1
 2439 058f 1C01     		.2byte	0x11c
 2440 0591 FB000000 		.4byte	0xfb
 2441 0595 84000000 		.4byte	.LLST3
 2442 0599 1A       		.uleb128 0x1a
 2443 059a 73747200 		.ascii	"str\000"
 2444 059e 01       		.byte	0x1
 2445 059f 1E01     		.2byte	0x11e
 2446 05a1 63050000 		.4byte	0x563
 2447 05a5 02       		.uleb128 0x2
 2448 05a6 91       		.byte	0x91
 2449 05a7 44       		.sleb128 -60
 2450 05a8 1E       		.uleb128 0x1e
 2451 05a9 83030000 		.4byte	.LASF66
 2452 05ad 01       		.byte	0x1
 2453 05ae 1F01     		.2byte	0x11f
 2454 05b0 A5000000 		.4byte	0xa5
 2455 05b4 02       		.uleb128 0x2
 2456 05b5 91       		.byte	0x91
 2457 05b6 43       		.sleb128 -61
 2458 05b7 1F       		.uleb128 0x1f
 2459 05b8 D4040000 		.4byte	.LASF67
 2460 05bc 01       		.byte	0x1
 2461 05bd 2301     		.2byte	0x123
 2462 05bf A5000000 		.4byte	0xa5
 2463 05c3 A5000000 		.4byte	.LLST4
 2464 05c7 1F       		.uleb128 0x1f
 2465 05c8 1C010000 		.4byte	.LASF68
 2466 05cc 01       		.byte	0x1
 2467 05cd 2401     		.2byte	0x124
 2468 05cf A5000000 		.4byte	0xa5
 2469 05d3 07010000 		.4byte	.LLST5
 2470 05d7 1E       		.uleb128 0x1e
 2471 05d8 98050000 		.4byte	.LASF69
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 157


 2472 05dc 01       		.byte	0x1
 2473 05dd 2501     		.2byte	0x125
 2474 05df A5000000 		.4byte	0xa5
 2475 05e3 02       		.uleb128 0x2
 2476 05e4 91       		.byte	0x91
 2477 05e5 42       		.sleb128 -62
 2478 05e6 1E       		.uleb128 0x1e
 2479 05e7 2A030000 		.4byte	.LASF70
 2480 05eb 01       		.byte	0x1
 2481 05ec 2601     		.2byte	0x126
 2482 05ee 67010000 		.4byte	0x167
 2483 05f2 03       		.uleb128 0x3
 2484 05f3 91       		.byte	0x91
 2485 05f4 BC7F     		.sleb128 -68
 2486 05f6 1E       		.uleb128 0x1e
 2487 05f7 B6050000 		.4byte	.LASF71
 2488 05fb 01       		.byte	0x1
 2489 05fc 2601     		.2byte	0x126
 2490 05fe 67010000 		.4byte	0x167
 2491 0602 03       		.uleb128 0x3
 2492 0603 91       		.byte	0x91
 2493 0604 B87F     		.sleb128 -72
 2494 0606 20       		.uleb128 0x20
 2495 0607 70686900 		.ascii	"phi\000"
 2496 060b 01       		.byte	0x1
 2497 060c 2701     		.2byte	0x127
 2498 060e 1C010000 		.4byte	0x11c
 2499 0612 5F010000 		.4byte	.LLST6
 2500 0616 1F       		.uleb128 0x1f
 2501 0617 05010000 		.4byte	.LASF72
 2502 061b 01       		.byte	0x1
 2503 061c 2801     		.2byte	0x128
 2504 061e 1C010000 		.4byte	0x11c
 2505 0622 8B010000 		.4byte	.LLST7
 2506 0626 1A       		.uleb128 0x1a
 2507 0627 726D7300 		.ascii	"rms\000"
 2508 062b 01       		.byte	0x1
 2509 062c 2901     		.2byte	0x129
 2510 062e 760B0000 		.4byte	0xb76
 2511 0632 03       		.uleb128 0x3
 2512 0633 91       		.byte	0x91
 2513 0634 B07F     		.sleb128 -80
 2514 0636 1F       		.uleb128 0x1f
 2515 0637 F2020000 		.4byte	.LASF73
 2516 063b 01       		.byte	0x1
 2517 063c 2901     		.2byte	0x129
 2518 063e 67010000 		.4byte	0x167
 2519 0642 CF010000 		.4byte	.LLST8
 2520 0646 20       		.uleb128 0x20
 2521 0647 64697200 		.ascii	"dir\000"
 2522 064b 01       		.byte	0x1
 2523 064c 2B01     		.2byte	0x12b
 2524 064e 1C010000 		.4byte	0x11c
 2525 0652 03020000 		.4byte	.LLST9
 2526 0656 1F       		.uleb128 0x1f
 2527 0657 84020000 		.4byte	.LASF74
 2528 065b 01       		.byte	0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 158


 2529 065c 2C01     		.2byte	0x12c
 2530 065e 1C010000 		.4byte	0x11c
 2531 0662 2F020000 		.4byte	.LLST10
 2532 0666 1E       		.uleb128 0x1e
 2533 0667 1C020000 		.4byte	.LASF75
 2534 066b 01       		.byte	0x1
 2535 066c 2D01     		.2byte	0x12d
 2536 066e A5000000 		.4byte	0xa5
 2537 0672 01       		.uleb128 0x1
 2538 0673 5B       		.byte	0x5b
 2539 0674 1F       		.uleb128 0x1f
 2540 0675 29020000 		.4byte	.LASF76
 2541 0679 01       		.byte	0x1
 2542 067a 2E01     		.2byte	0x12e
 2543 067c A5000000 		.4byte	0xa5
 2544 0680 9B020000 		.4byte	.LLST11
 2545 0684 1F       		.uleb128 0x1f
 2546 0685 91020000 		.4byte	.LASF77
 2547 0689 01       		.byte	0x1
 2548 068a 3001     		.2byte	0x130
 2549 068c 1C010000 		.4byte	0x11c
 2550 0690 C4020000 		.4byte	.LLST12
 2551 0694 1F       		.uleb128 0x1f
 2552 0695 74040000 		.4byte	.LASF78
 2553 0699 01       		.byte	0x1
 2554 069a 3101     		.2byte	0x131
 2555 069c 1C010000 		.4byte	0x11c
 2556 06a0 F0020000 		.4byte	.LLST13
 2557 06a4 1E       		.uleb128 0x1e
 2558 06a5 4A000000 		.4byte	.LASF79
 2559 06a9 01       		.byte	0x1
 2560 06aa 3501     		.2byte	0x135
 2561 06ac C9000000 		.4byte	0xc9
 2562 06b0 03       		.uleb128 0x3
 2563 06b1 91       		.byte	0x91
 2564 06b2 AF7F     		.sleb128 -81
 2565 06b4 20       		.uleb128 0x20
 2566 06b5 6900     		.ascii	"i\000"
 2567 06b7 01       		.byte	0x1
 2568 06b8 3601     		.2byte	0x136
 2569 06ba A5000000 		.4byte	0xa5
 2570 06be 1C030000 		.4byte	.LLST14
 2571 06c2 21       		.uleb128 0x21
 2572 06c3 4E060000 		.4byte	.LASF80
 2573 06c7 01       		.byte	0x1
 2574 06c8 3801     		.2byte	0x138
 2575 06ca 860B0000 		.4byte	0xb86
 2576 06ce 05       		.byte	0x5
 2577 06cf 22       		.uleb128 0x22
 2578 06d0 A7020000 		.4byte	0x2a7
 2579 06d4 78010000 		.4byte	.LBB4
 2580 06d8 14000000 		.4byte	.LBE4-.LBB4
 2581 06dc 01       		.byte	0x1
 2582 06dd 8201     		.2byte	0x182
 2583 06df 07070000 		.4byte	0x707
 2584 06e3 23       		.uleb128 0x23
 2585 06e4 C3020000 		.4byte	0x2c3
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 159


 2586 06e8 71030000 		.4byte	.LLST15
 2587 06ec 23       		.uleb128 0x23
 2588 06ed B8020000 		.4byte	0x2b8
 2589 06f1 89030000 		.4byte	.LLST16
 2590 06f5 16       		.uleb128 0x16
 2591 06f6 86010000 		.4byte	.LVL75
 2592 06fa 7C0D0000 		.4byte	0xd7c
 2593 06fe 15       		.uleb128 0x15
 2594 06ff 01       		.uleb128 0x1
 2595 0700 50       		.byte	0x50
 2596 0701 03       		.uleb128 0x3
 2597 0702 F5       		.byte	0xf5
 2598 0703 04       		.uleb128 0x4
 2599 0704 2C       		.uleb128 0x2c
 2600 0705 00       		.byte	0
 2601 0706 00       		.byte	0
 2602 0707 18       		.uleb128 0x18
 2603 0708 12000000 		.4byte	.LVL40
 2604 070c 1B030000 		.4byte	0x31b
 2605 0710 18       		.uleb128 0x18
 2606 0711 28000000 		.4byte	.LVL41
 2607 0715 3F0D0000 		.4byte	0xd3f
 2608 0719 18       		.uleb128 0x18
 2609 071a 2E000000 		.4byte	.LVL42
 2610 071e 500D0000 		.4byte	0xd50
 2611 0722 18       		.uleb128 0x18
 2612 0723 40000000 		.4byte	.LVL44
 2613 0727 920D0000 		.4byte	0xd92
 2614 072b 14       		.uleb128 0x14
 2615 072c 4A000000 		.4byte	.LVL45
 2616 0730 9D0D0000 		.4byte	0xd9d
 2617 0734 3E070000 		.4byte	0x73e
 2618 0738 15       		.uleb128 0x15
 2619 0739 01       		.uleb128 0x1
 2620 073a 50       		.byte	0x50
 2621 073b 01       		.uleb128 0x1
 2622 073c 35       		.byte	0x35
 2623 073d 00       		.byte	0
 2624 073e 14       		.uleb128 0x14
 2625 073f 5C000000 		.4byte	.LVL46
 2626 0743 AF0D0000 		.4byte	0xdaf
 2627 0747 5C070000 		.4byte	0x75c
 2628 074b 15       		.uleb128 0x15
 2629 074c 01       		.uleb128 0x1
 2630 074d 53       		.byte	0x53
 2631 074e 01       		.uleb128 0x1
 2632 074f 30       		.byte	0x30
 2633 0750 15       		.uleb128 0x15
 2634 0751 01       		.uleb128 0x1
 2635 0752 52       		.byte	0x52
 2636 0753 01       		.uleb128 0x1
 2637 0754 30       		.byte	0x30
 2638 0755 15       		.uleb128 0x15
 2639 0756 01       		.uleb128 0x1
 2640 0757 51       		.byte	0x51
 2641 0758 02       		.uleb128 0x2
 2642 0759 91       		.byte	0x91
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 160


 2643 075a 43       		.sleb128 -61
 2644 075b 00       		.byte	0
 2645 075c 18       		.uleb128 0x18
 2646 075d 76000000 		.4byte	.LVL47
 2647 0761 1B030000 		.4byte	0x31b
 2648 0765 14       		.uleb128 0x14
 2649 0766 86000000 		.4byte	.LVL48
 2650 076a AF0D0000 		.4byte	0xdaf
 2651 076e 83070000 		.4byte	0x783
 2652 0772 15       		.uleb128 0x15
 2653 0773 01       		.uleb128 0x1
 2654 0774 53       		.byte	0x53
 2655 0775 01       		.uleb128 0x1
 2656 0776 30       		.byte	0x30
 2657 0777 15       		.uleb128 0x15
 2658 0778 01       		.uleb128 0x1
 2659 0779 52       		.byte	0x52
 2660 077a 01       		.uleb128 0x1
 2661 077b 30       		.byte	0x30
 2662 077c 15       		.uleb128 0x15
 2663 077d 01       		.uleb128 0x1
 2664 077e 51       		.byte	0x51
 2665 077f 02       		.uleb128 0x2
 2666 0780 91       		.byte	0x91
 2667 0781 43       		.sleb128 -61
 2668 0782 00       		.byte	0
 2669 0783 18       		.uleb128 0x18
 2670 0784 9E000000 		.4byte	.LVL49
 2671 0788 1B030000 		.4byte	0x31b
 2672 078c 18       		.uleb128 0x18
 2673 078d A6000000 		.4byte	.LVL50
 2674 0791 DE0D0000 		.4byte	0xdde
 2675 0795 14       		.uleb128 0x14
 2676 0796 B2000000 		.4byte	.LVL51
 2677 079a F90D0000 		.4byte	0xdf9
 2678 079e A8070000 		.4byte	0x7a8
 2679 07a2 15       		.uleb128 0x15
 2680 07a3 01       		.uleb128 0x1
 2681 07a4 50       		.byte	0x50
 2682 07a5 01       		.uleb128 0x1
 2683 07a6 31       		.byte	0x31
 2684 07a7 00       		.byte	0
 2685 07a8 14       		.uleb128 0x14
 2686 07a9 C2000000 		.4byte	.LVL52
 2687 07ad AF0D0000 		.4byte	0xdaf
 2688 07b1 C6070000 		.4byte	0x7c6
 2689 07b5 15       		.uleb128 0x15
 2690 07b6 01       		.uleb128 0x1
 2691 07b7 53       		.byte	0x53
 2692 07b8 01       		.uleb128 0x1
 2693 07b9 30       		.byte	0x30
 2694 07ba 15       		.uleb128 0x15
 2695 07bb 01       		.uleb128 0x1
 2696 07bc 52       		.byte	0x52
 2697 07bd 01       		.uleb128 0x1
 2698 07be 30       		.byte	0x30
 2699 07bf 15       		.uleb128 0x15
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 161


 2700 07c0 01       		.uleb128 0x1
 2701 07c1 51       		.byte	0x51
 2702 07c2 02       		.uleb128 0x2
 2703 07c3 91       		.byte	0x91
 2704 07c4 42       		.sleb128 -62
 2705 07c5 00       		.byte	0
 2706 07c6 14       		.uleb128 0x14
 2707 07c7 D2000000 		.4byte	.LVL53
 2708 07cb AF0D0000 		.4byte	0xdaf
 2709 07cf E4070000 		.4byte	0x7e4
 2710 07d3 15       		.uleb128 0x15
 2711 07d4 01       		.uleb128 0x1
 2712 07d5 53       		.byte	0x53
 2713 07d6 01       		.uleb128 0x1
 2714 07d7 30       		.byte	0x30
 2715 07d8 15       		.uleb128 0x15
 2716 07d9 01       		.uleb128 0x1
 2717 07da 52       		.byte	0x52
 2718 07db 02       		.uleb128 0x2
 2719 07dc 09       		.byte	0x9
 2720 07dd FF       		.byte	0xff
 2721 07de 15       		.uleb128 0x15
 2722 07df 01       		.uleb128 0x1
 2723 07e0 51       		.byte	0x51
 2724 07e1 01       		.uleb128 0x1
 2725 07e2 30       		.byte	0x30
 2726 07e3 00       		.byte	0
 2727 07e4 14       		.uleb128 0x14
 2728 07e5 EA000000 		.4byte	.LVL56
 2729 07e9 0A0E0000 		.4byte	0xe0a
 2730 07ed 0A080000 		.4byte	0x80a
 2731 07f1 15       		.uleb128 0x15
 2732 07f2 01       		.uleb128 0x1
 2733 07f3 53       		.byte	0x53
 2734 07f4 02       		.uleb128 0x2
 2735 07f5 08       		.byte	0x8
 2736 07f6 80       		.byte	0x80
 2737 07f7 15       		.uleb128 0x15
 2738 07f8 01       		.uleb128 0x1
 2739 07f9 52       		.byte	0x52
 2740 07fa 02       		.uleb128 0x2
 2741 07fb 74       		.byte	0x74
 2742 07fc 00       		.sleb128 0
 2743 07fd 15       		.uleb128 0x15
 2744 07fe 01       		.uleb128 0x1
 2745 07ff 51       		.byte	0x51
 2746 0800 02       		.uleb128 0x2
 2747 0801 75       		.byte	0x75
 2748 0802 00       		.sleb128 0
 2749 0803 15       		.uleb128 0x15
 2750 0804 01       		.uleb128 0x1
 2751 0805 50       		.byte	0x50
 2752 0806 02       		.uleb128 0x2
 2753 0807 76       		.byte	0x76
 2754 0808 00       		.sleb128 0
 2755 0809 00       		.byte	0
 2756 080a 14       		.uleb128 0x14
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 162


 2757 080b F4000000 		.4byte	.LVL57
 2758 080f 2B0E0000 		.4byte	0xe2b
 2759 0813 2B080000 		.4byte	0x82b
 2760 0817 15       		.uleb128 0x15
 2761 0818 01       		.uleb128 0x1
 2762 0819 52       		.byte	0x52
 2763 081a 03       		.uleb128 0x3
 2764 081b 91       		.byte	0x91
 2765 081c BC7F     		.sleb128 -68
 2766 081e 15       		.uleb128 0x15
 2767 081f 01       		.uleb128 0x1
 2768 0820 51       		.byte	0x51
 2769 0821 02       		.uleb128 0x2
 2770 0822 08       		.byte	0x8
 2771 0823 80       		.byte	0x80
 2772 0824 15       		.uleb128 0x15
 2773 0825 01       		.uleb128 0x1
 2774 0826 50       		.byte	0x50
 2775 0827 02       		.uleb128 0x2
 2776 0828 74       		.byte	0x74
 2777 0829 00       		.sleb128 0
 2778 082a 00       		.byte	0
 2779 082b 14       		.uleb128 0x14
 2780 082c 02010000 		.4byte	.LVL58
 2781 0830 0A0E0000 		.4byte	0xe0a
 2782 0834 51080000 		.4byte	0x851
 2783 0838 15       		.uleb128 0x15
 2784 0839 01       		.uleb128 0x1
 2785 083a 53       		.byte	0x53
 2786 083b 02       		.uleb128 0x2
 2787 083c 08       		.byte	0x8
 2788 083d 80       		.byte	0x80
 2789 083e 15       		.uleb128 0x15
 2790 083f 01       		.uleb128 0x1
 2791 0840 52       		.byte	0x52
 2792 0841 02       		.uleb128 0x2
 2793 0842 74       		.byte	0x74
 2794 0843 00       		.sleb128 0
 2795 0844 15       		.uleb128 0x15
 2796 0845 01       		.uleb128 0x1
 2797 0846 51       		.byte	0x51
 2798 0847 02       		.uleb128 0x2
 2799 0848 75       		.byte	0x75
 2800 0849 00       		.sleb128 0
 2801 084a 15       		.uleb128 0x15
 2802 084b 01       		.uleb128 0x1
 2803 084c 50       		.byte	0x50
 2804 084d 02       		.uleb128 0x2
 2805 084e 76       		.byte	0x76
 2806 084f 20       		.sleb128 32
 2807 0850 00       		.byte	0
 2808 0851 14       		.uleb128 0x14
 2809 0852 0C010000 		.4byte	.LVL59
 2810 0856 2B0E0000 		.4byte	0xe2b
 2811 085a 72080000 		.4byte	0x872
 2812 085e 15       		.uleb128 0x15
 2813 085f 01       		.uleb128 0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 163


 2814 0860 52       		.byte	0x52
 2815 0861 03       		.uleb128 0x3
 2816 0862 91       		.byte	0x91
 2817 0863 B87F     		.sleb128 -72
 2818 0865 15       		.uleb128 0x15
 2819 0866 01       		.uleb128 0x1
 2820 0867 51       		.byte	0x51
 2821 0868 02       		.uleb128 0x2
 2822 0869 08       		.byte	0x8
 2823 086a 80       		.byte	0x80
 2824 086b 15       		.uleb128 0x15
 2825 086c 01       		.uleb128 0x1
 2826 086d 50       		.byte	0x50
 2827 086e 02       		.uleb128 0x2
 2828 086f 74       		.byte	0x74
 2829 0870 00       		.sleb128 0
 2830 0871 00       		.byte	0
 2831 0872 18       		.uleb128 0x18
 2832 0873 28010000 		.4byte	.LVL62
 2833 0877 470E0000 		.4byte	0xe47
 2834 087b 14       		.uleb128 0x14
 2835 087c 52010000 		.4byte	.LVL68
 2836 0880 610E0000 		.4byte	0xe61
 2837 0884 96080000 		.4byte	0x896
 2838 0888 15       		.uleb128 0x15
 2839 0889 01       		.uleb128 0x1
 2840 088a 52       		.byte	0x52
 2841 088b 03       		.uleb128 0x3
 2842 088c 91       		.byte	0x91
 2843 088d B07F     		.sleb128 -80
 2844 088f 15       		.uleb128 0x15
 2845 0890 01       		.uleb128 0x1
 2846 0891 51       		.byte	0x51
 2847 0892 02       		.uleb128 0x2
 2848 0893 08       		.byte	0x8
 2849 0894 80       		.byte	0x80
 2850 0895 00       		.byte	0
 2851 0896 14       		.uleb128 0x14
 2852 0897 5C010000 		.4byte	.LVL69
 2853 089b 610E0000 		.4byte	0xe61
 2854 089f B1080000 		.4byte	0x8b1
 2855 08a3 15       		.uleb128 0x15
 2856 08a4 01       		.uleb128 0x1
 2857 08a5 52       		.byte	0x52
 2858 08a6 03       		.uleb128 0x3
 2859 08a7 91       		.byte	0x91
 2860 08a8 B47F     		.sleb128 -76
 2861 08aa 15       		.uleb128 0x15
 2862 08ab 01       		.uleb128 0x1
 2863 08ac 51       		.byte	0x51
 2864 08ad 02       		.uleb128 0x2
 2865 08ae 08       		.byte	0x8
 2866 08af 80       		.byte	0x80
 2867 08b0 00       		.byte	0
 2868 08b1 18       		.uleb128 0x18
 2869 08b2 A8010000 		.4byte	.LVL82
 2870 08b6 470E0000 		.4byte	0xe47
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 164


 2871 08ba 14       		.uleb128 0x14
 2872 08bb DE010000 		.4byte	.LVL89
 2873 08bf 7D0E0000 		.4byte	0xe7d
 2874 08c3 D7080000 		.4byte	0x8d7
 2875 08c7 15       		.uleb128 0x15
 2876 08c8 01       		.uleb128 0x1
 2877 08c9 53       		.byte	0x53
 2878 08ca 01       		.uleb128 0x1
 2879 08cb 30       		.byte	0x30
 2880 08cc 15       		.uleb128 0x15
 2881 08cd 01       		.uleb128 0x1
 2882 08ce 52       		.byte	0x52
 2883 08cf 01       		.uleb128 0x1
 2884 08d0 30       		.byte	0x30
 2885 08d1 15       		.uleb128 0x15
 2886 08d2 01       		.uleb128 0x1
 2887 08d3 51       		.byte	0x51
 2888 08d4 01       		.uleb128 0x1
 2889 08d5 30       		.byte	0x30
 2890 08d6 00       		.byte	0
 2891 08d7 14       		.uleb128 0x14
 2892 08d8 E4010000 		.4byte	.LVL90
 2893 08dc F90D0000 		.4byte	0xdf9
 2894 08e0 EA080000 		.4byte	0x8ea
 2895 08e4 15       		.uleb128 0x15
 2896 08e5 01       		.uleb128 0x1
 2897 08e6 50       		.byte	0x50
 2898 08e7 01       		.uleb128 0x1
 2899 08e8 30       		.byte	0x30
 2900 08e9 00       		.byte	0
 2901 08ea 14       		.uleb128 0x14
 2902 08eb 76020000 		.4byte	.LVL104
 2903 08ef 0D0D0000 		.4byte	0xd0d
 2904 08f3 03090000 		.4byte	0x903
 2905 08f7 15       		.uleb128 0x15
 2906 08f8 01       		.uleb128 0x1
 2907 08f9 51       		.byte	0x51
 2908 08fa 02       		.uleb128 0x2
 2909 08fb 7B       		.byte	0x7b
 2910 08fc 00       		.sleb128 0
 2911 08fd 15       		.uleb128 0x15
 2912 08fe 01       		.uleb128 0x1
 2913 08ff 50       		.byte	0x50
 2914 0900 01       		.uleb128 0x1
 2915 0901 30       		.byte	0x30
 2916 0902 00       		.byte	0
 2917 0903 14       		.uleb128 0x14
 2918 0904 82020000 		.4byte	.LVL105
 2919 0908 A70E0000 		.4byte	0xea7
 2920 090c 25090000 		.4byte	0x925
 2921 0910 15       		.uleb128 0x15
 2922 0911 01       		.uleb128 0x1
 2923 0912 51       		.byte	0x51
 2924 0913 0A       		.uleb128 0xa
 2925 0914 7A       		.byte	0x7a
 2926 0915 00       		.sleb128 0
 2927 0916 34       		.byte	0x34
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 165


 2928 0917 24       		.byte	0x24
 2929 0918 03       		.byte	0x3
 2930 0919 8C000000 		.4byte	.LANCHOR1+140
 2931 091d 22       		.byte	0x22
 2932 091e 15       		.uleb128 0x15
 2933 091f 01       		.uleb128 0x1
 2934 0920 50       		.byte	0x50
 2935 0921 02       		.uleb128 0x2
 2936 0922 91       		.byte	0x91
 2937 0923 44       		.sleb128 -60
 2938 0924 00       		.byte	0
 2939 0925 14       		.uleb128 0x14
 2940 0926 88020000 		.4byte	.LVL106
 2941 092a 230D0000 		.4byte	0xd23
 2942 092e 39090000 		.4byte	0x939
 2943 0932 15       		.uleb128 0x15
 2944 0933 01       		.uleb128 0x1
 2945 0934 50       		.byte	0x50
 2946 0935 02       		.uleb128 0x2
 2947 0936 91       		.byte	0x91
 2948 0937 44       		.sleb128 -60
 2949 0938 00       		.byte	0
 2950 0939 14       		.uleb128 0x14
 2951 093a CC020000 		.4byte	.LVL107
 2952 093e 0D0D0000 		.4byte	0xd0d
 2953 0942 51090000 		.4byte	0x951
 2954 0946 15       		.uleb128 0x15
 2955 0947 01       		.uleb128 0x1
 2956 0948 51       		.byte	0x51
 2957 0949 01       		.uleb128 0x1
 2958 094a 30       		.byte	0x30
 2959 094b 15       		.uleb128 0x15
 2960 094c 01       		.uleb128 0x1
 2961 094d 50       		.byte	0x50
 2962 094e 01       		.uleb128 0x1
 2963 094f 30       		.byte	0x30
 2964 0950 00       		.byte	0
 2965 0951 14       		.uleb128 0x14
 2966 0952 D2020000 		.4byte	.LVL108
 2967 0956 230D0000 		.4byte	0xd23
 2968 095a 68090000 		.4byte	0x968
 2969 095e 15       		.uleb128 0x15
 2970 095f 01       		.uleb128 0x1
 2971 0960 50       		.byte	0x50
 2972 0961 05       		.uleb128 0x5
 2973 0962 03       		.byte	0x3
 2974 0963 C0000000 		.4byte	.LC11
 2975 0967 00       		.byte	0
 2976 0968 14       		.uleb128 0x14
 2977 0969 DA020000 		.4byte	.LVL109
 2978 096d 0D0D0000 		.4byte	0xd0d
 2979 0971 80090000 		.4byte	0x980
 2980 0975 15       		.uleb128 0x15
 2981 0976 01       		.uleb128 0x1
 2982 0977 51       		.byte	0x51
 2983 0978 01       		.uleb128 0x1
 2984 0979 3A       		.byte	0x3a
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 166


 2985 097a 15       		.uleb128 0x15
 2986 097b 01       		.uleb128 0x1
 2987 097c 50       		.byte	0x50
 2988 097d 01       		.uleb128 0x1
 2989 097e 31       		.byte	0x31
 2990 097f 00       		.byte	0
 2991 0980 14       		.uleb128 0x14
 2992 0981 2A030000 		.4byte	.LVL117
 2993 0985 C50E0000 		.4byte	0xec5
 2994 0989 A2090000 		.4byte	0x9a2
 2995 098d 15       		.uleb128 0x15
 2996 098e 06       		.uleb128 0x6
 2997 098f 52       		.byte	0x52
 2998 0990 93       		.byte	0x93
 2999 0991 04       		.uleb128 0x4
 3000 0992 53       		.byte	0x53
 3001 0993 93       		.byte	0x93
 3002 0994 04       		.uleb128 0x4
 3003 0995 0B       		.uleb128 0xb
 3004 0996 F4       		.byte	0xf4
 3005 0997 25       		.uleb128 0x25
 3006 0998 08       		.byte	0x8
 3007 0999 04560E2D 		.4byte	0x2d0e5604
 3008 099d B29DD73F 		.4byte	0x3fd79db2
 3009 09a1 00       		.byte	0
 3010 09a2 14       		.uleb128 0x14
 3011 09a3 44030000 		.4byte	.LVL120
 3012 09a7 610D0000 		.4byte	0xd61
 3013 09ab BF090000 		.4byte	0x9bf
 3014 09af 15       		.uleb128 0x15
 3015 09b0 01       		.uleb128 0x1
 3016 09b1 51       		.byte	0x51
 3017 09b2 05       		.uleb128 0x5
 3018 09b3 03       		.byte	0x3
 3019 09b4 D4000000 		.4byte	.LC12
 3020 09b8 15       		.uleb128 0x15
 3021 09b9 01       		.uleb128 0x1
 3022 09ba 50       		.byte	0x50
 3023 09bb 02       		.uleb128 0x2
 3024 09bc 91       		.byte	0x91
 3025 09bd 44       		.sleb128 -60
 3026 09be 00       		.byte	0
 3027 09bf 14       		.uleb128 0x14
 3028 09c0 58030000 		.4byte	.LVL123
 3029 09c4 230D0000 		.4byte	0xd23
 3030 09c8 D3090000 		.4byte	0x9d3
 3031 09cc 15       		.uleb128 0x15
 3032 09cd 01       		.uleb128 0x1
 3033 09ce 50       		.byte	0x50
 3034 09cf 02       		.uleb128 0x2
 3035 09d0 91       		.byte	0x91
 3036 09d1 44       		.sleb128 -60
 3037 09d2 00       		.byte	0
 3038 09d3 14       		.uleb128 0x14
 3039 09d4 6A030000 		.4byte	.LVL125
 3040 09d8 0D0D0000 		.4byte	0xd0d
 3041 09dc EB090000 		.4byte	0x9eb
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 167


 3042 09e0 15       		.uleb128 0x15
 3043 09e1 01       		.uleb128 0x1
 3044 09e2 51       		.byte	0x51
 3045 09e3 01       		.uleb128 0x1
 3046 09e4 36       		.byte	0x36
 3047 09e5 15       		.uleb128 0x15
 3048 09e6 01       		.uleb128 0x1
 3049 09e7 50       		.byte	0x50
 3050 09e8 01       		.uleb128 0x1
 3051 09e9 30       		.byte	0x30
 3052 09ea 00       		.byte	0
 3053 09eb 14       		.uleb128 0x14
 3054 09ec 80030000 		.4byte	.LVL128
 3055 09f0 610D0000 		.4byte	0xd61
 3056 09f4 050A0000 		.4byte	0xa05
 3057 09f8 15       		.uleb128 0x15
 3058 09f9 01       		.uleb128 0x1
 3059 09fa 51       		.byte	0x51
 3060 09fb 02       		.uleb128 0x2
 3061 09fc 78       		.byte	0x78
 3062 09fd 00       		.sleb128 0
 3063 09fe 15       		.uleb128 0x15
 3064 09ff 01       		.uleb128 0x1
 3065 0a00 50       		.byte	0x50
 3066 0a01 02       		.uleb128 0x2
 3067 0a02 91       		.byte	0x91
 3068 0a03 44       		.sleb128 -60
 3069 0a04 00       		.byte	0
 3070 0a05 14       		.uleb128 0x14
 3071 0a06 86030000 		.4byte	.LVL129
 3072 0a0a 230D0000 		.4byte	0xd23
 3073 0a0e 190A0000 		.4byte	0xa19
 3074 0a12 15       		.uleb128 0x15
 3075 0a13 01       		.uleb128 0x1
 3076 0a14 50       		.byte	0x50
 3077 0a15 02       		.uleb128 0x2
 3078 0a16 91       		.byte	0x91
 3079 0a17 44       		.sleb128 -60
 3080 0a18 00       		.byte	0
 3081 0a19 14       		.uleb128 0x14
 3082 0a1a 8E030000 		.4byte	.LVL130
 3083 0a1e 0D0D0000 		.4byte	0xd0d
 3084 0a22 310A0000 		.4byte	0xa31
 3085 0a26 15       		.uleb128 0x15
 3086 0a27 01       		.uleb128 0x1
 3087 0a28 51       		.byte	0x51
 3088 0a29 01       		.uleb128 0x1
 3089 0a2a 36       		.byte	0x36
 3090 0a2b 15       		.uleb128 0x15
 3091 0a2c 01       		.uleb128 0x1
 3092 0a2d 50       		.byte	0x50
 3093 0a2e 01       		.uleb128 0x1
 3094 0a2f 31       		.byte	0x31
 3095 0a30 00       		.byte	0
 3096 0a31 14       		.uleb128 0x14
 3097 0a32 A0030000 		.4byte	.LVL132
 3098 0a36 610D0000 		.4byte	0xd61
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 168


 3099 0a3a 4B0A0000 		.4byte	0xa4b
 3100 0a3e 15       		.uleb128 0x15
 3101 0a3f 01       		.uleb128 0x1
 3102 0a40 51       		.byte	0x51
 3103 0a41 02       		.uleb128 0x2
 3104 0a42 78       		.byte	0x78
 3105 0a43 00       		.sleb128 0
 3106 0a44 15       		.uleb128 0x15
 3107 0a45 01       		.uleb128 0x1
 3108 0a46 50       		.byte	0x50
 3109 0a47 02       		.uleb128 0x2
 3110 0a48 91       		.byte	0x91
 3111 0a49 44       		.sleb128 -60
 3112 0a4a 00       		.byte	0
 3113 0a4b 14       		.uleb128 0x14
 3114 0a4c A6030000 		.4byte	.LVL133
 3115 0a50 230D0000 		.4byte	0xd23
 3116 0a54 5F0A0000 		.4byte	0xa5f
 3117 0a58 15       		.uleb128 0x15
 3118 0a59 01       		.uleb128 0x1
 3119 0a5a 50       		.byte	0x50
 3120 0a5b 02       		.uleb128 0x2
 3121 0a5c 91       		.byte	0x91
 3122 0a5d 44       		.sleb128 -60
 3123 0a5e 00       		.byte	0
 3124 0a5f 14       		.uleb128 0x14
 3125 0a60 AE030000 		.4byte	.LVL134
 3126 0a64 0D0D0000 		.4byte	0xd0d
 3127 0a68 770A0000 		.4byte	0xa77
 3128 0a6c 15       		.uleb128 0x15
 3129 0a6d 01       		.uleb128 0x1
 3130 0a6e 51       		.byte	0x51
 3131 0a6f 01       		.uleb128 0x1
 3132 0a70 38       		.byte	0x38
 3133 0a71 15       		.uleb128 0x15
 3134 0a72 01       		.uleb128 0x1
 3135 0a73 50       		.byte	0x50
 3136 0a74 01       		.uleb128 0x1
 3137 0a75 32       		.byte	0x32
 3138 0a76 00       		.byte	0
 3139 0a77 14       		.uleb128 0x14
 3140 0a78 C0030000 		.4byte	.LVL135
 3141 0a7c 610D0000 		.4byte	0xd61
 3142 0a80 A20A0000 		.4byte	0xaa2
 3143 0a84 15       		.uleb128 0x15
 3144 0a85 06       		.uleb128 0x6
 3145 0a86 52       		.byte	0x52
 3146 0a87 93       		.byte	0x93
 3147 0a88 04       		.uleb128 0x4
 3148 0a89 53       		.byte	0x53
 3149 0a8a 93       		.byte	0x93
 3150 0a8b 04       		.uleb128 0x4
 3151 0a8c 05       		.uleb128 0x5
 3152 0a8d 7D       		.byte	0x7d
 3153 0a8e 00       		.sleb128 0
 3154 0a8f F6       		.byte	0xf6
 3155 0a90 08       		.byte	0x8
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 169


 3156 0a91 25       		.uleb128 0x25
 3157 0a92 15       		.uleb128 0x15
 3158 0a93 01       		.uleb128 0x1
 3159 0a94 51       		.byte	0x51
 3160 0a95 05       		.uleb128 0x5
 3161 0a96 03       		.byte	0x3
 3162 0a97 D4000000 		.4byte	.LC12
 3163 0a9b 15       		.uleb128 0x15
 3164 0a9c 01       		.uleb128 0x1
 3165 0a9d 50       		.byte	0x50
 3166 0a9e 02       		.uleb128 0x2
 3167 0a9f 91       		.byte	0x91
 3168 0aa0 44       		.sleb128 -60
 3169 0aa1 00       		.byte	0
 3170 0aa2 14       		.uleb128 0x14
 3171 0aa3 D4030000 		.4byte	.LVL136
 3172 0aa7 230D0000 		.4byte	0xd23
 3173 0aab B60A0000 		.4byte	0xab6
 3174 0aaf 15       		.uleb128 0x15
 3175 0ab0 01       		.uleb128 0x1
 3176 0ab1 50       		.byte	0x50
 3177 0ab2 02       		.uleb128 0x2
 3178 0ab3 91       		.byte	0x91
 3179 0ab4 44       		.sleb128 -60
 3180 0ab5 00       		.byte	0
 3181 0ab6 14       		.uleb128 0x14
 3182 0ab7 E6030000 		.4byte	.LVL138
 3183 0abb 0D0D0000 		.4byte	0xd0d
 3184 0abf CE0A0000 		.4byte	0xace
 3185 0ac3 15       		.uleb128 0x15
 3186 0ac4 01       		.uleb128 0x1
 3187 0ac5 51       		.byte	0x51
 3188 0ac6 01       		.uleb128 0x1
 3189 0ac7 37       		.byte	0x37
 3190 0ac8 15       		.uleb128 0x15
 3191 0ac9 01       		.uleb128 0x1
 3192 0aca 50       		.byte	0x50
 3193 0acb 01       		.uleb128 0x1
 3194 0acc 30       		.byte	0x30
 3195 0acd 00       		.byte	0
 3196 0ace 14       		.uleb128 0x14
 3197 0acf F8030000 		.4byte	.LVL139
 3198 0ad3 610D0000 		.4byte	0xd61
 3199 0ad7 EB0A0000 		.4byte	0xaeb
 3200 0adb 15       		.uleb128 0x15
 3201 0adc 01       		.uleb128 0x1
 3202 0add 51       		.byte	0x51
 3203 0ade 05       		.uleb128 0x5
 3204 0adf 03       		.byte	0x3
 3205 0ae0 D4000000 		.4byte	.LC12
 3206 0ae4 15       		.uleb128 0x15
 3207 0ae5 01       		.uleb128 0x1
 3208 0ae6 50       		.byte	0x50
 3209 0ae7 02       		.uleb128 0x2
 3210 0ae8 91       		.byte	0x91
 3211 0ae9 44       		.sleb128 -60
 3212 0aea 00       		.byte	0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 170


 3213 0aeb 14       		.uleb128 0x14
 3214 0aec 0A040000 		.4byte	.LVL140
 3215 0af0 230D0000 		.4byte	0xd23
 3216 0af4 FF0A0000 		.4byte	0xaff
 3217 0af8 15       		.uleb128 0x15
 3218 0af9 01       		.uleb128 0x1
 3219 0afa 50       		.byte	0x50
 3220 0afb 02       		.uleb128 0x2
 3221 0afc 91       		.byte	0x91
 3222 0afd 44       		.sleb128 -60
 3223 0afe 00       		.byte	0
 3224 0aff 18       		.uleb128 0x18
 3225 0b00 0E040000 		.4byte	.LVL141
 3226 0b04 A1040000 		.4byte	0x4a1
 3227 0b08 18       		.uleb128 0x18
 3228 0b09 20040000 		.4byte	.LVL145
 3229 0b0d DE0D0000 		.4byte	0xdde
 3230 0b11 14       		.uleb128 0x14
 3231 0b12 34040000 		.4byte	.LVL146
 3232 0b16 AF0D0000 		.4byte	0xdaf
 3233 0b1a 300B0000 		.4byte	0xb30
 3234 0b1e 15       		.uleb128 0x15
 3235 0b1f 01       		.uleb128 0x1
 3236 0b20 53       		.byte	0x53
 3237 0b21 01       		.uleb128 0x1
 3238 0b22 30       		.byte	0x30
 3239 0b23 15       		.uleb128 0x15
 3240 0b24 01       		.uleb128 0x1
 3241 0b25 52       		.byte	0x52
 3242 0b26 01       		.uleb128 0x1
 3243 0b27 30       		.byte	0x30
 3244 0b28 15       		.uleb128 0x15
 3245 0b29 01       		.uleb128 0x1
 3246 0b2a 51       		.byte	0x51
 3247 0b2b 03       		.uleb128 0x3
 3248 0b2c 91       		.byte	0x91
 3249 0b2d AF7F     		.sleb128 -81
 3250 0b2f 00       		.byte	0
 3251 0b30 18       		.uleb128 0x18
 3252 0b31 7E040000 		.4byte	.LVL147
 3253 0b35 DF0E0000 		.4byte	0xedf
 3254 0b39 18       		.uleb128 0x18
 3255 0b3a 90040000 		.4byte	.LVL148
 3256 0b3e F00E0000 		.4byte	0xef0
 3257 0b42 18       		.uleb128 0x18
 3258 0b43 94040000 		.4byte	.LVL149
 3259 0b47 5F040000 		.4byte	0x45f
 3260 0b4b 18       		.uleb128 0x18
 3261 0b4c 12050000 		.4byte	.LVL157
 3262 0b50 DF0E0000 		.4byte	0xedf
 3263 0b54 18       		.uleb128 0x18
 3264 0b55 22050000 		.4byte	.LVL158
 3265 0b59 F00E0000 		.4byte	0xef0
 3266 0b5d 18       		.uleb128 0x18
 3267 0b5e 26050000 		.4byte	.LVL159
 3268 0b62 5F040000 		.4byte	0x45f
 3269 0b66 16       		.uleb128 0x16
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 171


 3270 0b67 2E050000 		.4byte	.LVL161
 3271 0b6b 9D0D0000 		.4byte	0xd9d
 3272 0b6f 15       		.uleb128 0x15
 3273 0b70 01       		.uleb128 0x1
 3274 0b71 50       		.byte	0x50
 3275 0b72 01       		.uleb128 0x1
 3276 0b73 35       		.byte	0x35
 3277 0b74 00       		.byte	0
 3278 0b75 00       		.byte	0
 3279 0b76 1B       		.uleb128 0x1b
 3280 0b77 67010000 		.4byte	0x167
 3281 0b7b 860B0000 		.4byte	0xb86
 3282 0b7f 1C       		.uleb128 0x1c
 3283 0b80 F4000000 		.4byte	0xf4
 3284 0b84 01       		.byte	0x1
 3285 0b85 00       		.byte	0
 3286 0b86 08       		.uleb128 0x8
 3287 0b87 8F010000 		.4byte	0x18f
 3288 0b8b 24       		.uleb128 0x24
 3289 0b8c A1000000 		.4byte	.LASF81
 3290 0b90 0A       		.byte	0xa
 3291 0b91 9606     		.2byte	0x696
 3292 0b93 970B0000 		.4byte	0xb97
 3293 0b97 25       		.uleb128 0x25
 3294 0b98 8F000000 		.4byte	0x8f
 3295 0b9c 1B       		.uleb128 0x1b
 3296 0b9d 67010000 		.4byte	0x167
 3297 0ba1 AC0B0000 		.4byte	0xbac
 3298 0ba5 1C       		.uleb128 0x1c
 3299 0ba6 F4000000 		.4byte	0xf4
 3300 0baa 9F       		.byte	0x9f
 3301 0bab 00       		.byte	0
 3302 0bac 26       		.uleb128 0x26
 3303 0bad 94040000 		.4byte	.LASF82
 3304 0bb1 01       		.byte	0x1
 3305 0bb2 26       		.byte	0x26
 3306 0bb3 9C0B0000 		.4byte	0xb9c
 3307 0bb7 26       		.uleb128 0x26
 3308 0bb8 D3020000 		.4byte	.LASF83
 3309 0bbc 01       		.byte	0x1
 3310 0bbd 27       		.byte	0x27
 3311 0bbe 9C0B0000 		.4byte	0xb9c
 3312 0bc2 26       		.uleb128 0x26
 3313 0bc3 99020000 		.4byte	.LASF84
 3314 0bc7 01       		.byte	0x1
 3315 0bc8 28       		.byte	0x28
 3316 0bc9 9C0B0000 		.4byte	0xb9c
 3317 0bcd 1B       		.uleb128 0x1b
 3318 0bce 9A010000 		.4byte	0x19a
 3319 0bd2 DD0B0000 		.4byte	0xbdd
 3320 0bd6 1C       		.uleb128 0x1c
 3321 0bd7 F4000000 		.4byte	0xf4
 3322 0bdb 01       		.byte	0x1
 3323 0bdc 00       		.byte	0
 3324 0bdd 26       		.uleb128 0x26
 3325 0bde BB040000 		.4byte	.LASF85
 3326 0be2 01       		.byte	0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 172


 3327 0be3 2A       		.byte	0x2a
 3328 0be4 CD0B0000 		.4byte	0xbcd
 3329 0be8 26       		.uleb128 0x26
 3330 0be9 F2040000 		.4byte	.LASF86
 3331 0bed 01       		.byte	0x1
 3332 0bee 2B       		.byte	0x2b
 3333 0bef 9A010000 		.4byte	0x19a
 3334 0bf3 26       		.uleb128 0x26
 3335 0bf4 0E000000 		.4byte	.LASF87
 3336 0bf8 01       		.byte	0x1
 3337 0bf9 2C       		.byte	0x2c
 3338 0bfa 9A010000 		.4byte	0x19a
 3339 0bfe 26       		.uleb128 0x26
 3340 0bff 34020000 		.4byte	.LASF88
 3341 0c03 01       		.byte	0x1
 3342 0c04 2F       		.byte	0x2f
 3343 0c05 A5010000 		.4byte	0x1a5
 3344 0c09 27       		.uleb128 0x27
 3345 0c0a 1F040000 		.4byte	.LASF89
 3346 0c0e 01       		.byte	0x1
 3347 0c0f 32       		.byte	0x32
 3348 0c10 B0010000 		.4byte	0x1b0
 3349 0c14 05       		.uleb128 0x5
 3350 0c15 03       		.byte	0x3
 3351 0c16 00000000 		.4byte	mode
 3352 0c1a 27       		.uleb128 0x27
 3353 0c1b 46030000 		.4byte	.LASF90
 3354 0c1f 01       		.byte	0x1
 3355 0c20 35       		.byte	0x35
 3356 0c21 D5000000 		.4byte	0xd5
 3357 0c25 05       		.uleb128 0x5
 3358 0c26 03       		.byte	0x3
 3359 0c27 00000000 		.4byte	gain
 3360 0c2b 28       		.uleb128 0x28
 3361 0c2c 56746800 		.ascii	"Vth\000"
 3362 0c30 01       		.byte	0x1
 3363 0c31 38       		.byte	0x38
 3364 0c32 B1000000 		.4byte	0xb1
 3365 0c36 05       		.uleb128 0x5
 3366 0c37 03       		.byte	0x3
 3367 0c38 00000000 		.4byte	Vth
 3368 0c3c 27       		.uleb128 0x27
 3369 0c3d C8030000 		.4byte	.LASF91
 3370 0c41 01       		.byte	0x1
 3371 0c42 39       		.byte	0x39
 3372 0c43 B1000000 		.4byte	0xb1
 3373 0c47 05       		.uleb128 0x5
 3374 0c48 03       		.byte	0x3
 3375 0c49 00000000 		.4byte	Vbias
 3376 0c4d 27       		.uleb128 0x27
 3377 0c4e AE000000 		.4byte	.LASF92
 3378 0c52 01       		.byte	0x1
 3379 0c53 3A       		.byte	0x3a
 3380 0c54 D5000000 		.4byte	0xd5
 3381 0c58 05       		.uleb128 0x5
 3382 0c59 03       		.byte	0x3
 3383 0c5a 00000000 		.4byte	Adj_Vth
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 173


 3384 0c5e 27       		.uleb128 0x27
 3385 0c5f E8020000 		.4byte	.LASF93
 3386 0c63 01       		.byte	0x1
 3387 0c64 3B       		.byte	0x3b
 3388 0c65 D5000000 		.4byte	0xd5
 3389 0c69 05       		.uleb128 0x5
 3390 0c6a 03       		.byte	0x3
 3391 0c6b 00000000 		.4byte	Adj_Vbias
 3392 0c6f 1B       		.uleb128 0x1b
 3393 0c70 20020000 		.4byte	0x220
 3394 0c74 7F0C0000 		.4byte	0xc7f
 3395 0c78 1C       		.uleb128 0x1c
 3396 0c79 F4000000 		.4byte	0xf4
 3397 0c7d 09       		.byte	0x9
 3398 0c7e 00       		.byte	0
 3399 0c7f 27       		.uleb128 0x27
 3400 0c80 05000000 		.4byte	.LASF44
 3401 0c84 01       		.byte	0x1
 3402 0c85 4D       		.byte	0x4d
 3403 0c86 900C0000 		.4byte	0xc90
 3404 0c8a 05       		.uleb128 0x5
 3405 0c8b 03       		.byte	0x3
 3406 0c8c 00000000 		.4byte	pga_gain
 3407 0c90 08       		.uleb128 0x8
 3408 0c91 6F0C0000 		.4byte	0xc6f
 3409 0c95 1B       		.uleb128 0x1b
 3410 0c96 58020000 		.4byte	0x258
 3411 0c9a A50C0000 		.4byte	0xca5
 3412 0c9e 1C       		.uleb128 0x1c
 3413 0c9f F4000000 		.4byte	0xf4
 3414 0ca3 08       		.byte	0x8
 3415 0ca4 00       		.byte	0
 3416 0ca5 27       		.uleb128 0x27
 3417 0ca6 AE020000 		.4byte	.LASF94
 3418 0caa 01       		.byte	0x1
 3419 0cab 66       		.byte	0x66
 3420 0cac B60C0000 		.4byte	0xcb6
 3421 0cb0 05       		.uleb128 0x5
 3422 0cb1 03       		.byte	0x3
 3423 0cb2 00000000 		.4byte	pga_agc
 3424 0cb6 08       		.uleb128 0x8
 3425 0cb7 950C0000 		.4byte	0xc95
 3426 0cbb 1B       		.uleb128 0x1b
 3427 0cbc 9C020000 		.4byte	0x29c
 3428 0cc0 CB0C0000 		.4byte	0xccb
 3429 0cc4 1C       		.uleb128 0x1c
 3430 0cc5 F4000000 		.4byte	0xf4
 3431 0cc9 0C       		.byte	0xc
 3432 0cca 00       		.byte	0
 3433 0ccb 27       		.uleb128 0x27
 3434 0ccc 50000000 		.4byte	.LASF95
 3435 0cd0 01       		.byte	0x1
 3436 0cd1 7B       		.byte	0x7b
 3437 0cd2 DC0C0000 		.4byte	0xcdc
 3438 0cd6 05       		.uleb128 0x5
 3439 0cd7 03       		.byte	0x3
 3440 0cd8 00000000 		.4byte	dir_tab
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 174


 3441 0cdc 08       		.uleb128 0x8
 3442 0cdd BB0C0000 		.4byte	0xcbb
 3443 0ce1 1B       		.uleb128 0x1b
 3444 0ce2 E1000000 		.4byte	0xe1
 3445 0ce6 F70C0000 		.4byte	0xcf7
 3446 0cea 1C       		.uleb128 0x1c
 3447 0ceb F4000000 		.4byte	0xf4
 3448 0cef 0C       		.byte	0xc
 3449 0cf0 1C       		.uleb128 0x1c
 3450 0cf1 F4000000 		.4byte	0xf4
 3451 0cf5 0F       		.byte	0xf
 3452 0cf6 00       		.byte	0
 3453 0cf7 28       		.uleb128 0x28
 3454 0cf8 62617200 		.ascii	"bar\000"
 3455 0cfc 01       		.byte	0x1
 3456 0cfd 8C       		.byte	0x8c
 3457 0cfe 080D0000 		.4byte	0xd08
 3458 0d02 05       		.uleb128 0x5
 3459 0d03 03       		.byte	0x3
 3460 0d04 00000000 		.4byte	bar
 3461 0d08 08       		.uleb128 0x8
 3462 0d09 E10C0000 		.4byte	0xce1
 3463 0d0d 29       		.uleb128 0x29
 3464 0d0e 6D010000 		.4byte	.LASF96
 3465 0d12 0B       		.byte	0xb
 3466 0d13 44       		.byte	0x44
 3467 0d14 230D0000 		.4byte	0xd23
 3468 0d18 2A       		.uleb128 0x2a
 3469 0d19 A5000000 		.4byte	0xa5
 3470 0d1d 2A       		.uleb128 0x2a
 3471 0d1e A5000000 		.4byte	0xa5
 3472 0d22 00       		.byte	0
 3473 0d23 29       		.uleb128 0x29
 3474 0d24 42020000 		.4byte	.LASF97
 3475 0d28 0B       		.byte	0xb
 3476 0d29 43       		.byte	0x43
 3477 0d2a 340D0000 		.4byte	0xd34
 3478 0d2e 2A       		.uleb128 0x2a
 3479 0d2f 340D0000 		.4byte	0xd34
 3480 0d33 00       		.byte	0
 3481 0d34 07       		.uleb128 0x7
 3482 0d35 04       		.byte	0x4
 3483 0d36 3A0D0000 		.4byte	0xd3a
 3484 0d3a 08       		.uleb128 0x8
 3485 0d3b E1000000 		.4byte	0xe1
 3486 0d3f 29       		.uleb128 0x29
 3487 0d40 B5030000 		.4byte	.LASF98
 3488 0d44 0C       		.byte	0xc
 3489 0d45 27       		.byte	0x27
 3490 0d46 500D0000 		.4byte	0xd50
 3491 0d4a 2A       		.uleb128 0x2a
 3492 0d4b A5000000 		.4byte	0xa5
 3493 0d4f 00       		.byte	0
 3494 0d50 29       		.uleb128 0x29
 3495 0d51 EB030000 		.4byte	.LASF99
 3496 0d55 0D       		.byte	0xd
 3497 0d56 4A       		.byte	0x4a
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 175


 3498 0d57 610D0000 		.4byte	0xd61
 3499 0d5b 2A       		.uleb128 0x2a
 3500 0d5c B1000000 		.4byte	0xb1
 3501 0d60 00       		.byte	0
 3502 0d61 2B       		.uleb128 0x2b
 3503 0d62 42000000 		.4byte	.LASF100
 3504 0d66 0E       		.byte	0xe
 3505 0d67 DE       		.byte	0xde
 3506 0d68 81000000 		.4byte	0x81
 3507 0d6c 7C0D0000 		.4byte	0xd7c
 3508 0d70 2A       		.uleb128 0x2a
 3509 0d71 FD000000 		.4byte	0xfd
 3510 0d75 2A       		.uleb128 0x2a
 3511 0d76 03010000 		.4byte	0x103
 3512 0d7a 2C       		.uleb128 0x2c
 3513 0d7b 00       		.byte	0
 3514 0d7c 2D       		.uleb128 0x2d
 3515 0d7d 7E020000 		.4byte	.LASF101
 3516 0d81 06       		.byte	0x6
 3517 0d82 5401     		.2byte	0x154
 3518 0d84 2C000000 		.4byte	0x2c
 3519 0d88 920D0000 		.4byte	0xd92
 3520 0d8c 2A       		.uleb128 0x2a
 3521 0d8d 2C000000 		.4byte	0x2c
 3522 0d91 00       		.byte	0
 3523 0d92 2E       		.uleb128 0x2e
 3524 0d93 3C060000 		.4byte	.LASF117
 3525 0d97 13       		.byte	0x13
 3526 0d98 28       		.byte	0x28
 3527 0d99 A5000000 		.4byte	0xa5
 3528 0d9d 2F       		.uleb128 0x2f
 3529 0d9e F3000000 		.4byte	.LASF102
 3530 0da2 0F       		.byte	0xf
 3531 0da3 2B02     		.2byte	0x22b
 3532 0da5 AF0D0000 		.4byte	0xdaf
 3533 0da9 2A       		.uleb128 0x2a
 3534 0daa 860B0000 		.4byte	0xb86
 3535 0dae 00       		.byte	0
 3536 0daf 2D       		.uleb128 0x2d
 3537 0db0 B6000000 		.4byte	.LASF103
 3538 0db4 08       		.byte	0x8
 3539 0db5 9103     		.2byte	0x391
 3540 0db7 79010000 		.4byte	0x179
 3541 0dbb D40D0000 		.4byte	0xdd4
 3542 0dbf 2A       		.uleb128 0x2a
 3543 0dc0 9A010000 		.4byte	0x19a
 3544 0dc4 2A       		.uleb128 0x2a
 3545 0dc5 D40D0000 		.4byte	0xdd4
 3546 0dc9 2A       		.uleb128 0x2a
 3547 0dca 8F010000 		.4byte	0x18f
 3548 0dce 2A       		.uleb128 0x2a
 3549 0dcf D90D0000 		.4byte	0xdd9
 3550 0dd3 00       		.byte	0
 3551 0dd4 08       		.uleb128 0x8
 3552 0dd5 FB000000 		.4byte	0xfb
 3553 0dd9 08       		.uleb128 0x8
 3554 0dda 79010000 		.4byte	0x179
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 176


 3555 0dde 2D       		.uleb128 0x2d
 3556 0ddf 22000000 		.4byte	.LASF104
 3557 0de3 08       		.byte	0x8
 3558 0de4 A003     		.2byte	0x3a0
 3559 0de6 84010000 		.4byte	0x184
 3560 0dea F40D0000 		.4byte	0xdf4
 3561 0dee 2A       		.uleb128 0x2a
 3562 0def F40D0000 		.4byte	0xdf4
 3563 0df3 00       		.byte	0
 3564 0df4 08       		.uleb128 0x8
 3565 0df5 9A010000 		.4byte	0x19a
 3566 0df9 29       		.uleb128 0x29
 3567 0dfa 63010000 		.4byte	.LASF105
 3568 0dfe 10       		.byte	0x10
 3569 0dff 26       		.byte	0x26
 3570 0e00 0A0E0000 		.4byte	0xe0a
 3571 0e04 2A       		.uleb128 0x2a
 3572 0e05 A5000000 		.4byte	0xa5
 3573 0e09 00       		.byte	0
 3574 0e0a 2F       		.uleb128 0x2f
 3575 0e0b D5030000 		.4byte	.LASF106
 3576 0e0f 02       		.byte	0x2
 3577 0e10 9407     		.2byte	0x794
 3578 0e12 2B0E0000 		.4byte	0xe2b
 3579 0e16 2A       		.uleb128 0x2a
 3580 0e17 73010000 		.4byte	0x173
 3581 0e1b 2A       		.uleb128 0x2a
 3582 0e1c 73010000 		.4byte	0x173
 3583 0e20 2A       		.uleb128 0x2a
 3584 0e21 73010000 		.4byte	0x173
 3585 0e25 2A       		.uleb128 0x2a
 3586 0e26 9A000000 		.4byte	0x9a
 3587 0e2a 00       		.byte	0
 3588 0e2b 2F       		.uleb128 0x2f
 3589 0e2c FD040000 		.4byte	.LASF107
 3590 0e30 02       		.byte	0x2
 3591 0e31 3218     		.2byte	0x1832
 3592 0e33 470E0000 		.4byte	0xe47
 3593 0e37 2A       		.uleb128 0x2a
 3594 0e38 73010000 		.4byte	0x173
 3595 0e3c 2A       		.uleb128 0x2a
 3596 0e3d 9A000000 		.4byte	0x9a
 3597 0e41 2A       		.uleb128 0x2a
 3598 0e42 73010000 		.4byte	0x173
 3599 0e46 00       		.byte	0
 3600 0e47 2B       		.uleb128 0x2b
 3601 0e48 A0030000 		.4byte	.LASF108
 3602 0e4c 06       		.byte	0x6
 3603 0e4d 7E       		.byte	0x7e
 3604 0e4e 25000000 		.4byte	0x25
 3605 0e52 610E0000 		.4byte	0xe61
 3606 0e56 2A       		.uleb128 0x2a
 3607 0e57 25000000 		.4byte	0x25
 3608 0e5b 2A       		.uleb128 0x2a
 3609 0e5c 25000000 		.4byte	0x25
 3610 0e60 00       		.byte	0
 3611 0e61 2F       		.uleb128 0x2f
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 177


 3612 0e62 E8050000 		.4byte	.LASF109
 3613 0e66 02       		.byte	0x2
 3614 0e67 6218     		.2byte	0x1862
 3615 0e69 7D0E0000 		.4byte	0xe7d
 3616 0e6d 2A       		.uleb128 0x2a
 3617 0e6e 73010000 		.4byte	0x173
 3618 0e72 2A       		.uleb128 0x2a
 3619 0e73 9A000000 		.4byte	0x9a
 3620 0e77 2A       		.uleb128 0x2a
 3621 0e78 73010000 		.4byte	0x173
 3622 0e7c 00       		.byte	0
 3623 0e7d 2D       		.uleb128 0x2d
 3624 0e7e F7010000 		.4byte	.LASF110
 3625 0e82 08       		.byte	0x8
 3626 0e83 5002     		.2byte	0x250
 3627 0e85 79010000 		.4byte	0x179
 3628 0e89 A20E0000 		.4byte	0xea2
 3629 0e8d 2A       		.uleb128 0x2a
 3630 0e8e 9A010000 		.4byte	0x19a
 3631 0e92 2A       		.uleb128 0x2a
 3632 0e93 A20E0000 		.4byte	0xea2
 3633 0e97 2A       		.uleb128 0x2a
 3634 0e98 8F010000 		.4byte	0x18f
 3635 0e9c 2A       		.uleb128 0x2a
 3636 0e9d D90D0000 		.4byte	0xdd9
 3637 0ea1 00       		.byte	0
 3638 0ea2 08       		.uleb128 0x8
 3639 0ea3 0E010000 		.4byte	0x10e
 3640 0ea7 30       		.uleb128 0x30
 3641 0ea8 72030000 		.4byte	.LASF118
 3642 0eac 14       		.byte	0x14
 3643 0ead 00       		.byte	0
 3644 0eae 6D020000 		.4byte	.LASF119
 3645 0eb2 FD000000 		.4byte	0xfd
 3646 0eb6 C50E0000 		.4byte	0xec5
 3647 0eba 2A       		.uleb128 0x2a
 3648 0ebb FD000000 		.4byte	0xfd
 3649 0ebf 2A       		.uleb128 0x2a
 3650 0ec0 03010000 		.4byte	0x103
 3651 0ec4 00       		.byte	0
 3652 0ec5 31       		.uleb128 0x31
 3653 0ec6 706F7700 		.ascii	"pow\000"
 3654 0eca 06       		.byte	0x6
 3655 0ecb 85       		.byte	0x85
 3656 0ecc 25000000 		.4byte	0x25
 3657 0ed0 DF0E0000 		.4byte	0xedf
 3658 0ed4 2A       		.uleb128 0x2a
 3659 0ed5 25000000 		.4byte	0x25
 3660 0ed9 2A       		.uleb128 0x2a
 3661 0eda 25000000 		.4byte	0x25
 3662 0ede 00       		.byte	0
 3663 0edf 29       		.uleb128 0x29
 3664 0ee0 92030000 		.4byte	.LASF111
 3665 0ee4 11       		.byte	0x11
 3666 0ee5 41       		.byte	0x41
 3667 0ee6 F00E0000 		.4byte	0xef0
 3668 0eea 2A       		.uleb128 0x2a
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 178


 3669 0eeb A5000000 		.4byte	0xa5
 3670 0eef 00       		.byte	0
 3671 0ef0 32       		.uleb128 0x32
 3672 0ef1 C6040000 		.4byte	.LASF120
 3673 0ef5 15       		.byte	0x15
 3674 0ef6 41       		.byte	0x41
 3675 0ef7 2A       		.uleb128 0x2a
 3676 0ef8 A5000000 		.4byte	0xa5
 3677 0efc 00       		.byte	0
 3678 0efd 00       		.byte	0
 3679              		.section	.debug_abbrev,"",%progbits
 3680              	.Ldebug_abbrev0:
 3681 0000 01       		.uleb128 0x1
 3682 0001 11       		.uleb128 0x11
 3683 0002 01       		.byte	0x1
 3684 0003 25       		.uleb128 0x25
 3685 0004 0E       		.uleb128 0xe
 3686 0005 13       		.uleb128 0x13
 3687 0006 0B       		.uleb128 0xb
 3688 0007 03       		.uleb128 0x3
 3689 0008 0E       		.uleb128 0xe
 3690 0009 1B       		.uleb128 0x1b
 3691 000a 0E       		.uleb128 0xe
 3692 000b 55       		.uleb128 0x55
 3693 000c 17       		.uleb128 0x17
 3694 000d 11       		.uleb128 0x11
 3695 000e 01       		.uleb128 0x1
 3696 000f 10       		.uleb128 0x10
 3697 0010 17       		.uleb128 0x17
 3698 0011 00       		.byte	0
 3699 0012 00       		.byte	0
 3700 0013 02       		.uleb128 0x2
 3701 0014 24       		.uleb128 0x24
 3702 0015 00       		.byte	0
 3703 0016 0B       		.uleb128 0xb
 3704 0017 0B       		.uleb128 0xb
 3705 0018 3E       		.uleb128 0x3e
 3706 0019 0B       		.uleb128 0xb
 3707 001a 03       		.uleb128 0x3
 3708 001b 0E       		.uleb128 0xe
 3709 001c 00       		.byte	0
 3710 001d 00       		.byte	0
 3711 001e 03       		.uleb128 0x3
 3712 001f 16       		.uleb128 0x16
 3713 0020 00       		.byte	0
 3714 0021 03       		.uleb128 0x3
 3715 0022 0E       		.uleb128 0xe
 3716 0023 3A       		.uleb128 0x3a
 3717 0024 0B       		.uleb128 0xb
 3718 0025 3B       		.uleb128 0x3b
 3719 0026 0B       		.uleb128 0xb
 3720 0027 49       		.uleb128 0x49
 3721 0028 13       		.uleb128 0x13
 3722 0029 00       		.byte	0
 3723 002a 00       		.byte	0
 3724 002b 04       		.uleb128 0x4
 3725 002c 24       		.uleb128 0x24
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 179


 3726 002d 00       		.byte	0
 3727 002e 0B       		.uleb128 0xb
 3728 002f 0B       		.uleb128 0xb
 3729 0030 3E       		.uleb128 0x3e
 3730 0031 0B       		.uleb128 0xb
 3731 0032 03       		.uleb128 0x3
 3732 0033 08       		.uleb128 0x8
 3733 0034 00       		.byte	0
 3734 0035 00       		.byte	0
 3735 0036 05       		.uleb128 0x5
 3736 0037 16       		.uleb128 0x16
 3737 0038 00       		.byte	0
 3738 0039 03       		.uleb128 0x3
 3739 003a 0E       		.uleb128 0xe
 3740 003b 3A       		.uleb128 0x3a
 3741 003c 0B       		.uleb128 0xb
 3742 003d 3B       		.uleb128 0x3b
 3743 003e 05       		.uleb128 0x5
 3744 003f 49       		.uleb128 0x49
 3745 0040 13       		.uleb128 0x13
 3746 0041 00       		.byte	0
 3747 0042 00       		.byte	0
 3748 0043 06       		.uleb128 0x6
 3749 0044 0F       		.uleb128 0xf
 3750 0045 00       		.byte	0
 3751 0046 0B       		.uleb128 0xb
 3752 0047 0B       		.uleb128 0xb
 3753 0048 00       		.byte	0
 3754 0049 00       		.byte	0
 3755 004a 07       		.uleb128 0x7
 3756 004b 0F       		.uleb128 0xf
 3757 004c 00       		.byte	0
 3758 004d 0B       		.uleb128 0xb
 3759 004e 0B       		.uleb128 0xb
 3760 004f 49       		.uleb128 0x49
 3761 0050 13       		.uleb128 0x13
 3762 0051 00       		.byte	0
 3763 0052 00       		.byte	0
 3764 0053 08       		.uleb128 0x8
 3765 0054 26       		.uleb128 0x26
 3766 0055 00       		.byte	0
 3767 0056 49       		.uleb128 0x49
 3768 0057 13       		.uleb128 0x13
 3769 0058 00       		.byte	0
 3770 0059 00       		.byte	0
 3771 005a 09       		.uleb128 0x9
 3772 005b 26       		.uleb128 0x26
 3773 005c 00       		.byte	0
 3774 005d 00       		.byte	0
 3775 005e 00       		.byte	0
 3776 005f 0A       		.uleb128 0xa
 3777 0060 04       		.uleb128 0x4
 3778 0061 01       		.byte	0x1
 3779 0062 0B       		.uleb128 0xb
 3780 0063 0B       		.uleb128 0xb
 3781 0064 3A       		.uleb128 0x3a
 3782 0065 0B       		.uleb128 0xb
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 180


 3783 0066 3B       		.uleb128 0x3b
 3784 0067 05       		.uleb128 0x5
 3785 0068 01       		.uleb128 0x1
 3786 0069 13       		.uleb128 0x13
 3787 006a 00       		.byte	0
 3788 006b 00       		.byte	0
 3789 006c 0B       		.uleb128 0xb
 3790 006d 28       		.uleb128 0x28
 3791 006e 00       		.byte	0
 3792 006f 03       		.uleb128 0x3
 3793 0070 0E       		.uleb128 0xe
 3794 0071 1C       		.uleb128 0x1c
 3795 0072 0D       		.uleb128 0xd
 3796 0073 00       		.byte	0
 3797 0074 00       		.byte	0
 3798 0075 0C       		.uleb128 0xc
 3799 0076 04       		.uleb128 0x4
 3800 0077 01       		.byte	0x1
 3801 0078 03       		.uleb128 0x3
 3802 0079 0E       		.uleb128 0xe
 3803 007a 0B       		.uleb128 0xb
 3804 007b 0B       		.uleb128 0xb
 3805 007c 3A       		.uleb128 0x3a
 3806 007d 0B       		.uleb128 0xb
 3807 007e 3B       		.uleb128 0x3b
 3808 007f 0B       		.uleb128 0xb
 3809 0080 01       		.uleb128 0x1
 3810 0081 13       		.uleb128 0x13
 3811 0082 00       		.byte	0
 3812 0083 00       		.byte	0
 3813 0084 0D       		.uleb128 0xd
 3814 0085 13       		.uleb128 0x13
 3815 0086 01       		.byte	0x1
 3816 0087 0B       		.uleb128 0xb
 3817 0088 0B       		.uleb128 0xb
 3818 0089 3A       		.uleb128 0x3a
 3819 008a 0B       		.uleb128 0xb
 3820 008b 3B       		.uleb128 0x3b
 3821 008c 0B       		.uleb128 0xb
 3822 008d 01       		.uleb128 0x1
 3823 008e 13       		.uleb128 0x13
 3824 008f 00       		.byte	0
 3825 0090 00       		.byte	0
 3826 0091 0E       		.uleb128 0xe
 3827 0092 0D       		.uleb128 0xd
 3828 0093 00       		.byte	0
 3829 0094 03       		.uleb128 0x3
 3830 0095 0E       		.uleb128 0xe
 3831 0096 3A       		.uleb128 0x3a
 3832 0097 0B       		.uleb128 0xb
 3833 0098 3B       		.uleb128 0x3b
 3834 0099 0B       		.uleb128 0xb
 3835 009a 49       		.uleb128 0x49
 3836 009b 13       		.uleb128 0x13
 3837 009c 38       		.uleb128 0x38
 3838 009d 0B       		.uleb128 0xb
 3839 009e 00       		.byte	0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 181


 3840 009f 00       		.byte	0
 3841 00a0 0F       		.uleb128 0xf
 3842 00a1 2E       		.uleb128 0x2e
 3843 00a2 01       		.byte	0x1
 3844 00a3 03       		.uleb128 0x3
 3845 00a4 0E       		.uleb128 0xe
 3846 00a5 3A       		.uleb128 0x3a
 3847 00a6 0B       		.uleb128 0xb
 3848 00a7 3B       		.uleb128 0x3b
 3849 00a8 05       		.uleb128 0x5
 3850 00a9 27       		.uleb128 0x27
 3851 00aa 19       		.uleb128 0x19
 3852 00ab 49       		.uleb128 0x49
 3853 00ac 13       		.uleb128 0x13
 3854 00ad 20       		.uleb128 0x20
 3855 00ae 0B       		.uleb128 0xb
 3856 00af 01       		.uleb128 0x1
 3857 00b0 13       		.uleb128 0x13
 3858 00b1 00       		.byte	0
 3859 00b2 00       		.byte	0
 3860 00b3 10       		.uleb128 0x10
 3861 00b4 05       		.uleb128 0x5
 3862 00b5 00       		.byte	0
 3863 00b6 03       		.uleb128 0x3
 3864 00b7 08       		.uleb128 0x8
 3865 00b8 3A       		.uleb128 0x3a
 3866 00b9 0B       		.uleb128 0xb
 3867 00ba 3B       		.uleb128 0x3b
 3868 00bb 05       		.uleb128 0x5
 3869 00bc 49       		.uleb128 0x49
 3870 00bd 13       		.uleb128 0x13
 3871 00be 00       		.byte	0
 3872 00bf 00       		.byte	0
 3873 00c0 11       		.uleb128 0x11
 3874 00c1 05       		.uleb128 0x5
 3875 00c2 00       		.byte	0
 3876 00c3 03       		.uleb128 0x3
 3877 00c4 0E       		.uleb128 0xe
 3878 00c5 3A       		.uleb128 0x3a
 3879 00c6 0B       		.uleb128 0xb
 3880 00c7 3B       		.uleb128 0x3b
 3881 00c8 05       		.uleb128 0x5
 3882 00c9 49       		.uleb128 0x49
 3883 00ca 13       		.uleb128 0x13
 3884 00cb 00       		.byte	0
 3885 00cc 00       		.byte	0
 3886 00cd 12       		.uleb128 0x12
 3887 00ce 2E       		.uleb128 0x2e
 3888 00cf 01       		.byte	0x1
 3889 00d0 3F       		.uleb128 0x3f
 3890 00d1 19       		.uleb128 0x19
 3891 00d2 03       		.uleb128 0x3
 3892 00d3 0E       		.uleb128 0xe
 3893 00d4 3A       		.uleb128 0x3a
 3894 00d5 0B       		.uleb128 0xb
 3895 00d6 3B       		.uleb128 0x3b
 3896 00d7 0B       		.uleb128 0xb
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 182


 3897 00d8 27       		.uleb128 0x27
 3898 00d9 19       		.uleb128 0x19
 3899 00da 11       		.uleb128 0x11
 3900 00db 01       		.uleb128 0x1
 3901 00dc 12       		.uleb128 0x12
 3902 00dd 06       		.uleb128 0x6
 3903 00de 40       		.uleb128 0x40
 3904 00df 18       		.uleb128 0x18
 3905 00e0 9742     		.uleb128 0x2117
 3906 00e2 19       		.uleb128 0x19
 3907 00e3 01       		.uleb128 0x1
 3908 00e4 13       		.uleb128 0x13
 3909 00e5 00       		.byte	0
 3910 00e6 00       		.byte	0
 3911 00e7 13       		.uleb128 0x13
 3912 00e8 05       		.uleb128 0x5
 3913 00e9 00       		.byte	0
 3914 00ea 03       		.uleb128 0x3
 3915 00eb 08       		.uleb128 0x8
 3916 00ec 3A       		.uleb128 0x3a
 3917 00ed 0B       		.uleb128 0xb
 3918 00ee 3B       		.uleb128 0x3b
 3919 00ef 0B       		.uleb128 0xb
 3920 00f0 49       		.uleb128 0x49
 3921 00f1 13       		.uleb128 0x13
 3922 00f2 02       		.uleb128 0x2
 3923 00f3 17       		.uleb128 0x17
 3924 00f4 00       		.byte	0
 3925 00f5 00       		.byte	0
 3926 00f6 14       		.uleb128 0x14
 3927 00f7 898201   		.uleb128 0x4109
 3928 00fa 01       		.byte	0x1
 3929 00fb 11       		.uleb128 0x11
 3930 00fc 01       		.uleb128 0x1
 3931 00fd 31       		.uleb128 0x31
 3932 00fe 13       		.uleb128 0x13
 3933 00ff 01       		.uleb128 0x1
 3934 0100 13       		.uleb128 0x13
 3935 0101 00       		.byte	0
 3936 0102 00       		.byte	0
 3937 0103 15       		.uleb128 0x15
 3938 0104 8A8201   		.uleb128 0x410a
 3939 0107 00       		.byte	0
 3940 0108 02       		.uleb128 0x2
 3941 0109 18       		.uleb128 0x18
 3942 010a 9142     		.uleb128 0x2111
 3943 010c 18       		.uleb128 0x18
 3944 010d 00       		.byte	0
 3945 010e 00       		.byte	0
 3946 010f 16       		.uleb128 0x16
 3947 0110 898201   		.uleb128 0x4109
 3948 0113 01       		.byte	0x1
 3949 0114 11       		.uleb128 0x11
 3950 0115 01       		.uleb128 0x1
 3951 0116 31       		.uleb128 0x31
 3952 0117 13       		.uleb128 0x13
 3953 0118 00       		.byte	0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 183


 3954 0119 00       		.byte	0
 3955 011a 17       		.uleb128 0x17
 3956 011b 34       		.uleb128 0x34
 3957 011c 00       		.byte	0
 3958 011d 03       		.uleb128 0x3
 3959 011e 08       		.uleb128 0x8
 3960 011f 3A       		.uleb128 0x3a
 3961 0120 0B       		.uleb128 0xb
 3962 0121 3B       		.uleb128 0x3b
 3963 0122 0B       		.uleb128 0xb
 3964 0123 49       		.uleb128 0x49
 3965 0124 13       		.uleb128 0x13
 3966 0125 02       		.uleb128 0x2
 3967 0126 17       		.uleb128 0x17
 3968 0127 00       		.byte	0
 3969 0128 00       		.byte	0
 3970 0129 18       		.uleb128 0x18
 3971 012a 898201   		.uleb128 0x4109
 3972 012d 00       		.byte	0
 3973 012e 11       		.uleb128 0x11
 3974 012f 01       		.uleb128 0x1
 3975 0130 31       		.uleb128 0x31
 3976 0131 13       		.uleb128 0x13
 3977 0132 00       		.byte	0
 3978 0133 00       		.byte	0
 3979 0134 19       		.uleb128 0x19
 3980 0135 2E       		.uleb128 0x2e
 3981 0136 01       		.byte	0x1
 3982 0137 3F       		.uleb128 0x3f
 3983 0138 19       		.uleb128 0x19
 3984 0139 03       		.uleb128 0x3
 3985 013a 0E       		.uleb128 0xe
 3986 013b 3A       		.uleb128 0x3a
 3987 013c 0B       		.uleb128 0xb
 3988 013d 3B       		.uleb128 0x3b
 3989 013e 05       		.uleb128 0x5
 3990 013f 27       		.uleb128 0x27
 3991 0140 19       		.uleb128 0x19
 3992 0141 11       		.uleb128 0x11
 3993 0142 01       		.uleb128 0x1
 3994 0143 12       		.uleb128 0x12
 3995 0144 06       		.uleb128 0x6
 3996 0145 40       		.uleb128 0x40
 3997 0146 18       		.uleb128 0x18
 3998 0147 9642     		.uleb128 0x2116
 3999 0149 19       		.uleb128 0x19
 4000 014a 01       		.uleb128 0x1
 4001 014b 13       		.uleb128 0x13
 4002 014c 00       		.byte	0
 4003 014d 00       		.byte	0
 4004 014e 1A       		.uleb128 0x1a
 4005 014f 34       		.uleb128 0x34
 4006 0150 00       		.byte	0
 4007 0151 03       		.uleb128 0x3
 4008 0152 08       		.uleb128 0x8
 4009 0153 3A       		.uleb128 0x3a
 4010 0154 0B       		.uleb128 0xb
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 184


 4011 0155 3B       		.uleb128 0x3b
 4012 0156 05       		.uleb128 0x5
 4013 0157 49       		.uleb128 0x49
 4014 0158 13       		.uleb128 0x13
 4015 0159 02       		.uleb128 0x2
 4016 015a 18       		.uleb128 0x18
 4017 015b 00       		.byte	0
 4018 015c 00       		.byte	0
 4019 015d 1B       		.uleb128 0x1b
 4020 015e 01       		.uleb128 0x1
 4021 015f 01       		.byte	0x1
 4022 0160 49       		.uleb128 0x49
 4023 0161 13       		.uleb128 0x13
 4024 0162 01       		.uleb128 0x1
 4025 0163 13       		.uleb128 0x13
 4026 0164 00       		.byte	0
 4027 0165 00       		.byte	0
 4028 0166 1C       		.uleb128 0x1c
 4029 0167 21       		.uleb128 0x21
 4030 0168 00       		.byte	0
 4031 0169 49       		.uleb128 0x49
 4032 016a 13       		.uleb128 0x13
 4033 016b 2F       		.uleb128 0x2f
 4034 016c 0B       		.uleb128 0xb
 4035 016d 00       		.byte	0
 4036 016e 00       		.byte	0
 4037 016f 1D       		.uleb128 0x1d
 4038 0170 05       		.uleb128 0x5
 4039 0171 00       		.byte	0
 4040 0172 03       		.uleb128 0x3
 4041 0173 0E       		.uleb128 0xe
 4042 0174 3A       		.uleb128 0x3a
 4043 0175 0B       		.uleb128 0xb
 4044 0176 3B       		.uleb128 0x3b
 4045 0177 05       		.uleb128 0x5
 4046 0178 49       		.uleb128 0x49
 4047 0179 13       		.uleb128 0x13
 4048 017a 02       		.uleb128 0x2
 4049 017b 17       		.uleb128 0x17
 4050 017c 00       		.byte	0
 4051 017d 00       		.byte	0
 4052 017e 1E       		.uleb128 0x1e
 4053 017f 34       		.uleb128 0x34
 4054 0180 00       		.byte	0
 4055 0181 03       		.uleb128 0x3
 4056 0182 0E       		.uleb128 0xe
 4057 0183 3A       		.uleb128 0x3a
 4058 0184 0B       		.uleb128 0xb
 4059 0185 3B       		.uleb128 0x3b
 4060 0186 05       		.uleb128 0x5
 4061 0187 49       		.uleb128 0x49
 4062 0188 13       		.uleb128 0x13
 4063 0189 02       		.uleb128 0x2
 4064 018a 18       		.uleb128 0x18
 4065 018b 00       		.byte	0
 4066 018c 00       		.byte	0
 4067 018d 1F       		.uleb128 0x1f
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 185


 4068 018e 34       		.uleb128 0x34
 4069 018f 00       		.byte	0
 4070 0190 03       		.uleb128 0x3
 4071 0191 0E       		.uleb128 0xe
 4072 0192 3A       		.uleb128 0x3a
 4073 0193 0B       		.uleb128 0xb
 4074 0194 3B       		.uleb128 0x3b
 4075 0195 05       		.uleb128 0x5
 4076 0196 49       		.uleb128 0x49
 4077 0197 13       		.uleb128 0x13
 4078 0198 02       		.uleb128 0x2
 4079 0199 17       		.uleb128 0x17
 4080 019a 00       		.byte	0
 4081 019b 00       		.byte	0
 4082 019c 20       		.uleb128 0x20
 4083 019d 34       		.uleb128 0x34
 4084 019e 00       		.byte	0
 4085 019f 03       		.uleb128 0x3
 4086 01a0 08       		.uleb128 0x8
 4087 01a1 3A       		.uleb128 0x3a
 4088 01a2 0B       		.uleb128 0xb
 4089 01a3 3B       		.uleb128 0x3b
 4090 01a4 05       		.uleb128 0x5
 4091 01a5 49       		.uleb128 0x49
 4092 01a6 13       		.uleb128 0x13
 4093 01a7 02       		.uleb128 0x2
 4094 01a8 17       		.uleb128 0x17
 4095 01a9 00       		.byte	0
 4096 01aa 00       		.byte	0
 4097 01ab 21       		.uleb128 0x21
 4098 01ac 34       		.uleb128 0x34
 4099 01ad 00       		.byte	0
 4100 01ae 03       		.uleb128 0x3
 4101 01af 0E       		.uleb128 0xe
 4102 01b0 3A       		.uleb128 0x3a
 4103 01b1 0B       		.uleb128 0xb
 4104 01b2 3B       		.uleb128 0x3b
 4105 01b3 05       		.uleb128 0x5
 4106 01b4 49       		.uleb128 0x49
 4107 01b5 13       		.uleb128 0x13
 4108 01b6 1C       		.uleb128 0x1c
 4109 01b7 0B       		.uleb128 0xb
 4110 01b8 00       		.byte	0
 4111 01b9 00       		.byte	0
 4112 01ba 22       		.uleb128 0x22
 4113 01bb 1D       		.uleb128 0x1d
 4114 01bc 01       		.byte	0x1
 4115 01bd 31       		.uleb128 0x31
 4116 01be 13       		.uleb128 0x13
 4117 01bf 11       		.uleb128 0x11
 4118 01c0 01       		.uleb128 0x1
 4119 01c1 12       		.uleb128 0x12
 4120 01c2 06       		.uleb128 0x6
 4121 01c3 58       		.uleb128 0x58
 4122 01c4 0B       		.uleb128 0xb
 4123 01c5 59       		.uleb128 0x59
 4124 01c6 05       		.uleb128 0x5
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 186


 4125 01c7 01       		.uleb128 0x1
 4126 01c8 13       		.uleb128 0x13
 4127 01c9 00       		.byte	0
 4128 01ca 00       		.byte	0
 4129 01cb 23       		.uleb128 0x23
 4130 01cc 05       		.uleb128 0x5
 4131 01cd 00       		.byte	0
 4132 01ce 31       		.uleb128 0x31
 4133 01cf 13       		.uleb128 0x13
 4134 01d0 02       		.uleb128 0x2
 4135 01d1 17       		.uleb128 0x17
 4136 01d2 00       		.byte	0
 4137 01d3 00       		.byte	0
 4138 01d4 24       		.uleb128 0x24
 4139 01d5 34       		.uleb128 0x34
 4140 01d6 00       		.byte	0
 4141 01d7 03       		.uleb128 0x3
 4142 01d8 0E       		.uleb128 0xe
 4143 01d9 3A       		.uleb128 0x3a
 4144 01da 0B       		.uleb128 0xb
 4145 01db 3B       		.uleb128 0x3b
 4146 01dc 05       		.uleb128 0x5
 4147 01dd 49       		.uleb128 0x49
 4148 01de 13       		.uleb128 0x13
 4149 01df 3F       		.uleb128 0x3f
 4150 01e0 19       		.uleb128 0x19
 4151 01e1 3C       		.uleb128 0x3c
 4152 01e2 19       		.uleb128 0x19
 4153 01e3 00       		.byte	0
 4154 01e4 00       		.byte	0
 4155 01e5 25       		.uleb128 0x25
 4156 01e6 35       		.uleb128 0x35
 4157 01e7 00       		.byte	0
 4158 01e8 49       		.uleb128 0x49
 4159 01e9 13       		.uleb128 0x13
 4160 01ea 00       		.byte	0
 4161 01eb 00       		.byte	0
 4162 01ec 26       		.uleb128 0x26
 4163 01ed 34       		.uleb128 0x34
 4164 01ee 00       		.byte	0
 4165 01ef 03       		.uleb128 0x3
 4166 01f0 0E       		.uleb128 0xe
 4167 01f1 3A       		.uleb128 0x3a
 4168 01f2 0B       		.uleb128 0xb
 4169 01f3 3B       		.uleb128 0x3b
 4170 01f4 0B       		.uleb128 0xb
 4171 01f5 49       		.uleb128 0x49
 4172 01f6 13       		.uleb128 0x13
 4173 01f7 3F       		.uleb128 0x3f
 4174 01f8 19       		.uleb128 0x19
 4175 01f9 3C       		.uleb128 0x3c
 4176 01fa 19       		.uleb128 0x19
 4177 01fb 00       		.byte	0
 4178 01fc 00       		.byte	0
 4179 01fd 27       		.uleb128 0x27
 4180 01fe 34       		.uleb128 0x34
 4181 01ff 00       		.byte	0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 187


 4182 0200 03       		.uleb128 0x3
 4183 0201 0E       		.uleb128 0xe
 4184 0202 3A       		.uleb128 0x3a
 4185 0203 0B       		.uleb128 0xb
 4186 0204 3B       		.uleb128 0x3b
 4187 0205 0B       		.uleb128 0xb
 4188 0206 49       		.uleb128 0x49
 4189 0207 13       		.uleb128 0x13
 4190 0208 3F       		.uleb128 0x3f
 4191 0209 19       		.uleb128 0x19
 4192 020a 02       		.uleb128 0x2
 4193 020b 18       		.uleb128 0x18
 4194 020c 00       		.byte	0
 4195 020d 00       		.byte	0
 4196 020e 28       		.uleb128 0x28
 4197 020f 34       		.uleb128 0x34
 4198 0210 00       		.byte	0
 4199 0211 03       		.uleb128 0x3
 4200 0212 08       		.uleb128 0x8
 4201 0213 3A       		.uleb128 0x3a
 4202 0214 0B       		.uleb128 0xb
 4203 0215 3B       		.uleb128 0x3b
 4204 0216 0B       		.uleb128 0xb
 4205 0217 49       		.uleb128 0x49
 4206 0218 13       		.uleb128 0x13
 4207 0219 3F       		.uleb128 0x3f
 4208 021a 19       		.uleb128 0x19
 4209 021b 02       		.uleb128 0x2
 4210 021c 18       		.uleb128 0x18
 4211 021d 00       		.byte	0
 4212 021e 00       		.byte	0
 4213 021f 29       		.uleb128 0x29
 4214 0220 2E       		.uleb128 0x2e
 4215 0221 01       		.byte	0x1
 4216 0222 3F       		.uleb128 0x3f
 4217 0223 19       		.uleb128 0x19
 4218 0224 03       		.uleb128 0x3
 4219 0225 0E       		.uleb128 0xe
 4220 0226 3A       		.uleb128 0x3a
 4221 0227 0B       		.uleb128 0xb
 4222 0228 3B       		.uleb128 0x3b
 4223 0229 0B       		.uleb128 0xb
 4224 022a 27       		.uleb128 0x27
 4225 022b 19       		.uleb128 0x19
 4226 022c 3C       		.uleb128 0x3c
 4227 022d 19       		.uleb128 0x19
 4228 022e 01       		.uleb128 0x1
 4229 022f 13       		.uleb128 0x13
 4230 0230 00       		.byte	0
 4231 0231 00       		.byte	0
 4232 0232 2A       		.uleb128 0x2a
 4233 0233 05       		.uleb128 0x5
 4234 0234 00       		.byte	0
 4235 0235 49       		.uleb128 0x49
 4236 0236 13       		.uleb128 0x13
 4237 0237 00       		.byte	0
 4238 0238 00       		.byte	0
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 188


 4239 0239 2B       		.uleb128 0x2b
 4240 023a 2E       		.uleb128 0x2e
 4241 023b 01       		.byte	0x1
 4242 023c 3F       		.uleb128 0x3f
 4243 023d 19       		.uleb128 0x19
 4244 023e 03       		.uleb128 0x3
 4245 023f 0E       		.uleb128 0xe
 4246 0240 3A       		.uleb128 0x3a
 4247 0241 0B       		.uleb128 0xb
 4248 0242 3B       		.uleb128 0x3b
 4249 0243 0B       		.uleb128 0xb
 4250 0244 27       		.uleb128 0x27
 4251 0245 19       		.uleb128 0x19
 4252 0246 49       		.uleb128 0x49
 4253 0247 13       		.uleb128 0x13
 4254 0248 3C       		.uleb128 0x3c
 4255 0249 19       		.uleb128 0x19
 4256 024a 01       		.uleb128 0x1
 4257 024b 13       		.uleb128 0x13
 4258 024c 00       		.byte	0
 4259 024d 00       		.byte	0
 4260 024e 2C       		.uleb128 0x2c
 4261 024f 18       		.uleb128 0x18
 4262 0250 00       		.byte	0
 4263 0251 00       		.byte	0
 4264 0252 00       		.byte	0
 4265 0253 2D       		.uleb128 0x2d
 4266 0254 2E       		.uleb128 0x2e
 4267 0255 01       		.byte	0x1
 4268 0256 3F       		.uleb128 0x3f
 4269 0257 19       		.uleb128 0x19
 4270 0258 03       		.uleb128 0x3
 4271 0259 0E       		.uleb128 0xe
 4272 025a 3A       		.uleb128 0x3a
 4273 025b 0B       		.uleb128 0xb
 4274 025c 3B       		.uleb128 0x3b
 4275 025d 05       		.uleb128 0x5
 4276 025e 27       		.uleb128 0x27
 4277 025f 19       		.uleb128 0x19
 4278 0260 49       		.uleb128 0x49
 4279 0261 13       		.uleb128 0x13
 4280 0262 3C       		.uleb128 0x3c
 4281 0263 19       		.uleb128 0x19
 4282 0264 01       		.uleb128 0x1
 4283 0265 13       		.uleb128 0x13
 4284 0266 00       		.byte	0
 4285 0267 00       		.byte	0
 4286 0268 2E       		.uleb128 0x2e
 4287 0269 2E       		.uleb128 0x2e
 4288 026a 00       		.byte	0
 4289 026b 3F       		.uleb128 0x3f
 4290 026c 19       		.uleb128 0x19
 4291 026d 03       		.uleb128 0x3
 4292 026e 0E       		.uleb128 0xe
 4293 026f 3A       		.uleb128 0x3a
 4294 0270 0B       		.uleb128 0xb
 4295 0271 3B       		.uleb128 0x3b
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 189


 4296 0272 0B       		.uleb128 0xb
 4297 0273 27       		.uleb128 0x27
 4298 0274 19       		.uleb128 0x19
 4299 0275 49       		.uleb128 0x49
 4300 0276 13       		.uleb128 0x13
 4301 0277 3C       		.uleb128 0x3c
 4302 0278 19       		.uleb128 0x19
 4303 0279 00       		.byte	0
 4304 027a 00       		.byte	0
 4305 027b 2F       		.uleb128 0x2f
 4306 027c 2E       		.uleb128 0x2e
 4307 027d 01       		.byte	0x1
 4308 027e 3F       		.uleb128 0x3f
 4309 027f 19       		.uleb128 0x19
 4310 0280 03       		.uleb128 0x3
 4311 0281 0E       		.uleb128 0xe
 4312 0282 3A       		.uleb128 0x3a
 4313 0283 0B       		.uleb128 0xb
 4314 0284 3B       		.uleb128 0x3b
 4315 0285 05       		.uleb128 0x5
 4316 0286 27       		.uleb128 0x27
 4317 0287 19       		.uleb128 0x19
 4318 0288 3C       		.uleb128 0x3c
 4319 0289 19       		.uleb128 0x19
 4320 028a 01       		.uleb128 0x1
 4321 028b 13       		.uleb128 0x13
 4322 028c 00       		.byte	0
 4323 028d 00       		.byte	0
 4324 028e 30       		.uleb128 0x30
 4325 028f 2E       		.uleb128 0x2e
 4326 0290 01       		.byte	0x1
 4327 0291 3F       		.uleb128 0x3f
 4328 0292 19       		.uleb128 0x19
 4329 0293 03       		.uleb128 0x3
 4330 0294 0E       		.uleb128 0xe
 4331 0295 3A       		.uleb128 0x3a
 4332 0296 0B       		.uleb128 0xb
 4333 0297 3B       		.uleb128 0x3b
 4334 0298 0B       		.uleb128 0xb
 4335 0299 6E       		.uleb128 0x6e
 4336 029a 0E       		.uleb128 0xe
 4337 029b 27       		.uleb128 0x27
 4338 029c 19       		.uleb128 0x19
 4339 029d 49       		.uleb128 0x49
 4340 029e 13       		.uleb128 0x13
 4341 029f 3C       		.uleb128 0x3c
 4342 02a0 19       		.uleb128 0x19
 4343 02a1 01       		.uleb128 0x1
 4344 02a2 13       		.uleb128 0x13
 4345 02a3 00       		.byte	0
 4346 02a4 00       		.byte	0
 4347 02a5 31       		.uleb128 0x31
 4348 02a6 2E       		.uleb128 0x2e
 4349 02a7 01       		.byte	0x1
 4350 02a8 3F       		.uleb128 0x3f
 4351 02a9 19       		.uleb128 0x19
 4352 02aa 03       		.uleb128 0x3
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 190


 4353 02ab 08       		.uleb128 0x8
 4354 02ac 3A       		.uleb128 0x3a
 4355 02ad 0B       		.uleb128 0xb
 4356 02ae 3B       		.uleb128 0x3b
 4357 02af 0B       		.uleb128 0xb
 4358 02b0 27       		.uleb128 0x27
 4359 02b1 19       		.uleb128 0x19
 4360 02b2 49       		.uleb128 0x49
 4361 02b3 13       		.uleb128 0x13
 4362 02b4 3C       		.uleb128 0x3c
 4363 02b5 19       		.uleb128 0x19
 4364 02b6 01       		.uleb128 0x1
 4365 02b7 13       		.uleb128 0x13
 4366 02b8 00       		.byte	0
 4367 02b9 00       		.byte	0
 4368 02ba 32       		.uleb128 0x32
 4369 02bb 2E       		.uleb128 0x2e
 4370 02bc 01       		.byte	0x1
 4371 02bd 3F       		.uleb128 0x3f
 4372 02be 19       		.uleb128 0x19
 4373 02bf 03       		.uleb128 0x3
 4374 02c0 0E       		.uleb128 0xe
 4375 02c1 3A       		.uleb128 0x3a
 4376 02c2 0B       		.uleb128 0xb
 4377 02c3 3B       		.uleb128 0x3b
 4378 02c4 0B       		.uleb128 0xb
 4379 02c5 27       		.uleb128 0x27
 4380 02c6 19       		.uleb128 0x19
 4381 02c7 3C       		.uleb128 0x3c
 4382 02c8 19       		.uleb128 0x19
 4383 02c9 00       		.byte	0
 4384 02ca 00       		.byte	0
 4385 02cb 00       		.byte	0
 4386              		.section	.debug_loc,"",%progbits
 4387              	.Ldebug_loc0:
 4388              	.LLST0:
 4389 0000 00000000 		.4byte	.LVL0
 4390 0004 07000000 		.4byte	.LVL1-1
 4391 0008 0100     		.2byte	0x1
 4392 000a 50       		.byte	0x50
 4393 000b 07000000 		.4byte	.LVL1-1
 4394 000f 14000000 		.4byte	.LFE119
 4395 0013 0400     		.2byte	0x4
 4396 0015 F3       		.byte	0xf3
 4397 0016 01       		.uleb128 0x1
 4398 0017 50       		.byte	0x50
 4399 0018 9F       		.byte	0x9f
 4400 0019 00000000 		.4byte	0
 4401 001d 00000000 		.4byte	0
 4402              	.LLST1:
 4403 0021 1C000000 		.4byte	.LVL16
 4404 0025 2E000000 		.4byte	.LVL17
 4405 0029 0100     		.2byte	0x1
 4406 002b 53       		.byte	0x53
 4407 002c 2E000000 		.4byte	.LVL17
 4408 0030 3D000000 		.4byte	.LVL18-1
 4409 0034 0100     		.2byte	0x1
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 191


 4410 0036 51       		.byte	0x51
 4411 0037 00000000 		.4byte	0
 4412 003b 00000000 		.4byte	0
 4413              	.LLST2:
 4414 003f 58000000 		.4byte	.LVL19
 4415 0043 8E000000 		.4byte	.LVL20
 4416 0047 0100     		.2byte	0x1
 4417 0049 50       		.byte	0x50
 4418 004a 8E000000 		.4byte	.LVL20
 4419 004e 95000000 		.4byte	.LVL21-1
 4420 0052 2800     		.2byte	0x28
 4421 0054 03       		.byte	0x3
 4422 0055 00000000 		.4byte	Adj_Vbias
 4423 0059 94       		.byte	0x94
 4424 005a 02       		.byte	0x2
 4425 005b 0A       		.byte	0xa
 4426 005c FFFF     		.2byte	0xffff
 4427 005e 1A       		.byte	0x1a
 4428 005f 03       		.byte	0x3
 4429 0060 00000000 		.4byte	gain
 4430 0064 94       		.byte	0x94
 4431 0065 02       		.byte	0x2
 4432 0066 40       		.byte	0x40
 4433 0067 24       		.byte	0x24
 4434 0068 40       		.byte	0x40
 4435 0069 26       		.byte	0x26
 4436 006a 33       		.byte	0x33
 4437 006b 1E       		.byte	0x1e
 4438 006c 31       		.byte	0x31
 4439 006d 24       		.byte	0x24
 4440 006e 03       		.byte	0x3
 4441 006f 04000000 		.4byte	.LANCHOR1+4
 4442 0073 22       		.byte	0x22
 4443 0074 94       		.byte	0x94
 4444 0075 02       		.byte	0x2
 4445 0076 0A       		.byte	0xa
 4446 0077 FFFF     		.2byte	0xffff
 4447 0079 1A       		.byte	0x1a
 4448 007a 22       		.byte	0x22
 4449 007b 9F       		.byte	0x9f
 4450 007c 00000000 		.4byte	0
 4451 0080 00000000 		.4byte	0
 4452              	.LLST3:
 4453 0084 00000000 		.4byte	.LVL37
 4454 0088 11000000 		.4byte	.LVL40-1
 4455 008c 0100     		.2byte	0x1
 4456 008e 50       		.byte	0x50
 4457 008f 11000000 		.4byte	.LVL40-1
 4458 0093 68050000 		.4byte	.LFE123
 4459 0097 0400     		.2byte	0x4
 4460 0099 F3       		.byte	0xf3
 4461 009a 01       		.uleb128 0x1
 4462 009b 50       		.byte	0x50
 4463 009c 9F       		.byte	0x9f
 4464 009d 00000000 		.4byte	0
 4465 00a1 00000000 		.4byte	0
 4466              	.LLST4:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 192


 4467 00a5 06000000 		.4byte	.LVL38
 4468 00a9 3C000000 		.4byte	.LVL43
 4469 00ad 0200     		.2byte	0x2
 4470 00af 30       		.byte	0x30
 4471 00b0 9F       		.byte	0x9f
 4472 00b1 3C000000 		.4byte	.LVL43
 4473 00b5 D0010000 		.4byte	.LVL88
 4474 00b9 0100     		.2byte	0x1
 4475 00bb 58       		.byte	0x58
 4476 00bc D0010000 		.4byte	.LVL88
 4477 00c0 E8010000 		.4byte	.LVL91
 4478 00c4 0200     		.2byte	0x2
 4479 00c6 31       		.byte	0x31
 4480 00c7 9F       		.byte	0x9f
 4481 00c8 E8010000 		.4byte	.LVL91
 4482 00cc FC010000 		.4byte	.LVL92
 4483 00d0 0100     		.2byte	0x1
 4484 00d2 58       		.byte	0x58
 4485 00d3 54020000 		.4byte	.LVL101
 4486 00d7 58020000 		.4byte	.LVL102
 4487 00db 0100     		.2byte	0x1
 4488 00dd 58       		.byte	0x58
 4489 00de 5E030000 		.4byte	.LVL124
 4490 00e2 6E030000 		.4byte	.LVL126
 4491 00e6 0100     		.2byte	0x1
 4492 00e8 58       		.byte	0x58
 4493 00e9 DA030000 		.4byte	.LVL137
 4494 00ed 12040000 		.4byte	.LVL142
 4495 00f1 0100     		.2byte	0x1
 4496 00f3 58       		.byte	0x58
 4497 00f4 14040000 		.4byte	.LVL143
 4498 00f8 68050000 		.4byte	.LFE123
 4499 00fc 0100     		.2byte	0x1
 4500 00fe 58       		.byte	0x58
 4501 00ff 00000000 		.4byte	0
 4502 0103 00000000 		.4byte	0
 4503              	.LLST5:
 4504 0107 06000000 		.4byte	.LVL38
 4505 010b 3C000000 		.4byte	.LVL43
 4506 010f 0200     		.2byte	0x2
 4507 0111 30       		.byte	0x30
 4508 0112 9F       		.byte	0x9f
 4509 0113 3C000000 		.4byte	.LVL43
 4510 0117 96010000 		.4byte	.LVL80
 4511 011b 0100     		.2byte	0x1
 4512 011d 57       		.byte	0x57
 4513 011e D0010000 		.4byte	.LVL88
 4514 0122 E8010000 		.4byte	.LVL91
 4515 0126 0200     		.2byte	0x2
 4516 0128 31       		.byte	0x31
 4517 0129 9F       		.byte	0x9f
 4518 012a E8010000 		.4byte	.LVL91
 4519 012e 98040000 		.4byte	.LVL150
 4520 0132 0100     		.2byte	0x1
 4521 0134 57       		.byte	0x57
 4522 0135 D8040000 		.4byte	.LVL154
 4523 0139 DA040000 		.4byte	.LVL155
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 193


 4524 013d 0100     		.2byte	0x1
 4525 013f 57       		.byte	0x57
 4526 0140 26050000 		.4byte	.LVL159
 4527 0144 28050000 		.4byte	.LVL160
 4528 0148 0200     		.2byte	0x2
 4529 014a 30       		.byte	0x30
 4530 014b 9F       		.byte	0x9f
 4531 014c 28050000 		.4byte	.LVL160
 4532 0150 68050000 		.4byte	.LFE123
 4533 0154 0100     		.2byte	0x1
 4534 0156 57       		.byte	0x57
 4535 0157 00000000 		.4byte	0
 4536 015b 00000000 		.4byte	0
 4537              	.LLST6:
 4538 015f 0E000000 		.4byte	.LVL39
 4539 0163 3C000000 		.4byte	.LVL43
 4540 0167 0A00     		.2byte	0xa
 4541 0169 9E       		.byte	0x9e
 4542 016a 08       		.uleb128 0x8
 4543 016b 00000000 		.4byte	0
 4544 016f 00000000 		.4byte	0
 4545 0173 28010000 		.4byte	.LVL62
 4546 0177 31010000 		.4byte	.LVL63-1
 4547 017b 0600     		.2byte	0x6
 4548 017d 50       		.byte	0x50
 4549 017e 93       		.byte	0x93
 4550 017f 04       		.uleb128 0x4
 4551 0180 51       		.byte	0x51
 4552 0181 93       		.byte	0x93
 4553 0182 04       		.uleb128 0x4
 4554 0183 00000000 		.4byte	0
 4555 0187 00000000 		.4byte	0
 4556              	.LLST7:
 4557 018b 0E000000 		.4byte	.LVL39
 4558 018f 3C000000 		.4byte	.LVL43
 4559 0193 0A00     		.2byte	0xa
 4560 0195 9E       		.byte	0x9e
 4561 0196 08       		.uleb128 0x8
 4562 0197 00000000 		.4byte	0
 4563 019b 00000000 		.4byte	0
 4564 019f 3C000000 		.4byte	.LVL43
 4565 01a3 3E010000 		.4byte	.LVL65
 4566 01a7 0200     		.2byte	0x2
 4567 01a9 7D       		.byte	0x7d
 4568 01aa 00       		.sleb128 0
 4569 01ab 3E010000 		.4byte	.LVL65
 4570 01af 40010000 		.4byte	.LVL66
 4571 01b3 0600     		.2byte	0x6
 4572 01b5 50       		.byte	0x50
 4573 01b6 93       		.byte	0x93
 4574 01b7 04       		.uleb128 0x4
 4575 01b8 51       		.byte	0x51
 4576 01b9 93       		.byte	0x93
 4577 01ba 04       		.uleb128 0x4
 4578 01bb 40010000 		.4byte	.LVL66
 4579 01bf 68050000 		.4byte	.LFE123
 4580 01c3 0200     		.2byte	0x2
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 194


 4581 01c5 7D       		.byte	0x7d
 4582 01c6 00       		.sleb128 0
 4583 01c7 00000000 		.4byte	0
 4584 01cb 00000000 		.4byte	0
 4585              	.LLST8:
 4586 01cf 3C000000 		.4byte	.LVL43
 4587 01d3 DE000000 		.4byte	.LVL55
 4588 01d7 0100     		.2byte	0x1
 4589 01d9 54       		.byte	0x54
 4590 01da 40010000 		.4byte	.LVL66
 4591 01de 48010000 		.4byte	.LVL67
 4592 01e2 0100     		.2byte	0x1
 4593 01e4 54       		.byte	0x54
 4594 01e5 88010000 		.4byte	.LVL76
 4595 01e9 8A010000 		.4byte	.LVL77
 4596 01ed 0100     		.2byte	0x1
 4597 01ef 50       		.byte	0x50
 4598 01f0 8C010000 		.4byte	.LVL78
 4599 01f4 68050000 		.4byte	.LFE123
 4600 01f8 0100     		.2byte	0x1
 4601 01fa 54       		.byte	0x54
 4602 01fb 00000000 		.4byte	0
 4603 01ff 00000000 		.4byte	0
 4604              	.LLST9:
 4605 0203 0E000000 		.4byte	.LVL39
 4606 0207 3C000000 		.4byte	.LVL43
 4607 020b 0A00     		.2byte	0xa
 4608 020d 9E       		.byte	0x9e
 4609 020e 08       		.uleb128 0x8
 4610 020f 00000000 		.4byte	0
 4611 0213 00000000 		.4byte	0
 4612 0217 A8010000 		.4byte	.LVL82
 4613 021b B1010000 		.4byte	.LVL83-1
 4614 021f 0600     		.2byte	0x6
 4615 0221 50       		.byte	0x50
 4616 0222 93       		.byte	0x93
 4617 0223 04       		.uleb128 0x4
 4618 0224 51       		.byte	0x51
 4619 0225 93       		.byte	0x93
 4620 0226 04       		.uleb128 0x4
 4621 0227 00000000 		.4byte	0
 4622 022b 00000000 		.4byte	0
 4623              	.LLST10:
 4624 022f 0E000000 		.4byte	.LVL39
 4625 0233 3C000000 		.4byte	.LVL43
 4626 0237 0A00     		.2byte	0xa
 4627 0239 9E       		.byte	0x9e
 4628 023a 08       		.uleb128 0x8
 4629 023b 00000000 		.4byte	0
 4630 023f 00000000 		.4byte	0
 4631 0243 3C000000 		.4byte	.LVL43
 4632 0247 DA000000 		.4byte	.LVL54
 4633 024b 0600     		.2byte	0x6
 4634 024d 56       		.byte	0x56
 4635 024e 93       		.byte	0x93
 4636 024f 04       		.uleb128 0x4
 4637 0250 55       		.byte	0x55
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 195


 4638 0251 93       		.byte	0x93
 4639 0252 04       		.uleb128 0x4
 4640 0253 40010000 		.4byte	.LVL66
 4641 0257 48010000 		.4byte	.LVL67
 4642 025b 0600     		.2byte	0x6
 4643 025d 56       		.byte	0x56
 4644 025e 93       		.byte	0x93
 4645 025f 04       		.uleb128 0x4
 4646 0260 55       		.byte	0x55
 4647 0261 93       		.byte	0x93
 4648 0262 04       		.uleb128 0x4
 4649 0263 BE010000 		.4byte	.LVL85
 4650 0267 C2010000 		.4byte	.LVL86
 4651 026b 0600     		.2byte	0x6
 4652 026d 50       		.byte	0x50
 4653 026e 93       		.byte	0x93
 4654 026f 04       		.uleb128 0x4
 4655 0270 51       		.byte	0x51
 4656 0271 93       		.byte	0x93
 4657 0272 04       		.uleb128 0x4
 4658 0273 C2010000 		.4byte	.LVL86
 4659 0277 C5010000 		.4byte	.LVL87-1
 4660 027b 0600     		.2byte	0x6
 4661 027d 56       		.byte	0x56
 4662 027e 93       		.byte	0x93
 4663 027f 04       		.uleb128 0x4
 4664 0280 51       		.byte	0x51
 4665 0281 93       		.byte	0x93
 4666 0282 04       		.uleb128 0x4
 4667 0283 C5010000 		.4byte	.LVL87-1
 4668 0287 68050000 		.4byte	.LFE123
 4669 028b 0600     		.2byte	0x6
 4670 028d 56       		.byte	0x56
 4671 028e 93       		.byte	0x93
 4672 028f 04       		.uleb128 0x4
 4673 0290 55       		.byte	0x55
 4674 0291 93       		.byte	0x93
 4675 0292 04       		.uleb128 0x4
 4676 0293 00000000 		.4byte	0
 4677 0297 00000000 		.4byte	0
 4678              	.LLST11:
 4679 029b FC010000 		.4byte	.LVL92
 4680 029f 54020000 		.4byte	.LVL101
 4681 02a3 0100     		.2byte	0x1
 4682 02a5 5A       		.byte	0x5a
 4683 02a6 5C020000 		.4byte	.LVL103
 4684 02aa EE020000 		.4byte	.LVL111
 4685 02ae 0100     		.2byte	0x1
 4686 02b0 5A       		.byte	0x5a
 4687 02b1 46030000 		.4byte	.LVL121
 4688 02b5 52030000 		.4byte	.LVL122
 4689 02b9 0100     		.2byte	0x1
 4690 02bb 5A       		.byte	0x5a
 4691 02bc 00000000 		.4byte	0
 4692 02c0 00000000 		.4byte	0
 4693              	.LLST12:
 4694 02c4 0E000000 		.4byte	.LVL39
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 196


 4695 02c8 3C000000 		.4byte	.LVL43
 4696 02cc 0A00     		.2byte	0xa
 4697 02ce 9E       		.byte	0x9e
 4698 02cf 08       		.uleb128 0x8
 4699 02d0 00000000 		.4byte	0
 4700 02d4 00000000 		.4byte	0
 4701 02d8 20030000 		.4byte	.LVL116
 4702 02dc 29030000 		.4byte	.LVL117-1
 4703 02e0 0600     		.2byte	0x6
 4704 02e2 50       		.byte	0x50
 4705 02e3 93       		.byte	0x93
 4706 02e4 04       		.uleb128 0x4
 4707 02e5 51       		.byte	0x51
 4708 02e6 93       		.byte	0x93
 4709 02e7 04       		.uleb128 0x4
 4710 02e8 00000000 		.4byte	0
 4711 02ec 00000000 		.4byte	0
 4712              	.LLST13:
 4713 02f0 0E000000 		.4byte	.LVL39
 4714 02f4 3C000000 		.4byte	.LVL43
 4715 02f8 0A00     		.2byte	0xa
 4716 02fa 9E       		.byte	0x9e
 4717 02fb 08       		.uleb128 0x8
 4718 02fc 00000000 		.4byte	0
 4719 0300 00000000 		.4byte	0
 4720 0304 3C030000 		.4byte	.LVL119
 4721 0308 43030000 		.4byte	.LVL120-1
 4722 030c 0600     		.2byte	0x6
 4723 030e 52       		.byte	0x52
 4724 030f 93       		.byte	0x93
 4725 0310 04       		.uleb128 0x4
 4726 0311 53       		.byte	0x53
 4727 0312 93       		.byte	0x93
 4728 0313 04       		.uleb128 0x4
 4729 0314 00000000 		.4byte	0
 4730 0318 00000000 		.4byte	0
 4731              	.LLST14:
 4732 031c FC010000 		.4byte	.LVL92
 4733 0320 4E020000 		.4byte	.LVL99
 4734 0324 0100     		.2byte	0x1
 4735 0326 58       		.byte	0x58
 4736 0327 52020000 		.4byte	.LVL100
 4737 032b 54020000 		.4byte	.LVL101
 4738 032f 0100     		.2byte	0x1
 4739 0331 58       		.byte	0x58
 4740 0332 5C020000 		.4byte	.LVL103
 4741 0336 E6020000 		.4byte	.LVL110
 4742 033a 0100     		.2byte	0x1
 4743 033c 58       		.byte	0x58
 4744 033d 46030000 		.4byte	.LVL121
 4745 0341 52030000 		.4byte	.LVL122
 4746 0345 0100     		.2byte	0x1
 4747 0347 58       		.byte	0x58
 4748 0348 98040000 		.4byte	.LVL150
 4749 034c D4040000 		.4byte	.LVL152
 4750 0350 0100     		.2byte	0x1
 4751 0352 57       		.byte	0x57
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 197


 4752 0353 D6040000 		.4byte	.LVL153
 4753 0357 D8040000 		.4byte	.LVL154
 4754 035b 0100     		.2byte	0x1
 4755 035d 57       		.byte	0x57
 4756 035e DA040000 		.4byte	.LVL155
 4757 0362 FE040000 		.4byte	.LVL156
 4758 0366 0100     		.2byte	0x1
 4759 0368 57       		.byte	0x57
 4760 0369 00000000 		.4byte	0
 4761 036d 00000000 		.4byte	0
 4762              	.LLST15:
 4763 0371 78010000 		.4byte	.LVL73
 4764 0375 E8010000 		.4byte	.LVL91
 4765 0379 0600     		.2byte	0x6
 4766 037b F2       		.byte	0xf2
 4767 037c 36060000 		.4byte	.Ldebug_info0+1590
 4768 0380 00       		.sleb128 0
 4769 0381 00000000 		.4byte	0
 4770 0385 00000000 		.4byte	0
 4771              	.LLST16:
 4772 0389 78010000 		.4byte	.LVL73
 4773 038d 7D010000 		.4byte	.LVL74-1
 4774 0391 0100     		.2byte	0x1
 4775 0393 50       		.byte	0x50
 4776 0394 7D010000 		.4byte	.LVL74-1
 4777 0398 88010000 		.4byte	.LVL76
 4778 039c 0100     		.2byte	0x1
 4779 039e 54       		.byte	0x54
 4780 039f 8A010000 		.4byte	.LVL77
 4781 03a3 8C010000 		.4byte	.LVL78
 4782 03a7 0100     		.2byte	0x1
 4783 03a9 54       		.byte	0x54
 4784 03aa 00000000 		.4byte	0
 4785 03ae 00000000 		.4byte	0
 4786              		.section	.debug_aranges,"",%progbits
 4787 0000 3C000000 		.4byte	0x3c
 4788 0004 0200     		.2byte	0x2
 4789 0006 00000000 		.4byte	.Ldebug_info0
 4790 000a 04       		.byte	0x4
 4791 000b 00       		.byte	0
 4792 000c 0000     		.2byte	0
 4793 000e 0000     		.2byte	0
 4794 0010 00000000 		.4byte	.LFB119
 4795 0014 14000000 		.4byte	.LFE119-.LFB119
 4796 0018 00000000 		.4byte	.LFB120
 4797 001c 90000000 		.4byte	.LFE120-.LFB120
 4798 0020 00000000 		.4byte	.LFB121
 4799 0024 A4000000 		.4byte	.LFE121-.LFB121
 4800 0028 00000000 		.4byte	.LFB122
 4801 002c D0000000 		.4byte	.LFE122-.LFB122
 4802 0030 00000000 		.4byte	.LFB123
 4803 0034 68050000 		.4byte	.LFE123-.LFB123
 4804 0038 00000000 		.4byte	0
 4805 003c 00000000 		.4byte	0
 4806              		.section	.debug_ranges,"",%progbits
 4807              	.Ldebug_ranges0:
 4808 0000 00000000 		.4byte	.LFB119
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 198


 4809 0004 14000000 		.4byte	.LFE119
 4810 0008 00000000 		.4byte	.LFB120
 4811 000c 90000000 		.4byte	.LFE120
 4812 0010 00000000 		.4byte	.LFB121
 4813 0014 A4000000 		.4byte	.LFE121
 4814 0018 00000000 		.4byte	.LFB122
 4815 001c D0000000 		.4byte	.LFE122
 4816 0020 00000000 		.4byte	.LFB123
 4817 0024 68050000 		.4byte	.LFE123
 4818 0028 00000000 		.4byte	0
 4819 002c 00000000 		.4byte	0
 4820              		.section	.debug_line,"",%progbits
 4821              	.Ldebug_line0:
 4822 0000 7E030000 		.section	.debug_str,"MS",%progbits,1
 4822      02004902 
 4822      00000201 
 4822      FB0E0D00 
 4822      01010101 
 4823              	.LASF43:
 4824 0000 4E4F4E45 		.ascii	"NONE\000"
 4824      00
 4825              	.LASF44:
 4826 0005 7067615F 		.ascii	"pga_gain\000"
 4826      6761696E 
 4826      00
 4827              	.LASF87:
 4828 000e 78517565 		.ascii	"xQueue_RXD\000"
 4828      75655F52 
 4828      584400
 4829              	.LASF24:
 4830 0019 646F7562 		.ascii	"double_t\000"
 4830      6C655F74 
 4830      00
 4831              	.LASF104:
 4832 0022 75785175 		.ascii	"uxQueueMessagesWaiting\000"
 4832      6575654D 
 4832      65737361 
 4832      67657357 
 4832      61697469 
 4833              	.LASF40:
 4834 0039 44495354 		.ascii	"DISTANCE\000"
 4834      414E4345 
 4834      00
 4835              	.LASF100:
 4836 0042 73707269 		.ascii	"sprintf\000"
 4836      6E746600 
 4837              	.LASF79:
 4838 004a 636C6963 		.ascii	"click\000"
 4838      6B00
 4839              	.LASF95:
 4840 0050 6469725F 		.ascii	"dir_tab\000"
 4840      74616200 
 4841              	.LASF6:
 4842 0058 6C6F6E67 		.ascii	"long int\000"
 4842      20696E74 
 4842      00
 4843              	.LASF11:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 199


 4844 0061 6C6F6E67 		.ascii	"long long unsigned int\000"
 4844      206C6F6E 
 4844      6720756E 
 4844      7369676E 
 4844      65642069 
 4845              	.LASF25:
 4846 0078 41524D5F 		.ascii	"ARM_MATH_SUCCESS\000"
 4846      4D415448 
 4846      5F535543 
 4846      43455353 
 4846      00
 4847              	.LASF58:
 4848 0089 4449525F 		.ascii	"DIR_TABLE\000"
 4848      5441424C 
 4848      4500
 4849              	.LASF37:
 4850 0093 51756575 		.ascii	"QueueHandle_t\000"
 4850      6548616E 
 4850      646C655F 
 4850      7400
 4851              	.LASF81:
 4852 00a1 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4852      52784275 
 4852      66666572 
 4852      00
 4853              	.LASF92:
 4854 00ae 41646A5F 		.ascii	"Adj_Vth\000"
 4854      56746800 
 4855              	.LASF103:
 4856 00b6 78517565 		.ascii	"xQueueGenericReceive\000"
 4856      75654765 
 4856      6E657269 
 4856      63526563 
 4856      65697665 
 4857              	.LASF56:
 4858 00cb 6D61726B 		.ascii	"mark_position\000"
 4858      5F706F73 
 4858      6974696F 
 4858      6E00
 4859              	.LASF10:
 4860 00d9 6C6F6E67 		.ascii	"long long int\000"
 4860      206C6F6E 
 4860      6720696E 
 4860      7400
 4861              	.LASF2:
 4862 00e7 7369676E 		.ascii	"signed char\000"
 4862      65642063 
 4862      68617200 
 4863              	.LASF102:
 4864 00f3 76546173 		.ascii	"vTaskDelay\000"
 4864      6B44656C 
 4864      617900
 4865              	.LASF57:
 4866 00fe 6E5F6D61 		.ascii	"n_mark\000"
 4866      726B00
 4867              	.LASF72:
 4868 0105 7068695F 		.ascii	"phi_deg\000"
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 200


 4868      64656700 
 4869              	.LASF53:
 4870 010d 4741494E 		.ascii	"GAIN_AGC_TABLE\000"
 4870      5F414743 
 4870      5F544142 
 4870      4C4500
 4871              	.LASF68:
 4872 011c 75706461 		.ascii	"update_gain_flag\000"
 4872      74655F67 
 4872      61696E5F 
 4872      666C6167 
 4872      00
 4873              	.LASF116:
 4874 012d 61726D5F 		.ascii	"arm_sqrt_f32\000"
 4874      73717274 
 4874      5F663332 
 4874      00
 4875              	.LASF15:
 4876 013a 75696E74 		.ascii	"uint8\000"
 4876      3800
 4877              	.LASF0:
 4878 0140 646F7562 		.ascii	"double\000"
 4878      6C6500
 4879              	.LASF34:
 4880 0147 42617365 		.ascii	"BaseType_t\000"
 4880      54797065 
 4880      5F7400
 4881              	.LASF115:
 4882 0152 434C4344 		.ascii	"CLCD_mode\000"
 4882      5F6D6F64 
 4882      6500
 4883              	.LASF17:
 4884 015c 75696E74 		.ascii	"uint32\000"
 4884      333200
 4885              	.LASF105:
 4886 0163 4D4F4E5F 		.ascii	"MON_Write\000"
 4886      57726974 
 4886      6500
 4887              	.LASF96:
 4888 016d 4932435F 		.ascii	"I2C_CLCD_Position\000"
 4888      434C4344 
 4888      5F506F73 
 4888      6974696F 
 4888      6E00
 4889              	.LASF8:
 4890 017f 5F5F7569 		.ascii	"__uint32_t\000"
 4890      6E743332 
 4890      5F7400
 4891              	.LASF52:
 4892 018a 6761696E 		.ascii	"gain_ctl\000"
 4892      5F63746C 
 4892      00
 4893              	.LASF12:
 4894 0193 756E7369 		.ascii	"unsigned int\000"
 4894      676E6564 
 4894      20696E74 
 4894      00
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 201


 4895              	.LASF62:
 4896 01a0 7365745F 		.ascii	"set_Vth_Vbias\000"
 4896      5674685F 
 4896      56626961 
 4896      7300
 4897              	.LASF60:
 4898 01ae 434C4344 		.ascii	"CLCD_clear\000"
 4898      5F636C65 
 4898      617200
 4899              	.LASF45:
 4900 01b9 6D61676E 		.ascii	"magnification\000"
 4900      69666963 
 4900      6174696F 
 4900      6E00
 4901              	.LASF9:
 4902 01c7 6C6F6E67 		.ascii	"long unsigned int\000"
 4902      20756E73 
 4902      69676E65 
 4902      6420696E 
 4902      7400
 4903              	.LASF61:
 4904 01d9 434C4344 		.ascii	"CLCD_mode_switch\000"
 4904      5F6D6F64 
 4904      655F7377 
 4904      69746368 
 4904      00
 4905              	.LASF65:
 4906 01ea 70765061 		.ascii	"pvParameters\000"
 4906      72616D65 
 4906      74657273 
 4906      00
 4907              	.LASF110:
 4908 01f7 78517565 		.ascii	"xQueueGenericSend\000"
 4908      75654765 
 4908      6E657269 
 4908      6353656E 
 4908      6400
 4909              	.LASF5:
 4910 0209 73686F72 		.ascii	"short unsigned int\000"
 4910      7420756E 
 4910      7369676E 
 4910      65642069 
 4910      6E7400
 4911              	.LASF75:
 4912 021c 6261725F 		.ascii	"bar_position\000"
 4912      706F7369 
 4912      74696F6E 
 4912      00
 4913              	.LASF76:
 4914 0229 6E5F6261 		.ascii	"n_bar\000"
 4914      7200
 4915              	.LASF18:
 4916 022f 696E7438 		.ascii	"int8\000"
 4916      00
 4917              	.LASF88:
 4918 0234 784D7574 		.ascii	"xMutex_RX_BUF\000"
 4918      65785F52 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 202


 4918      585F4255 
 4918      4600
 4919              	.LASF97:
 4920 0242 4932435F 		.ascii	"I2C_CLCD_PrintString\000"
 4920      434C4344 
 4920      5F507269 
 4920      6E745374 
 4920      72696E67 
 4921              	.LASF31:
 4922 0257 41524D5F 		.ascii	"ARM_MATH_TEST_FAILURE\000"
 4922      4D415448 
 4922      5F544553 
 4922      545F4641 
 4922      494C5552 
 4923              	.LASF119:
 4924 026d 73747263 		.ascii	"strcpy\000"
 4924      707900
 4925              	.LASF4:
 4926 0274 73686F72 		.ascii	"short int\000"
 4926      7420696E 
 4926      7400
 4927              	.LASF101:
 4928 027e 73717274 		.ascii	"sqrtf\000"
 4928      6600
 4929              	.LASF74:
 4930 0284 6469725F 		.ascii	"dir_deg\000"
 4930      64656700 
 4931              	.LASF59:
 4932 028c 704F7574 		.ascii	"pOut\000"
 4932      00
 4933              	.LASF77:
 4934 0291 726D735F 		.ascii	"rms_pga\000"
 4934      70676100 
 4935              	.LASF84:
 4936 0299 6473745F 		.ascii	"dst_buf_f32\000"
 4936      6275665F 
 4936      66333200 
 4937              	.LASF22:
 4938 02a5 73697A65 		.ascii	"sizetype\000"
 4938      74797065 
 4938      00
 4939              	.LASF94:
 4940 02ae 7067615F 		.ascii	"pga_agc\000"
 4940      61676300 
 4941              	.LASF36:
 4942 02b6 5469636B 		.ascii	"TickType_t\000"
 4942      54797065 
 4942      5F7400
 4943              	.LASF63:
 4944 02c1 434C4344 		.ascii	"CLCD_set_PGA_gain\000"
 4944      5F736574 
 4944      5F504741 
 4944      5F676169 
 4944      6E00
 4945              	.LASF83:
 4946 02d3 414E5432 		.ascii	"ANT2_buf_f32\000"
 4946      5F627566 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 203


 4946      5F663332 
 4946      00
 4947              	.LASF39:
 4948 02e0 494E5641 		.ascii	"INVALID\000"
 4948      4C494400 
 4949              	.LASF93:
 4950 02e8 41646A5F 		.ascii	"Adj_Vbias\000"
 4950      56626961 
 4950      7300
 4951              	.LASF73:
 4952 02f2 726D735F 		.ascii	"rms_mixed\000"
 4952      6D697865 
 4952      6400
 4953              	.LASF27:
 4954 02fc 41524D5F 		.ascii	"ARM_MATH_LENGTH_ERROR\000"
 4954      4D415448 
 4954      5F4C454E 
 4954      4754485F 
 4954      4552524F 
 4955              	.LASF1:
 4956 0312 666C6F61 		.ascii	"float\000"
 4956      7400
 4957              	.LASF30:
 4958 0318 41524D5F 		.ascii	"ARM_MATH_SINGULAR\000"
 4958      4D415448 
 4958      5F53494E 
 4958      47554C41 
 4958      5200
 4959              	.LASF70:
 4960 032a 6D65616E 		.ascii	"meanval_cos\000"
 4960      76616C5F 
 4960      636F7300 
 4961              	.LASF29:
 4962 0336 41524D5F 		.ascii	"ARM_MATH_NANINF\000"
 4962      4D415448 
 4962      5F4E414E 
 4962      494E4600 
 4963              	.LASF90:
 4964 0346 6761696E 		.ascii	"gain\000"
 4964      00
 4965              	.LASF47:
 4966 034b 74687265 		.ascii	"threshold\000"
 4966      73686F6C 
 4966      6400
 4967              	.LASF13:
 4968 0355 696E7433 		.ascii	"int32_t\000"
 4968      325F7400 
 4969              	.LASF3:
 4970 035d 756E7369 		.ascii	"unsigned char\000"
 4970      676E6564 
 4970      20636861 
 4970      7200
 4971              	.LASF16:
 4972 036b 75696E74 		.ascii	"uint16\000"
 4972      313600
 4973              	.LASF118:
 4974 0372 5F5F6275 		.ascii	"__builtin_strcpy\000"
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 204


 4974      696C7469 
 4974      6E5F7374 
 4974      72637079 
 4974      00
 4975              	.LASF66:
 4976 0383 716D7367 		.ascii	"qmsg\000"
 4976      00
 4977              	.LASF42:
 4978 0388 44495245 		.ascii	"DIRECTION\000"
 4978      4354494F 
 4978      4E00
 4979              	.LASF111:
 4980 0392 5047415F 		.ascii	"PGA_1_SetGain\000"
 4980      315F5365 
 4980      74476169 
 4980      6E00
 4981              	.LASF108:
 4982 03a0 6174616E 		.ascii	"atan2\000"
 4982      3200
 4983              	.LASF48:
 4984 03a6 62696173 		.ascii	"bias\000"
 4984      00
 4985              	.LASF54:
 4986 03ab 616E676C 		.ascii	"angle_min\000"
 4986      655F6D69 
 4986      6E00
 4987              	.LASF98:
 4988 03b5 436F6E74 		.ascii	"Control_GAIN_Write\000"
 4988      726F6C5F 
 4988      4741494E 
 4988      5F577269 
 4988      746500
 4989              	.LASF91:
 4990 03c8 56626961 		.ascii	"Vbias\000"
 4990      7300
 4991              	.LASF41:
 4992 03ce 5349474E 		.ascii	"SIGNAL\000"
 4992      414C00
 4993              	.LASF106:
 4994 03d5 61726D5F 		.ascii	"arm_mult_f32\000"
 4994      6D756C74 
 4994      5F663332 
 4994      00
 4995              	.LASF14:
 4996 03e2 75696E74 		.ascii	"uint32_t\000"
 4996      33325F74 
 4996      00
 4997              	.LASF99:
 4998 03eb 44564441 		.ascii	"DVDAC_2_SetValue\000"
 4998      435F325F 
 4998      53657456 
 4998      616C7565 
 4998      00
 4999              	.LASF23:
 5000 03fc 6C6F6E67 		.ascii	"long double\000"
 5000      20646F75 
 5000      626C6500 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 205


 5001              	.LASF38:
 5002 0408 53656D61 		.ascii	"SemaphoreHandle_t\000"
 5002      70686F72 
 5002      6548616E 
 5002      646C655F 
 5002      7400
 5003              	.LASF21:
 5004 041a 63686172 		.ascii	"char\000"
 5004      00
 5005              	.LASF89:
 5006 041f 6D6F6465 		.ascii	"mode\000"
 5006      00
 5007              	.LASF114:
 5008 0424 453A5C50 		.ascii	"E:\\PSoC_Creator\\CY8CKIT-059\\CY8CKIT-059_SDR_Beac"
 5008      536F435F 
 5008      43726561 
 5008      746F725C 
 5008      43593843 
 5009 0454 6F6E5C43 		.ascii	"on\\CY8CKIT-059_SDR_Beacon.cydsn\000"
 5009      5938434B 
 5009      49542D30 
 5009      35395F53 
 5009      44525F42 
 5010              	.LASF78:
 5011 0474 64697374 		.ascii	"distance\000"
 5011      616E6365 
 5011      00
 5012              	.LASF28:
 5013 047d 41524D5F 		.ascii	"ARM_MATH_SIZE_MISMATCH\000"
 5013      4D415448 
 5013      5F53495A 
 5013      455F4D49 
 5013      534D4154 
 5014              	.LASF82:
 5015 0494 414E5431 		.ascii	"ANT1_buf_f32\000"
 5015      5F627566 
 5015      5F663332 
 5015      00
 5016              	.LASF7:
 5017 04a1 5F5F696E 		.ascii	"__int32_t\000"
 5017      7433325F 
 5017      7400
 5018              	.LASF20:
 5019 04ab 63686172 		.ascii	"char8\000"
 5019      3800
 5020              	.LASF33:
 5021 04b1 666C6F61 		.ascii	"float32_t\000"
 5021      7433325F 
 5021      7400
 5022              	.LASF85:
 5023 04bb 78517565 		.ascii	"xQueue_KEY\000"
 5023      75655F4B 
 5023      455900
 5024              	.LASF120:
 5025 04c6 5047415F 		.ascii	"PGA_2_SetGain\000"
 5025      325F5365 
 5025      74476169 
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 206


 5025      6E00
 5026              	.LASF67:
 5027 04d4 75706461 		.ascii	"update_level_flag\000"
 5027      74655F6C 
 5027      6576656C 
 5027      5F666C61 
 5027      6700
 5028              	.LASF46:
 5029 04e6 7265635F 		.ascii	"rec_rf_gain\000"
 5029      72665F67 
 5029      61696E00 
 5030              	.LASF86:
 5031 04f2 78517565 		.ascii	"xQueue_ROT\000"
 5031      75655F52 
 5031      4F5400
 5032              	.LASF107:
 5033 04fd 61726D5F 		.ascii	"arm_mean_f32\000"
 5033      6D65616E 
 5033      5F663332 
 5033      00
 5034              	.LASF112:
 5035 050a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5035      4320342E 
 5035      392E3320 
 5035      32303135 
 5035      30333033 
 5036 053d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 5036      20726576 
 5036      6973696F 
 5036      6E203232 
 5036      31323230 
 5037 0570 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 5037      66756E63 
 5037      74696F6E 
 5037      2D736563 
 5037      74696F6E 
 5038              	.LASF69:
 5039 0598 6361725F 		.ascii	"car_flag\000"
 5039      666C6167 
 5039      00
 5040              	.LASF64:
 5041 05a1 5461736B 		.ascii	"Task_CLCD\000"
 5041      5F434C43 
 5041      4400
 5042              	.LASF51:
 5043 05ab 726D735F 		.ascii	"rms_mv_max\000"
 5043      6D765F6D 
 5043      617800
 5044              	.LASF71:
 5045 05b6 6D65616E 		.ascii	"meanval_sin\000"
 5045      76616C5F 
 5045      73696E00 
 5046              	.LASF32:
 5047 05c2 61726D5F 		.ascii	"arm_status\000"
 5047      73746174 
 5047      757300
 5048              	.LASF19:
ARM GAS  C:\Users\koseki\AppData\Local\Temp\ccvGed2J.s 			page 207


 5049 05cd 696E7431 		.ascii	"int16\000"
 5049      3600
 5050              	.LASF55:
 5051 05d3 616E676C 		.ascii	"angle_max\000"
 5051      655F6D61 
 5051      7800
 5052              	.LASF50:
 5053 05dd 726D735F 		.ascii	"rms_mv_min\000"
 5053      6D765F6D 
 5053      696E00
 5054              	.LASF109:
 5055 05e8 61726D5F 		.ascii	"arm_rms_f32\000"
 5055      726D735F 
 5055      66333200 
 5056              	.LASF49:
 5057 05f4 4741494E 		.ascii	"GAIN_CTL_STRUCT\000"
 5057      5F43544C 
 5057      5F535452 
 5057      55435400 
 5058              	.LASF113:
 5059 0604 434C4344 		.ascii	"CLCD_2x16_control.c\000"
 5059      5F327831 
 5059      365F636F 
 5059      6E74726F 
 5059      6C2E6300 
 5060              	.LASF26:
 5061 0618 41524D5F 		.ascii	"ARM_MATH_ARGUMENT_ERROR\000"
 5061      4D415448 
 5061      5F415247 
 5061      554D454E 
 5061      545F4552 
 5062              	.LASF35:
 5063 0630 55426173 		.ascii	"UBaseType_t\000"
 5063      65547970 
 5063      655F7400 
 5064              	.LASF117:
 5065 063c 53746174 		.ascii	"Status_Reg_1_Read\000"
 5065      75735F52 
 5065      65675F31 
 5065      5F526561 
 5065      6400
 5066              	.LASF80:
 5067 064e 7844656C 		.ascii	"xDelay\000"
 5067      617900
 5068              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
